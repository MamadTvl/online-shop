[{"/Users/tavallai/codes/JS/didartshop-website/src/index.js":"1","/Users/tavallai/codes/JS/didartshop-website/src/App.js":"2","/Users/tavallai/codes/JS/didartshop-website/src/Routes/PrivateRoute.js":"3","/Users/tavallai/codes/JS/didartshop-website/src/Routes/PublicRoute.js":"4","/Users/tavallai/codes/JS/didartshop-website/src/utills/Auth.js":"5","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/ProfilePage.js":"6","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/ForgetPassPage.js":"7","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/CartPage.js":"8","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/ProductPage.js":"9","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/UserInfoPage.js":"10","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/SignUpPage.js":"11","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/HomePage.js":"12","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/AddressesPage.js":"13","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/SearchPage.js":"14","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/LoginPage.js":"15","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/ShopLayout.js":"16","/Users/tavallai/codes/JS/didartshop-website/src/utills/ToFaDigit.js":"17","/Users/tavallai/codes/JS/didartshop-website/src/utills/smoothScroll.js":"18","/Users/tavallai/codes/JS/didartshop-website/src/utills/Hooks/useWindowSize.js":"19","/Users/tavallai/codes/JS/didartshop-website/src/utills/Hooks/useForceUpdate.js":"20","/Users/tavallai/codes/JS/didartshop-website/src/utills/Hooks/useLogin.js":"21","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Footer.js":"22","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Header.js":"23","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useLoginPageStyle.js":"24","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useProfilePageStyle.js":"25","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useAddressesData.js":"26","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useUserOrderData.js":"27","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useMaxPriceData.js":"28","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useForgetPassPageStyle.js":"29","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useUserData.js":"30","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useCartPageStyle.js":"31","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useProductPageStyle.js":"32","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useSearchData.js":"33","/Users/tavallai/codes/JS/didartshop-website/src/Shop/DeleteData/useDeleteAddress.js":"34","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useCategoriesData.js":"35","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePostCart.js":"36","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePostAddress.js":"37","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/useApplyDiscountCode.js":"38","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePathCart.js":"39","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Styles/ShopLayoutStyle.js":"40","/Users/tavallai/codes/JS/didartshop-website/src/Routes/Link/ItemLink.js":"41","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useAddressPageStyle.js":"42","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useHomeData.js":"43","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/Step.js":"44","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/Title.js":"45","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/ForgetPass/ThirdStep.js":"46","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/SignUp/SecondStep.js":"47","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/AddressCard.js":"48","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/OrderCard.js":"49","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Profile/PreviewOrderCard.js":"50","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/FactorCard.js":"51","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/AddressForm.js":"52","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Search/Reducer.js":"53","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/ForgetPass/FirstStep.js":"54","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/TablePaginationActions.js":"55","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Search/FilterPrice.js":"56","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Skeletons/ProfilePageSkeleton.js":"57","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Search/Styles/SearchStyle.js":"58","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/ProuductCard.js":"59","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Profile/PreviewAddressCard.js":"60","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Search/FilterCategory.js":"61","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/SignUp/ThirdStep.js":"62","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/DesktopProduct.js":"63","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/BlogInterView.js":"64","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Slider.js":"65","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Banners.js":"66","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Attributes.js":"67","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/BestSeller.js":"68","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/AmazingOffers.js":"69","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useSignUpPageStyle.js":"70","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/SignUp/FirstStep.js":"71","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePathUserInfo.js":"72","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useCityData.js":"73","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useStateData.js":"74","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useUserInfoPageStyle.js":"75","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Skeletons/ProductPageSkeleton.js":"76","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useProductData.js":"77","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/ProductDetail.js":"78","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/SimilarProducts.js":"79","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/MobileProduct.js":"80","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/CategoriesList.js":"81","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/SocialNetwork.js":"82","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/SearchDialog.js":"83","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/CategoryMenu.js":"84","/Users/tavallai/codes/JS/didartshop-website/src/utills/Hooks/useAxios.js":"85","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/DesktopPhotoViewer.js":"86","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/AddressFactorCard.js":"87","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Search/Styles/FilterStyles.js":"88","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/OrderFactorCard.js":"89","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/StyledRadio.js":"90","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/Styles/useProductCardStyle.js":"91","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Profile/Styles/usePreviewOrderStyle.js":"92","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/ProductGrid.js":"93","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/Styles/ProductsSliderStyle.js":"94","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/ProductsSlider.js":"95","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/Styles/useProductStyle.js":"96","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/Styles/useFactoreCardStyle.js":"97","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/Styles/useOrderCardStyle.js":"98","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/Styles/useAddressCardStyle.js":"99","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Styles/AmazingOffersStyle.js":"100","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Styles/AttributesStyle.js":"101","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Styles/BannersStyle.js":"102","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Skeletons/MobileProductSkeleton.js":"103","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Skeletons/DesktopProductSkeleton.js":"104","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePostComment.js":"105","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/StyledTextField.js":"106","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/CommentCard.js":"107","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/CommentContainer.js":"108","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/DescriptionCard.js":"109","/Users/tavallai/codes/JS/didartshop-website/src/Routes/Link/ListItemLink.js":"110","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useSocialNetworkData.js":"111","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Styles/useHeaderStyle.js":"112","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Styles/Transition.js":"113","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/Styles/usePhotoViewerStyle.js":"114","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/Styles/useAddressFactorCardStyle.js":"115","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/Styles/useOrderFactorCardStyle.js":"116","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/PrevArrow.js":"117","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/NextArrow.js":"118","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/StyledSearchField.js":"119","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Styles/FooterStyle.js":"120","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/Styles/useMobileProductStyle.js":"121","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/useLikingComment.js":"122","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/Styles/useMobilePhotoViewerStyle.js":"123","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/DetailCard.js":"124","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/FullScreenDialog.js":"125","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/MobileCommentCard.js":"126","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/Styles/useProductDetailStyle.js":"127","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/ProductViewCard.js":"128","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/TabPanel.js":"129","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/MobilePhotoViewer.js":"130","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Styles/BlogInterViewStyle.js":"131","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/ImageViewerDialog.js":"132","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/Styles/useImageDilaogStyle.js":"133","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Paymentpage.js":"134","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/usePaymentpageStyle.js":"135","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/AboutUsPage.js":"136","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useAboutUsPageStyle.js":"137","/Users/tavallai/codes/JS/didartshop-website/src/Theme.js":"138"},{"size":218,"mtime":1609789736846,"results":"139","hashOfConfig":"140"},{"size":3528,"mtime":1610789217085,"results":"141","hashOfConfig":"140"},{"size":526,"mtime":1609789736084,"results":"142","hashOfConfig":"140"},{"size":543,"mtime":1609793361463,"results":"143","hashOfConfig":"140"},{"size":569,"mtime":1609793361489,"results":"144","hashOfConfig":"140"},{"size":6466,"mtime":1609793361486,"results":"145","hashOfConfig":"140"},{"size":3852,"mtime":1609793361486,"results":"146","hashOfConfig":"140"},{"size":24252,"mtime":1609793361486,"results":"147","hashOfConfig":"140"},{"size":5268,"mtime":1610705548088,"results":"148","hashOfConfig":"140"},{"size":11259,"mtime":1609793361488,"results":"149","hashOfConfig":"140"},{"size":5394,"mtime":1609793361487,"results":"150","hashOfConfig":"140"},{"size":1178,"mtime":1611359369864,"results":"151","hashOfConfig":"140"},{"size":2674,"mtime":1609793361481,"results":"152","hashOfConfig":"140"},{"size":14722,"mtime":1610627671833,"results":"153","hashOfConfig":"140"},{"size":9783,"mtime":1609793361486,"results":"154","hashOfConfig":"140"},{"size":497,"mtime":1609789736091,"results":"155","hashOfConfig":"140"},{"size":1326,"mtime":1610336392959,"results":"156","hashOfConfig":"140"},{"size":376,"mtime":1609793361489,"results":"157","hashOfConfig":"140"},{"size":599,"mtime":1609789736846,"results":"158","hashOfConfig":"140"},{"size":213,"mtime":1609789736846,"results":"159","hashOfConfig":"140"},{"size":931,"mtime":1609793361489,"results":"160","hashOfConfig":"140"},{"size":3755,"mtime":1611184313220,"results":"161","hashOfConfig":"140"},{"size":17180,"mtime":1610760700843,"results":"162","hashOfConfig":"140"},{"size":3503,"mtime":1609793361487,"results":"163","hashOfConfig":"140"},{"size":2140,"mtime":1609793361487,"results":"164","hashOfConfig":"140"},{"size":806,"mtime":1609793361478,"results":"165","hashOfConfig":"140"},{"size":789,"mtime":1609793361479,"results":"166","hashOfConfig":"140"},{"size":1866,"mtime":1610196128893,"results":"167","hashOfConfig":"140"},{"size":1392,"mtime":1609793361487,"results":"168","hashOfConfig":"140"},{"size":849,"mtime":1609793361479,"results":"169","hashOfConfig":"140"},{"size":3170,"mtime":1609793361487,"results":"170","hashOfConfig":"140"},{"size":638,"mtime":1609793361487,"results":"171","hashOfConfig":"140"},{"size":2411,"mtime":1609793361478,"results":"172","hashOfConfig":"140"},{"size":991,"mtime":1609793361478,"results":"173","hashOfConfig":"140"},{"size":1117,"mtime":1610489726149,"results":"174","hashOfConfig":"140"},{"size":2262,"mtime":1611418058859,"results":"175","hashOfConfig":"140"},{"size":1354,"mtime":1610223772118,"results":"176","hashOfConfig":"140"},{"size":1046,"mtime":1609793361488,"results":"177","hashOfConfig":"140"},{"size":1503,"mtime":1610222903329,"results":"178","hashOfConfig":"140"},{"size":341,"mtime":1609793361480,"results":"179","hashOfConfig":"140"},{"size":776,"mtime":1610310430283,"results":"180","hashOfConfig":"140"},{"size":948,"mtime":1609793361487,"results":"181","hashOfConfig":"140"},{"size":1065,"mtime":1609789736090,"results":"182","hashOfConfig":"140"},{"size":872,"mtime":1609793361474,"results":"183","hashOfConfig":"140"},{"size":1134,"mtime":1610312160883,"results":"184","hashOfConfig":"140"},{"size":2551,"mtime":1609789736085,"results":"185","hashOfConfig":"140"},{"size":6251,"mtime":1609789736089,"results":"186","hashOfConfig":"140"},{"size":2347,"mtime":1609793361463,"results":"187","hashOfConfig":"140"},{"size":13142,"mtime":1610247978238,"results":"188","hashOfConfig":"140"},{"size":3172,"mtime":1609793361473,"results":"189","hashOfConfig":"140"},{"size":1743,"mtime":1609793361463,"results":"190","hashOfConfig":"140"},{"size":8627,"mtime":1609793361473,"results":"191","hashOfConfig":"140"},{"size":1141,"mtime":1609793361477,"results":"192","hashOfConfig":"140"},{"size":1655,"mtime":1609793361464,"results":"193","hashOfConfig":"140"},{"size":7066,"mtime":1610628617089,"results":"194","hashOfConfig":"140"},{"size":2816,"mtime":1609793361477,"results":"195","hashOfConfig":"140"},{"size":1935,"mtime":1609789736090,"results":"196","hashOfConfig":"140"},{"size":3130,"mtime":1610209812571,"results":"197","hashOfConfig":"140"},{"size":5629,"mtime":1610195454770,"results":"198","hashOfConfig":"140"},{"size":3513,"mtime":1609793361473,"results":"199","hashOfConfig":"140"},{"size":4812,"mtime":1609789736089,"results":"200","hashOfConfig":"140"},{"size":8911,"mtime":1609793361478,"results":"201","hashOfConfig":"140"},{"size":14280,"mtime":1611418411416,"results":"202","hashOfConfig":"140"},{"size":2362,"mtime":1609789736086,"results":"203","hashOfConfig":"140"},{"size":849,"mtime":1609793361464,"results":"204","hashOfConfig":"140"},{"size":2438,"mtime":1610786330311,"results":"205","hashOfConfig":"140"},{"size":1299,"mtime":1609789736085,"results":"206","hashOfConfig":"140"},{"size":1570,"mtime":1609789736086,"results":"207","hashOfConfig":"140"},{"size":1246,"mtime":1611359218507,"results":"208","hashOfConfig":"140"},{"size":2977,"mtime":1609793361487,"results":"209","hashOfConfig":"140"},{"size":1711,"mtime":1609793361477,"results":"210","hashOfConfig":"140"},{"size":1317,"mtime":1609793361488,"results":"211","hashOfConfig":"140"},{"size":787,"mtime":1609793361478,"results":"212","hashOfConfig":"140"},{"size":767,"mtime":1609793361479,"results":"213","hashOfConfig":"140"},{"size":1290,"mtime":1609793361487,"results":"214","hashOfConfig":"140"},{"size":667,"mtime":1609789736090,"results":"215","hashOfConfig":"140"},{"size":981,"mtime":1609793361478,"results":"216","hashOfConfig":"140"},{"size":8512,"mtime":1610789287448,"results":"217","hashOfConfig":"140"},{"size":1409,"mtime":1610194904967,"results":"218","hashOfConfig":"140"},{"size":1066,"mtime":1609793361472,"results":"219","hashOfConfig":"140"},{"size":1082,"mtime":1609793361479,"results":"220","hashOfConfig":"140"},{"size":9979,"mtime":1609789736091,"results":"221","hashOfConfig":"140"},{"size":3083,"mtime":1609789736091,"results":"222","hashOfConfig":"140"},{"size":2941,"mtime":1610336044942,"results":"223","hashOfConfig":"140"},{"size":264,"mtime":1609789736846,"results":"224","hashOfConfig":"140"},{"size":5566,"mtime":1611418442071,"results":"225","hashOfConfig":"140"},{"size":2412,"mtime":1609793361463,"results":"226","hashOfConfig":"140"},{"size":5049,"mtime":1609793361477,"results":"227","hashOfConfig":"140"},{"size":1836,"mtime":1609793361463,"results":"228","hashOfConfig":"140"},{"size":321,"mtime":1609793361474,"results":"229","hashOfConfig":"140"},{"size":2066,"mtime":1610860686238,"results":"230","hashOfConfig":"140"},{"size":931,"mtime":1609793361473,"results":"231","hashOfConfig":"140"},{"size":758,"mtime":1609793361473,"results":"232","hashOfConfig":"140"},{"size":1588,"mtime":1610417036440,"results":"233","hashOfConfig":"140"},{"size":4921,"mtime":1610197051368,"results":"234","hashOfConfig":"140"},{"size":3970,"mtime":1609793361473,"results":"235","hashOfConfig":"140"},{"size":926,"mtime":1609793361464,"results":"236","hashOfConfig":"140"},{"size":4200,"mtime":1610248233012,"results":"237","hashOfConfig":"140"},{"size":1160,"mtime":1609793361464,"results":"238","hashOfConfig":"140"},{"size":1804,"mtime":1610417036434,"results":"239","hashOfConfig":"140"},{"size":1664,"mtime":1609793361471,"results":"240","hashOfConfig":"140"},{"size":1783,"mtime":1609793361471,"results":"241","hashOfConfig":"140"},{"size":2891,"mtime":1609789736090,"results":"242","hashOfConfig":"140"},{"size":3192,"mtime":1609789736090,"results":"243","hashOfConfig":"140"},{"size":1069,"mtime":1609793361488,"results":"244","hashOfConfig":"140"},{"size":487,"mtime":1609789736088,"results":"245","hashOfConfig":"140"},{"size":7122,"mtime":1609793361471,"results":"246","hashOfConfig":"140"},{"size":9250,"mtime":1610789287456,"results":"247","hashOfConfig":"140"},{"size":1692,"mtime":1609789736086,"results":"248","hashOfConfig":"140"},{"size":1203,"mtime":1609793361463,"results":"249","hashOfConfig":"140"},{"size":829,"mtime":1609789736090,"results":"250","hashOfConfig":"140"},{"size":5108,"mtime":1610760700819,"results":"251","hashOfConfig":"140"},{"size":165,"mtime":1609789736091,"results":"252","hashOfConfig":"140"},{"size":1718,"mtime":1609793361473,"results":"253","hashOfConfig":"140"},{"size":890,"mtime":1609793361464,"results":"254","hashOfConfig":"140"},{"size":1057,"mtime":1609793361464,"results":"255","hashOfConfig":"140"},{"size":949,"mtime":1609789736088,"results":"256","hashOfConfig":"140"},{"size":949,"mtime":1609789736088,"results":"257","hashOfConfig":"140"},{"size":858,"mtime":1609793361480,"results":"258","hashOfConfig":"140"},{"size":2104,"mtime":1610758025166,"results":"259","hashOfConfig":"140"},{"size":5414,"mtime":1609793361473,"results":"260","hashOfConfig":"140"},{"size":1038,"mtime":1609793361488,"results":"261","hashOfConfig":"140"},{"size":1059,"mtime":1609793361472,"results":"262","hashOfConfig":"140"},{"size":1671,"mtime":1609789736087,"results":"263","hashOfConfig":"140"},{"size":2147,"mtime":1609789736087,"results":"264","hashOfConfig":"140"},{"size":7722,"mtime":1609793361472,"results":"265","hashOfConfig":"140"},{"size":2233,"mtime":1609793361473,"results":"266","hashOfConfig":"140"},{"size":9010,"mtime":1610196462607,"results":"267","hashOfConfig":"140"},{"size":734,"mtime":1609789736088,"results":"268","hashOfConfig":"140"},{"size":2964,"mtime":1611359218514,"results":"269","hashOfConfig":"140"},{"size":1781,"mtime":1609793361471,"results":"270","hashOfConfig":"140"},{"size":2521,"mtime":1610404828290,"results":"271","hashOfConfig":"140"},{"size":775,"mtime":1610404428977,"results":"272","hashOfConfig":"140"},{"size":6083,"mtime":1610687146213,"results":"273","hashOfConfig":"140"},{"size":1727,"mtime":1610687101508,"results":"274","hashOfConfig":"140"},{"size":2822,"mtime":1610785223130,"results":"275","hashOfConfig":"140"},{"size":1109,"mtime":1610758403371,"results":"276","hashOfConfig":"140"},{"size":1064,"mtime":1610698670427,"results":"277","hashOfConfig":"140"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},"19grmed",{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"280"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"280"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"280"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"280"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"280"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"280"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"280"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"280"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"280"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"280"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"280"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"362","messages":"363","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"280"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"280"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"280"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"280"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"280"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"280"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"280"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"280"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"280"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"280"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"280"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"280"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"280"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"280"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"280"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},"/Users/tavallai/codes/JS/didartshop-website/src/index.js",[],["581","582"],"/Users/tavallai/codes/JS/didartshop-website/src/App.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Routes/PrivateRoute.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Routes/PublicRoute.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/utills/Auth.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/ProfilePage.js",["583"],"import React, {useEffect, useState} from \"react\";\nimport Title from \"../Components/Public/Title\";\nimport {Button, Card, Typography} from \"@material-ui/core\";\nimport profileImage from '../../img/profile.png'\nimport PreviewOrderCard from \"../Components/Profile/PreviewOrderCard\";\nimport {useProfilePageStyle} from \"./Styles/useProfilePageStyle\";\nimport PreviewAddressCard from \"../Components/Profile/PreviewAddressCard\";\nimport {useHistory} from 'react-router-dom'\nimport useUserData from \"../FetchData/useUserData\";\nimport {toFaDigit} from \"../../utills/ToFaDigit\";\nimport ProfilePageSkeleton from \"../Components/Skeletons/ProfilePageSkeleton\";\nimport useAddressesData from \"../FetchData/useAddressesData\";\nimport useDeleteAddress from \"../DeleteData/useDeleteAddress\";\nimport {SmoothVerticalScrolling} from \"../../utills/smoothScroll\";\nimport useUserOrderData from \"../FetchData/useUserOrderData\";\n\nfunction ProfilePage() {\n    const [fetchDelete, setFetchDelete] = useState(false)\n    const [fetchAddresses, setFetchAddresses] = useState(true)\n\n    const [deleteId, setDeleteId] = useState(0)\n    const [loadingUserData, userDataResult] = useUserData(true)\n    const [loadingAddressesData, addressesDataResult] = useAddressesData(fetchAddresses)\n    const [loadingOrderData, orderDataResult] = useUserOrderData(true)\n    const [loadingDeleteAddress, deleteAddressResult] = useDeleteAddress(fetchDelete, deleteId)\n    const classes = useProfilePageStyle()\n    const history = useHistory()\n\n    const handleDeleteAddress = (id) => {\n        setDeleteId(id)\n        setFetchDelete(true)\n    }\n\n    useEffect(() => {\n        if (!loadingAddressesData) {\n            setFetchAddresses(false)\n        }\n    }, [loadingAddressesData, addressesDataResult])\n\n    useEffect(() => {\n        if (!loadingDeleteAddress && fetchDelete) {\n            if (deleteAddressResult) {\n                setFetchAddresses(true)\n                setFetchDelete(false)\n            }\n        }\n    }, [loadingDeleteAddress, deleteAddressResult])\n\n    if (loadingUserData || loadingAddressesData || loadingDeleteAddress || loadingOrderData)\n        return <ProfilePageSkeleton/>\n    return (\n        <>\n            <div className={classes.container}>\n                <Title title={'پروفایل کاربری'}/>\n                <Card className={classes.profileCard}>\n                    <div className={classes.profileContent}>\n                        <img className={classes.image} src={profileImage} alt={'profile'}/>\n                        <div className={classes.profileDetail}>\n                            <Typography className={classes.name}>{userDataResult.name_and_last_name}</Typography>\n                            <Typography\n                                className={classes.mobileNumber}>{toFaDigit((userDataResult.mobile_number).toString())}</Typography>\n                        </div>\n                    </div>\n                    <div className={classes.actionContainer}>\n                        <Button\n                            onClick={() => {\n                                SmoothVerticalScrolling(document.body, 500, \"top\")\n                                history.push('/profile/personal-info')\n                            }}\n                            className={classes.editButton}\n                            variant={'outlined'}\n                        >\n                            ویرایش اطلاعات کاربری\n                        </Button>\n                        <Button\n                            style={{marginTop: 8}}\n                            onClick={() => {\n                                localStorage.removeItem('Authorization')\n                                history.go(0)\n                            }}\n                            className={classes.editButton}\n                            variant={'outlined'}\n                        >\n                            خروج\n                        </Button>\n                    </div>\n                </Card>\n                <Typography className={classes.title}>سفارشات شما</Typography>\n                <div className={classes.cardsContainer}>\n                    {\n                        orderDataResult.map((order) => (\n                            <div key={Math.round(order.create_date)}>\n                                <PreviewOrderCard order={order}/>\n                            </div>\n                        ))\n                    }\n                    {\n                        orderDataResult.length === 0 &&\n                            <Typography\n                                style={{fontWeight: 500, fontSize: 16, textAlign: 'center'}}\n                                className={classes.title}>\n                                سفارشی ثبت نشده\n                            </Typography>\n                    }\n                </div>\n                <div style={{marginTop: 22, marginBottom: 16, display: 'flex', justifyContent: 'space-between'}}>\n                    <Typography style={{margin: 'auto 0'}} className={classes.title}>آدرس‌های شما</Typography>\n                    <Button\n                        onClick={() => {\n                            SmoothVerticalScrolling(document.body, 500, \"top\")\n                            history.push('/profile/addresses')\n                        }}\n                    >\n                        <Typography\n                            className={classes.addAddress}\n                        >\n                            افزودن آدرس\n                        </Typography>\n                    </Button>\n                </div>\n                <div className={classes.cardsContainer}>\n                    {\n                        addressesDataResult.map((address) => (\n                            <div key={address.id}>\n                                <PreviewAddressCard data={address} handleDelete={handleDeleteAddress}/>\n                            </div>\n                        ))\n                    }\n                    {\n                        addressesDataResult.length === 0 &&\n                        <Typography\n                            style={{fontWeight: 500, fontSize: 16, textAlign: 'center'}}\n                            className={classes.title}>\n                            آدرسی ثبت نشده\n                        </Typography>\n                    }\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default ProfilePage","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/ForgetPassPage.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/CartPage.js",["584","585","586","587","588","589"],"import React, {useEffect, useState} from \"react\";\nimport {useCartPageStyle} from \"./Styles/useCartPageStyle\";\nimport {\n    Backdrop,\n    Button,\n    Card,\n    CircularProgress,\n    Divider,\n    Grid,\n    InputAdornment,\n    TextField,\n    Typography\n} from \"@material-ui/core\";\nimport Title from \"../Components/Public/Title\";\nimport Step from \"../Components/Public/Step\";\nimport OrderCard from \"../Components/Cart/OrderCard\";\nimport AddressCard from \"../Components/Cart/AddressCard\";\nimport AddressForm from \"../Components/Public/AddressForm\";\nimport FactorCard from \"../Components/Cart/FactorCard\";\nimport usePostCart from \"../PostData/usePostCart\";\nimport {separateDigit} from \"../../utills/ToFaDigit\";\nimport PropTypes from \"prop-types\"\nimport useAddressesData from \"../FetchData/useAddressesData\";\nimport useForceUpdate from \"../../utills/Hooks/useForceUpdate\";\nimport useApplyDiscountCode from \"../PostData/useApplyDiscountCode\";\nimport usePathCart from \"../PostData/usePathCart\";\nimport usePostAddress from \"../PostData/usePostAddress\";\nimport {SmoothVerticalScrolling} from \"../../utills/smoothScroll\";\n\n\nfunction CartPage(props) {\n    const localStorageCart = JSON.parse(localStorage.getItem('cart'))\n    const forceUpdate = useForceUpdate()\n    const [fetchPostCart, setFetchPostCart] = useState(true)\n    const [fetchPostAddress, setFetchPostAddress] = useState(false)\n    const [fetchApplyCode, setFetchApplyCode] = useState(false)\n    const [fetchPathCart, setFetchPathCart] = useState(false)\n    const [selectedAddress, setSelectedAddress] = useState({\n        city: null,\n        state: null,\n        email: '',\n        address: '',\n        post_code: '',\n        costumer_name: '',\n        phone_number: '',\n    })\n    const {setBasketChange} = props\n    const [postCartLoading, postCartResult] = usePostCart(fetchPostCart)\n    const [addressesDataLoading, addressesDataResult] = useAddressesData(true)\n\n    const [addressCheckboxes, setAddressCheckboxes] = useState([])\n    const classes = useCartPageStyle()\n    const [step, setStep] = useState(0)\n\n    const [addressStep, setAddressStep] = useState(0)\n    const [basketDetails, setBasketDetails] = useState({\n        boxes: [],\n        basket: {\n            address: null,\n            basket_code: \"\",\n            boxes_list: [],\n            city: null,\n            city_obj: {name: \"\", id: null},\n            costumer_name: null,\n            create_date: 0,\n            details: null,\n            discount_code: null,\n            free_transmission: false,\n            gift: false,\n            id: 0,\n            merchandise_number: 0,\n            phone_number: null,\n            post_code: null,\n            state: null,\n            state_obj: {name: \"\", id: null},\n            total_basket_price: 0,\n            total_basket_price_with_discount: 0,\n            user: 0,\n            email: null,\n            approved: false,\n        },\n    })\n    const [addressValues, setAddressValues] = useState({\n        name: '',\n        mobileNumber: '',\n        email: '',\n        state: {\n            name: '',\n            id: null\n        },\n        city: {\n            name: '',\n            id: null\n        },\n        code: '',\n        address: ''\n    })\n    const [postAddressLoading, postAddressResult] = usePostAddress(fetchPostAddress, addressValues)\n    const [details, setDetails] = useState('')\n    const [discountCode, setDiscountCode] = useState('')\n    const [applyCodeLoading, applyCodeResult] = useApplyDiscountCode(fetchApplyCode, basketDetails.basket.id, discountCode)\n    const [pathCartLoading, pathCartResult] = usePathCart(fetchPathCart, basketDetails.basket.id, selectedAddress, details)\n    document.title = 'سبد خرید'\n\n    const [errors, setErrors] = useState({\n        name: false,\n        mobileNumber: false,\n        email: false,\n        discountCode: false,\n        address: false\n    })\n\n    const setTitle = (step) => {\n        switch (step) {\n            case 0:\n                return 'سبد خرید'\n            case 1:\n                return 'تکمیل آدرس و مشخصات'\n            case 2:\n                return 'پیش فاکتور'\n            default:\n                break\n        }\n\n    }\n\n    const findIndexOfCart = (prvBox) => {\n        const localStorageCart = JSON.parse(localStorage.getItem('cart'))\n\n        for (let i = 0; i < localStorageCart.length; i++) {\n            if (localStorageCart[i].id === prvBox.id\n                && localStorageCart[i].color === prvBox.color\n                && localStorageCart[i].size === prvBox.size\n                && localStorageCart[i].count === prvBox.count) {\n                return i\n            }\n        }\n        return -1\n    }\n\n    const handleDelete = (prvBox) => {\n        let cart = []\n        const localStorageCart = JSON.parse(localStorage.getItem('cart'))\n        for (let i = 0; i < localStorageCart.length; i++) {\n            cart.push(localStorageCart[i])\n        }\n\n        cart = cart.filter(item => item !== cart[findIndexOfCart(prvBox)])\n        if (cart.length === 0){\n            localStorage.removeItem('cart')\n            setBasketDetails({\n                boxes: [],\n                basket: {\n                    address: null,\n                    basket_code: \"\",\n                    boxes_list: [],\n                    city: null,\n                    city_obj: {name: \"\", id: null},\n                    costumer_name: null,\n                    create_date: 0,\n                    details: null,\n                    discount_code: null,\n                    free_transmission: false,\n                    gift: false,\n                    id: 0,\n                    merchandise_number: 0,\n                    phone_number: null,\n                    post_code: null,\n                    state: null,\n                    state_obj: {name: \"\", id: null},\n                    total_basket_price: 0,\n                    total_basket_price_with_discount: 0,\n                    user: 0,\n                    email: null,\n                    approved: false,\n                },\n            })\n        }else {\n            localStorage.setItem('cart', JSON.stringify(cart))\n        }\n\n        setBasketChange(prvState => prvState + 1)\n        setFetchPostCart(true)\n    }\n\n    const isDuplicate = (newBox) => {\n        const localStorageCart = JSON.parse(localStorage.getItem('cart'))\n        for (let i = 0; i < localStorageCart.length; i++) {\n            if (localStorageCart[i].id === newBox.id\n                && localStorageCart[i].color === newBox.color\n                && localStorageCart[i].size === newBox.size) {\n                return true\n            }\n\n        }\n        return false\n    }\n\n    const onChangeSelects = (prvBox, newBox) => {\n        let cart = []\n        // if (!isDuplicate(newBox)) { //todo: duplicate bug\n        const localStorageCart = JSON.parse(localStorage.getItem('cart'))\n        localStorageCart[findIndexOfCart(prvBox)] = newBox\n        for (let i = 0; i < localStorageCart.length; i++) {\n            cart.push(localStorageCart[i])\n        }\n        localStorage.setItem('cart', JSON.stringify(cart))\n        setBasketChange(prvState => prvState + 1)\n        setFetchPostCart(true)\n    }\n\n    const handleClickContinue = (event) => {\n        event.preventDefault()\n        if (step === 0) {\n            setStep(1)\n        } else if (step === 1) {\n            if (addressStep === 0) {\n                for (let i = 0; i < addressCheckboxes.length; i++) {\n                    if (addressCheckboxes[i].checked === true) {\n                        setSelectedAddress(addressesDataResult[i])\n                    }\n                }\n                setFetchPathCart(true)\n            } else {\n                setSelectedAddress({\n                    city: addressValues.city.id,\n                    state: addressValues.state.id,\n                    email: addressValues.email,\n                    address: addressValues.address,\n                    post_code: addressValues.code,\n                    costumer_name: addressValues.name,\n                    phone_number: addressValues.mobileNumber,\n                })\n                setFetchPathCart(true)\n                setFetchPostAddress(true)\n            }\n\n        }\n        SmoothVerticalScrolling(document.body, 500, \"top\")\n    }\n\n\n    useEffect(() => {\n        if (!postCartLoading && fetchPostCart && localStorageCart) {\n            setBasketDetails({\n                boxes: postCartResult.boxes,\n                basket: postCartResult.basket,\n            })\n            setFetchPostCart(false)\n            discountCode !== '' && setFetchApplyCode(true)\n\n        }\n    }, [postCartLoading, postCartResult])\n\n    useEffect(() => {\n        if (!addressesDataLoading) {\n            let checkboxes = []\n            for (let i = 0; i < addressesDataResult.length; i++) {\n                checkboxes.push({id: addressesDataResult[i].id, checked: i === 0})\n            }\n            setAddressCheckboxes(checkboxes)\n            if (checkboxes.length === 0){\n                setAddressStep(1)\n            }\n        }\n    }, [addressesDataLoading, addressesDataResult])\n\n    useEffect(() => {\n        if (!pathCartLoading && fetchPathCart && localStorageCart) {\n            setBasketDetails({\n                ...basketDetails,\n                basket: pathCartResult,\n            })\n            setStep(2)\n            setFetchPathCart(false)\n        }\n\n    }, [pathCartLoading, pathCartResult])\n\n    const updateAddress = () => {\n        forceUpdate()\n    }\n\n    useEffect(() => {\n        if (!applyCodeLoading) {\n            if (applyCodeResult.status === 'success') {\n                setBasketDetails({\n                    ...basketDetails,\n                    basket: applyCodeResult.data,\n                })\n            } else {\n                setErrors({...errors, discountCode: true})\n                setTimeout(\n                    () => setErrors({...errors, discountCode: false})\n                    , 5000)\n            }\n            setFetchApplyCode(false)\n        }\n\n    }, [applyCodeLoading, applyCodeResult])\n\n    useEffect(() => {\n        if (!postAddressLoading && fetchPostAddress) {\n\n            setFetchPostAddress(false)\n        }\n    }, [postAddressLoading, postAddressResult])\n\n    useEffect(() => {\n        setBasketChange(prevState => prevState + 1)\n    }, [])\n\n    return (\n        <>\n            <Backdrop\n                className={classes.backdrop}\n                open={postCartLoading || addressesDataLoading || applyCodeLoading || pathCartLoading || postAddressLoading}\n            >\n                <CircularProgress size={70} color=\"inherit\"/>\n            </Backdrop>\n            <form className={classes.container} onSubmit={handleClickContinue}>\n                <Title title={setTitle(step)}/>\n                <Grid container spacing={3}>\n                    <Grid item md={9} xs={12}>\n                        <Step stepClass={classes.orderCardsStep} index={0} step={step}>\n                            {\n                                basketDetails.boxes.map((box) => (\n                                    <div key={box.id}>\n                                        <OrderCard\n                                            box={box}\n                                            onChangeSelects={onChangeSelects}\n                                            product={box.merchandise_obj}\n                                            deleteHandler={handleDelete}\n                                        />\n                                    </div>\n\n                                ))\n\n                            }\n                            {\n                                basketDetails.boxes.length=== 0 &&\n                                <Typography style={{textAlign: 'center', fontSize: 22}} className={classes.discountTitle}>\n                                    سبد خرید شما خالی است\n                                </Typography>\n                            }\n                        </Step>\n                        <Step stepClass={classes.orderCardsStep} index={1} step={step}>\n                            <Step stepClass={classes.orderCardsStep} index={0} step={addressStep}>\n                                {\n                                    addressesDataResult.map((address, index) => (\n                                        <div key={address.id}>\n                                            <AddressCard\n                                                data={address}\n                                                addressCheckbox={addressCheckboxes[index]}\n                                                index={index}\n                                                setAddressCheckboxes={setAddressCheckboxes}\n                                                forceUpdate={updateAddress}\n                                            />\n                                        </div>\n                                    ))\n                                }\n                            </Step>\n                            <Step stepClass={classes.orderCardsStep} index={1} step={addressStep}>\n                                <AddressForm\n                                    values={addressValues}\n                                    setValues={setAddressValues}\n                                    errors={errors}\n                                    setErrors={setErrors}\n                                />\n                            </Step>\n\n                            <Button\n                                variant={'text'}\n                                className={classes.addAddress}\n                                onClick={() => setAddressStep(prevState => {\n                                    if (addressesDataResult.length === 0){\n                                        return 1\n                                    }\n                                    return prevState === 0 ? 1 : 0\n                                })}\n                            >\n                                {`${addressStep === 0 ? 'افزودن آدرس جدید' : 'آدرس‌های شما'}`}\n                            </Button>\n                            <Typography className={classes.title}>توضیحات سفارش</Typography>\n                            <Card className={classes.card}>\n                                <Typography className={classes.descriptionLabel}>توضیحات</Typography>\n                                <TextField\n                                    multiline\n                                    rows={4}\n                                    value={details}\n                                    onChange={(event) => setDetails(event.target.value)}\n                                    InputProps={{\n                                        classes: {\n                                            input: classes.input,\n                                        }\n                                    }}\n                                    fullWidth\n                                    variant=\"outlined\"\n                                />\n                            </Card>\n                        </Step>\n                        <Step index={2} step={step} >\n                            <Card style={{width: '100%'}} className={classes.card}>\n                                <FactorCard products={basketDetails.boxes} info={basketDetails.basket}/>\n                            </Card>\n\n                        </Step>\n\n                    </Grid>\n\n                    <Grid item md={3} xs={12}>\n                        <Card className={classes.card}>\n                            <Typography className={classes.discountTitle}>کد تخفیف</Typography>\n                            <TextField\n                                disabled={basketDetails.boxes.length === 0}\n                                dir={'ltr'}\n                                value={discountCode}\n                                onChange={\n                                    (event) => setDiscountCode(event.target.value)\n                                }\n                                margin={'normal'}\n                                error={errors.discountCode}\n                                fullWidth\n                                InputProps={{\n                                    classes: {\n                                        input: classes.input,\n                                        root: classes.textFieldRoot,\n                                    },\n                                    startAdornment:\n                                        <InputAdornment position={\"start\"}>\n                                            <Button\n                                                disabled={basketDetails.boxes.length === 0}\n                                                size={\"small\"}\n                                                className={classes.save}\n                                                variant={\"contained\"}\n                                                onClick={() => {\n                                                    if (discountCode === '') {\n                                                        setDiscountCode('')\n                                                        setErrors({...errors, discountCode: true})\n                                                        setTimeout(\n                                                            () => setErrors({...errors, discountCode: false})\n                                                            , 5000)\n                                                    } else {\n                                                        setFetchApplyCode(true)\n                                                    }\n\n                                                }}\n                                            >\n                                                ثبت\n                                            </Button>\n                                        </InputAdornment>\n                                }}\n                                variant=\"outlined\"\n                            />\n                        </Card>\n                        <Step index={2} step={step}>\n                            <Card style={{width: '100%'}} className={classes.card}>\n                                <Typography style={{marginBottom: 16}}\n                                            className={classes.discountTitle}>توضیحات</Typography>\n                                <Typography\n                                    className={classes.descriptionLabel}>{basketDetails.basket.details && basketDetails.basket.details}</Typography>\n                            </Card>\n                        </Step>\n                        <Card className={classes.card}>\n                            <div style={{marginBottom: 8,}} className={classes.detailContainer}>\n                                <Typography className={classes.detailTitle}>تعداد کالا</Typography>\n                                <Typography\n                                    className={classes.number}>{separateDigit(basketDetails.basket.merchandise_number)}</Typography>\n                            </div>\n                            <Divider/>\n                            <div className={classes.detail}>\n                                <div className={classes.detailContainer}>\n                                    <Typography className={classes.detailTitle}>قیمت کالاها</Typography>\n                                    <div className={classes.priceContainer}>\n                                        <Typography\n                                            className={classes.number}\n                                        >\n                                            {separateDigit(basketDetails.basket.total_basket_price)}\n                                        </Typography>\n                                        <Typography className={classes.toman}>تومان</Typography>\n                                    </div>\n                                </div>\n                                <div className={classes.detailContainer}>\n                                    <Typography className={classes.detailTitle}>تخفیف</Typography>\n                                    <div className={classes.priceContainer}>\n                                        <Typography style={{color: '#F16522'}}\n                                                    className={classes.number}>\n                                            {separateDigit(basketDetails.basket.total_basket_price - basketDetails.basket.total_basket_price_with_discount)}\n                                        </Typography>\n                                        <Typography className={classes.toman}>تومان</Typography>\n                                    </div>\n                                </div>\n                                <div style={{marginBottom: 0}} className={classes.detailContainer}>\n                                    <Typography className={classes.detailTitle}>هزینه ارسال</Typography>\n                                    <div className={classes.priceContainer}>\n                                        <Typography\n                                            style={{opacity: 0.6, fontWeight: 'normal', fontSize: 16}}\n                                            className={classes.number}\n                                        >\n                                            {basketDetails.basket.free_transmission ? 'رایگان' : 'به عهده مشتری'}\n                                        </Typography>\n                                    </div>\n                                </div>\n                            </div>\n                            <Divider/>\n                            <div style={{marginTop: 11, marginBottom: 0}} className={classes.detailContainer}>\n                                <Typography className={classes.detailTitle}>مبلغ قابل پرداخت</Typography>\n                                <div className={classes.priceContainer}>\n                                    <Typography\n                                        className={classes.number}\n                                    >\n                                        {separateDigit(basketDetails.basket.total_basket_price_with_discount)}\n                                    </Typography>\n                                    <Typography className={classes.toman}>تومان</Typography>\n                                </div>\n                            </div>\n                            <div style={{width: '100%', float: 'left', marginTop: 24}}>\n                                <Button\n                                    disabled={basketDetails.boxes.length === 0}\n                                    fullWidth\n                                    type={'submit'}\n                                    className={classes.shopButton}\n                                    variant={'contained'}\n                                >\n                                    ادامه خرید\n                                </Button>\n                            </div>\n                            {\n                                step !== 0 &&\n                                <div style={{width: '100%', float: 'left', marginTop: 24}}>\n                                    <Button\n                                        fullWidth\n                                        onClick={() => {\n                                            setStep(step - 1)\n                                            SmoothVerticalScrolling(document.body, 500, \"top\")\n                                        }}\n                                        className={classes.backButton}\n                                        variant={'outlined'}\n                                    >\n                                        بازگشت به مرحله قبل\n                                    </Button>\n                                </div>\n                            }\n                        </Card>\n                    </Grid>\n                </Grid>\n            </form>\n        </>\n    )\n}\n\nCard.propTypes = {\n    setBasketChange: PropTypes.func.isRequired,\n}\n\nexport default CartPage","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/ProductPage.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/UserInfoPage.js",["590","591"],"import React, {useEffect, useState} from \"react\";\nimport {Button, Card, CircularProgress, Grid, MenuItem, TextField, Typography} from \"@material-ui/core\";\nimport {useUserInfoPageStyle} from \"./Styles/useUserInfoPageStyle\";\nimport Title from \"../Components/Public/Title\";\nimport useWindowSize from \"../../utills/Hooks/useWindowSize\";\nimport useUserData from \"../FetchData/useUserData\";\nimport {toFaDigit} from \"../../utills/ToFaDigit\";\nimport useStateData from \"../FetchData/useStateData\";\nimport useCityData from \"../FetchData/useCityData\";\nimport usePathUserInfo from \"../PostData/usePathUserInfo\";\n\nfunction UserInfoPage() {\n    const [loading, result] = useUserData(true)\n    const classes = useUserInfoPageStyle()\n    const size = useWindowSize()\n    const [values, setValues] = useState({\n        name: '',\n        mobileNumber: '',\n        email: '',\n        state: {\n            name: '',\n            id: null,\n        },\n        city: {\n            name: '',\n            id: null,\n        },\n    })\n    const [fetchCities, setFetchCities] = useState(false)\n    const [statesLoading, states] = useStateData(true)\n    const [citiesLoading, cities] = useCityData(fetchCities, values.state.id)\n    const [fetchSubmit, setFetchSubmit] = useState(false)\n    const [updateLoading, updateResult] = usePathUserInfo(fetchSubmit, result.id, values)\n\n    const [errors, setErrors] = useState({\n        name: false,\n        mobileNumber: false,\n        email: false,\n    })\n    const findStateId = (name) => {\n        for (let i = 0; i < states.length; i++) {\n            if (states[i].name === name) {\n                return states[i].id\n            }\n        }\n    }\n    const findCityId = (name) => {\n        for (let i = 0; i < cities.length; i++) {\n            if (cities[i].name === name) {\n                return cities[i].id\n            }\n        }\n    }\n\n    const handleChange = (prop) => (event) => {\n        setValues({...values, [prop]: event.target.value})\n    }\n    useEffect(() => {\n        if (!loading) {\n            setValues({\n                ...values,\n                name: result.name_and_last_name,\n                mobileNumber: result.mobile_number,\n                email: result.email,\n                state: result.state\n                    ? {\n                        name: result.state_name,\n                        id: result.state\n                    }\n                    : {\n                        name: '',\n                        id: null,\n                    },\n                city: result.city\n                    ? {\n                        name: result.city_name,\n                        id: result.city,\n                    }\n                    : {\n                        name: '',\n                        id: null,\n                    }\n\n            })\n            setFetchCities(true)\n        }\n    }, [loading, result])\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        if (!values.email.includes('@')) {\n            setErrors({\n                ...errors,\n                email: true,\n            })\n            setTimeout(\n                () => setErrors({...errors, email: false})\n                , 5000)\n        } else {\n            setFetchSubmit(true)\n        }\n    }\n\n    return (\n        <>\n            <form className={classes.container} onSubmit={handleSubmit}>\n                <Title title={'ویرایش اطلاعات کاربری'}/>\n                <Card className={classes.card}>\n                    <Grid container spacing={4}>\n                        <Grid item md={6} xs={12}>\n                            <Typography className={classes.label}>نام و نام‌خانوادگی</Typography>\n                            <TextField\n                                required\n                                disabled={loading}\n                                error={errors.name}\n                                value={values.name}\n                                onChange={handleChange('name')}\n                                InputProps={{\n                                    classes: {\n                                        input: classes.input,\n                                        root: classes.textFieldRoot,\n                                    }\n                                }}\n                                fullWidth\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <Typography className={classes.label}>شماره موبایل</Typography>\n                            <TextField\n                                required\n                                disabled\n                                dir={'ltr'}\n                                error={errors.mobileNumber}\n                                value={toFaDigit((values.mobileNumber).toString())}\n                                onChange={handleChange('mobileNumber')}\n                                InputProps={{\n                                    classes: {\n                                        input: classes.input,\n                                        root: classes.textFieldRoot,\n                                    }\n                                }}\n                                fullWidth\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <Typography className={classes.label}>آدرس پست الکترونیک</Typography>\n                            <TextField\n                                required\n                                disabled={loading}\n                                dir={'ltr'}\n                                error={errors.email}\n                                value={values.email}\n                                onChange={handleChange('email')}\n                                InputProps={{\n                                    classes: {\n                                        input: classes.input,\n                                        root: classes.textFieldRoot,\n                                    }\n                                }}\n                                fullWidth\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <Typography className={classes.label}>استان</Typography>\n                            <TextField\n                                required\n                                disabled={statesLoading || loading}\n                                select\n                                placeholder={'استان خود را انتخاب کنید'}\n                                value={values.state.name ? values.state.name : ''}\n                                onChange={(event) => {\n                                    setFetchCities(false)\n                                    setValues({\n                                        ...values,\n                                        state: {\n                                            name: event.target.value,\n                                            id: findStateId(event.target.value)\n                                        },\n                                        city: {\n                                            name: '',\n                                            id: null,\n                                        }\n                                    })\n                                    setFetchCities(true)\n                                }}\n                                InputProps={{\n                                    classes: {\n                                        input: classes.input,\n                                        root: classes.textFieldRoot,\n                                    }\n                                }}\n                                fullWidth\n                                variant=\"outlined\"\n                            >\n                                {\n                                    states.map((state) => (\n                                        <MenuItem className={classes.menu} key={state.id} value={state.name}>\n                                            {state.name}\n                                        </MenuItem>\n                                    ))\n                                }\n                            </TextField>\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <Typography className={classes.label}>شهر</Typography>\n                            <TextField\n                                required\n                                disabled={citiesLoading || loading}\n                                select\n                                placeholder={'شهر خود را انتخاب کنید'}\n                                value={values.city.name}\n                                onChange={(event) => {\n                                    setValues({\n                                        ...values,\n                                        city: {\n                                            name: event.target.value,\n                                            id: findCityId(event.target.value)\n                                        }\n                                    })\n                                    setFetchCities(false)\n                                }}\n                                InputProps={{\n                                    classes: {\n                                        input: classes.input,\n                                        root: classes.textFieldRoot,\n                                    }\n                                }}\n                                fullWidth\n                                variant=\"outlined\"\n                            >\n                                {\n                                    cities.map((city) => (\n                                        <MenuItem className={classes.menu} key={city.id} value={city.name}>\n                                            {city.name}\n                                        </MenuItem>\n                                    ))\n                                }\n                            </TextField>\n                        </Grid>\n                    </Grid>\n                </Card>\n                <div style={{\n                    width: size.width >= 600 ? '33.33%' : '100%',\n                    float: 'left',\n                    marginTop: 24,\n                    position: 'relative'\n                }}>\n                    {(updateLoading || loading) && <CircularProgress size={38} className={classes.buttonProgress}/>}\n                    <Button\n                        disabled={updateLoading || loading}\n                        type={'submit'}\n                        fullWidth\n                        className={classes.editButton}\n                        variant={'contained'}\n                    >\n                        ویرایش\n                    </Button>\n                </div>\n            </form>\n        </>\n    )\n\n}\n\nexport default UserInfoPage","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/SignUpPage.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/HomePage.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/AddressesPage.js",["592"],"import React, {useEffect, useState} from \"react\";\nimport AddressForm from \"../Components/Public/AddressForm\";\nimport {useAddressPageStyle} from \"./Styles/useAddressPageStyle\";\nimport Title from \"../Components/Public/Title\";\nimport {Button, CircularProgress} from \"@material-ui/core\";\nimport useWindowSize from \"../../utills/Hooks/useWindowSize\";\nimport usePostAddress from \"../PostData/usePostAddress\";\nimport {useHistory} from 'react-router-dom'\n\nfunction AddressPage() {\n    document.title = 'اضافه کردن آدرس'\n    const history = useHistory()\n    const classes = useAddressPageStyle()\n    const size = useWindowSize()\n    const [values, setValues] = useState({\n        name: '',\n        mobileNumber: '',\n        email: '',\n        state: {\n            name: '',\n            id: null,\n        },\n        city: {\n            name: '',\n            id: null,\n        },\n        code: '',\n        address: ''\n    })\n\n    const [fetchPost, setFetchPost] = useState(false)\n    const [postLoading, postResult] = usePostAddress(fetchPost, values)\n    const [errors, setErrors] = useState({\n        name: false,\n        mobileNumber: false,\n        email: false,\n        code: false,\n        address: false\n    })\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        setFetchPost(true)\n\n    }\n    useEffect(() => {\n        if (!postLoading && fetchPost) {\n            if (postResult) {\n                history.push('/profile')\n            }\n            setFetchPost(false)\n        }\n    }, [postLoading, postResult])\n\n    return (\n        <>\n            <form className={classes.container} onSubmit={handleSubmit}>\n                <Title title={'افزودن آدرس جدید'}/>\n                <AddressForm\n                    values={values}\n                    setValues={setValues}\n                    errors={errors}\n                    setErrors={setErrors}\n                />\n                <div style={{\n                    width: size.width >= 600 ? '33.33%' : '100%',\n                    float: 'left',\n                    marginTop: 24,\n                    position: 'relative'\n                }}>\n                    {postLoading && <CircularProgress size={38} className={classes.buttonProgress}/>}\n                    <Button\n                        disabled={postLoading}\n                        type={'submit'}\n                        fullWidth\n                        className={classes.addButton}\n                        variant={'contained'}\n                    >\n                        افزودن\n                    </Button>\n                </div>\n            </form>\n\n        </>\n    )\n}\n\nexport default AddressPage","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/SearchPage.js",["593","594"],"import React, {useEffect, useReducer, useRef, useState} from \"react\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ItemLink from \"../../Routes/Link/ItemLink\";\nimport {Backdrop, Card, CardContent, CircularProgress, Grid, Typography} from \"@material-ui/core\";\nimport ProductCard from \"../Components/Public/ProuductCard\";\nimport {StyledSwitch, useStyles} from \"../Components/Search/Styles/SearchStyle\";\nimport FilterPrice from \"../Components/Search/FilterPrice\";\nimport FilterCategory from \"../Components/Search/FilterCategory\";\nimport {initialStates, reducer} from \"../Components/Search/Reducer\";\nimport {useHistory} from 'react-router-dom'\nimport useCategoriesData from \"../FetchData/useCategoriesData\";\nimport Title from \"../Components/Public/Title\";\nimport useSearchData from \"../FetchData/useSearchData\";\nimport TablePaginationActions from \"../Components/Public/TablePaginationActions\";\nimport useWindowSize from \"../../utills/Hooks/useWindowSize\";\nimport {SmoothVerticalScrolling} from \"../../utills/smoothScroll\";\nimport useMaxPriceData from \"../FetchData/useMaxPriceData\";\n\nfunction SearchPage({location}) {\n    const history = useHistory()\n    const search = useRef(location.search)\n    const size = useWindowSize()\n    const [catsLoading, catsResult] = useCategoriesData(true)\n    const classes = useStyles()\n    const [searchStates, dispatch] = useReducer(reducer, initialStates)\n    const [page, setPage] = useState(0)\n    const [mobilePage, setMobilePage] = useState(0)\n    const [mobileMaxPage, setMobileMaxPage] = useState(1)\n    const [maxPages, setMaxPages] = useState(1)\n    const [change, setChange] = useState(0)\n    const [fetch, setFetch] = useState(false)\n    const [filterValues, setFilterValues] = useState({\n        from: 0,\n        to: 1500000,\n    })\n    const [maxPriceLoading, maxPriceResult] = useMaxPriceData(\n        fetch,\n        location.search,\n        searchStates.categories.length,\n        location.state ? location.state.showCampaign : false\n    )\n    const [searchLoading, searchResults] = useSearchData(\n        fetch,\n        location.search,\n        page,\n        searchStates.categories.length,\n        filterValues.from,\n        filterValues.to,\n        searchStates.hasDiscount,\n        location.state ? location.state.showCampaign : false\n    )\n    const handleChangePages = (pageNumber) => {\n        setPage(pageNumber)\n        SmoothVerticalScrolling(document.body, 500, \"top\")\n    }\n    const handleMobileChangePages = (pageNumber) => {\n        setMobilePage(pageNumber)\n        setPage(Math.floor(pageNumber / 3))\n        SmoothVerticalScrolling(document.body, 500, \"top\")\n    }\n\n    const [searchItems, setSearchItems] = useState({\n        search_text: '',\n    })\n    const filterPrice = () => {\n        setFilterValues({\n            from: searchStates.filterValues.from,\n            to: searchStates.filterValues.to\n        })\n        setPage(0)\n        location.state = {showCampaign: false}\n    }\n\n    useEffect(() => {\n        if (!catsLoading && search.current !== undefined) {\n            dispatch({\n                type: 'setCategories',\n                categories: catsResult,\n            })\n            const params = new URLSearchParams(search.current)\n            if (!params.has('campaign_id')) {\n                for (let i = 0; i < catsResult.length; i++) {\n                    const categoryId = params.get(`category_list[${i}]`)\n                    if (categoryId) {\n                        location.state = {showCampaign: false}\n                        dispatch({\n                            type: 'selectCategory',\n                            categoryId: parseInt(categoryId),\n                            value: true,\n                        })\n                        setChange(prevState => prevState + 1)\n                    }\n                }\n            } else {\n                history.push({\n                    pathname: '/search',\n                    search: `campaign_id=${params.get('campaign_id')}`,\n                    state: {showCampaign: true}\n                })\n            }\n            search.current = undefined\n        }\n        setFetch(true)\n    }, [catsLoading, catsResult])\n\n    useEffect(() => {\n        if (!maxPriceLoading) {\n            setFilterValues({\n                from: 0,\n                to: maxPriceResult,\n            })\n            dispatch({\n                type: 'priceFilter',\n                filterValues: {\n                    from: 0,\n                    to: maxPriceResult,\n                    max: maxPriceResult,\n                },\n            })\n        }\n    }, [maxPriceLoading, maxPriceResult])\n    useEffect(() => {\n        if (!searchLoading) {\n            setMaxPages(searchResults.max_pages + 1)\n            let max\n            max = Math.floor(searchResults.merchandise_objs_number / 5)\n            if (searchResults.merchandise_objs_number % 5 !== 0) {\n                max++\n            }\n            setMobileMaxPage(max)\n            dispatch({\n                type: 'setProducts',\n                products: searchResults.products,\n            })\n        }\n\n    }, [searchLoading, searchResults])\n\n    useEffect(() => {\n        const params = new URLSearchParams(location.search)\n        const search_text = params.get('search_text') ? `\"${params.get('search_text')}\"` : ''\n\n        for (let i = 0; i < searchStates.categories.length; i++) {\n            if (params.get(`category_list[${i}]`)) {\n                dispatch({\n                    type: 'selectCategory',\n                    categoryId: parseInt(params.get(`category_list[${i}]`)),\n                    value: true,\n                })\n            }\n        }\n        setPage(0)\n        setSearchItems({search_text: search_text})\n    }, [location, searchStates.categories.length])\n\n    useEffect(() => {\n        setPage(0)\n        const params = new URLSearchParams(location.search)\n        let newLocation = ''\n        if (params.get('search_text')) {\n            newLocation = `search_text=${params.get('search_text')}`\n        }\n        for (let i = 0; i < searchStates.categories.length; i++) {\n            if (searchStates.categories[i].checked) {\n                newLocation += `&category_list[${i}]=${searchStates.categories[i].id}`\n\n            }\n        }\n        history.push(`/search?${newLocation}`)\n    }, [change])\n\n    document.title = `لیست محصولات ${searchItems.search_text}`\n    return (\n        <>\n            <Backdrop className={classes.backdrop} open={maxPriceLoading || searchLoading || catsLoading}>\n                <CircularProgress size={70} color=\"inherit\"/>\n            </Backdrop>\n            <div className={classes.searchContainer}>\n                <Breadcrumbs className={classes.breadcrumbContainer} separator={<NavigateBeforeIcon fontSize=\"small\"/>}>\n                    <ItemLink to={'/'}>\n                        <Typography className={classes.breadcrumb}>خانه</Typography>\n                    </ItemLink>\n                    <Typography className={classes.breadcrumb}>جستجو میان محصولات</Typography>\n                </Breadcrumbs>\n                <Title title={`لیست محصولات ${searchItems.search_text}`}/>\n\n                <Grid xs={12} className={classes.gridContainer} container direction={\"row\"}>\n                    <Grid\n                        style={{\n                            display:\n                                location.state ?\n                                    location.state.showCampaign && 'none'\n                                    : undefined\n                        }}\n                        container sm={3}\n                        className={classes.filterContainer}\n                        direction={\"row\"}\n                    >\n\n                        <Grid className={classes.filterItem} xs={12} item>\n                            <div>\n                                <FilterPrice\n                                    filterValues={searchStates.filterValues}\n                                    dispatch={dispatch}\n                                    filterPrice={filterPrice}\n                                />\n                            </div>\n                        </Grid>\n\n                        <Grid className={classes.categoryMdItem} xs={12} item>\n                            <div>\n                                <FilterCategory\n                                    setChange={setChange}\n                                    categories={searchStates.categories}\n                                    dispatch={dispatch}\n                                />\n                            </div>\n                        </Grid>\n\n                        <Grid className={classes.filterItem} xs={12} item>\n                            <div>\n                                <Card>\n                                    <CardContent style={{padding: '8px 16px'}} className={classes.discount}>\n                                        <Typography className={classes.discountTitle}>تخفیف‌دار ها</Typography>\n                                        <StyledSwitch\n                                            checked={searchStates.hasDiscount}\n                                            onChange={() => {\n                                                dispatch({type: 'discount'})\n                                                location.state = {showCampaign: false}\n                                            }}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </div>\n                        </Grid>\n                    </Grid>\n\n                    <Grid\n                        container\n                        className={classes.productsContainer}\n                        sm={location.state ?\n                            location.state.showCampaign ? 12 : 9\n                            : 9\n                        }\n                        xs={12}\n                        direction={\"row\"}\n                    >\n                        {\n                            searchStates.products.length === 0 && (!maxPriceLoading && !searchLoading && !catsLoading) &&\n                            <>\n                                <Typography\n                                    style={{\n                                        textAlign: 'center',\n                                        margin: 'auto',\n                                        fontFamily: 'Shabnam',\n                                        fontSize: 20,\n                                        fontWeight: 500,\n                                        marginBottom: location.state ?\n                                            location.state.showCampaign && '150px'\n                                            : 'auto'\n                                    }}\n                                >محصولی ثبت نشده</Typography>\n                            </>\n                        }\n                        {\n                            size.width > 600\n                                ? <>\n                                    {\n                                        searchStates.products\n                                            .map((product) => (\n                                                <Grid className={classes.productItem} md={4} sm={6} xs={12} item>\n                                                    <ProductCard product={product}/>\n                                                </Grid>\n                                            ))\n                                    }\n\n                                    <Grid item xs={12}>\n\n                                        {\n                                            searchStates.products.length !== 0 &&\n                                            <TablePaginationActions\n                                                buttonGroupClass={classes.buttonGroup}\n                                                numPages={maxPages}\n                                                page={page}\n                                                onChange={handleChangePages}\n\n                                            />\n                                        }\n\n                                    </Grid>\n                                </>\n                                : <>\n                                    {\n                                        searchStates.products.slice((mobilePage % 3) * 5, (mobilePage % 3) * 5 + 5)\n                                            .map((product) => (\n                                                <Grid key={product.id} className={classes.productItem} md={4} sm={6} xs={12}\n                                                      item>\n                                                    <ProductCard product={product}/>\n                                                </Grid>\n                                            ))\n                                    }\n\n                                    <Grid item xs={12}>\n\n                                        {\n                                            searchStates.products.length !== 0 &&\n                                            <TablePaginationActions\n                                                buttonGroupClass={classes.buttonGroup}\n                                                numPages={mobileMaxPage}\n                                                page={mobilePage}\n                                                onChange={handleMobileChangePages}\n                                            />\n                                        }\n\n                                    </Grid>\n                                </>\n                        }\n\n                    </Grid>\n\n                    <Grid\n                        style={{\n                            display:\n                                location.state ?\n                                    location.state.showCampaign && 'none'\n                                    : undefined\n                        }}\n                        item\n                        className={classes.categoryXsItem}\n                        xs={12}\n                    >\n                        <div style={{width: '100%'}}>\n                            <FilterCategory\n                                setChange={setChange}\n                                categories={searchStates.categories}\n                                dispatch={dispatch}\n                            />\n                        </div>\n                    </Grid>\n\n                </Grid>\n            </div>\n        </>\n    )\n}\n\nexport default SearchPage","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/LoginPage.js",["595","596"],"import React, {useState} from \"react\";\nimport ShopLayout from \"../Layouts/ShopLayout\";\nimport {useLoginPageStyle} from \"./Styles/useLoginPageStyle\";\nimport {\n    Button,\n    Card,\n    CardContent,\n    CircularProgress,\n    IconButton,\n    InputAdornment,\n    TextField,\n    Typography\n} from \"@material-ui/core\";\nimport loginImage from '../../img/Login.png'\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport ItemLink from \"../../Routes/Link/ItemLink\";\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Title from \"../Components/Public/Title\";\nimport useAxios from \"axios-hooks\";\nimport {useHistory} from 'react-router-dom'\nimport useWindowSize from \"../../utills/Hooks/useWindowSize\";\nimport {useAuth} from \"../../utills/Auth\";\nimport {toEnDigit, toFaDigit} from \"../../utills/ToFaDigit\";\n\nfunction LoginPage() {\n    document.title = 'ورود به حساب کاربری'\n    const classes = useLoginPageStyle()\n    const history = useHistory()\n    const baseUrl = \"https://api.didartshop.ir\"\n    const [values, setValues] = useState({\n        mobileNumber: '',\n        password: '',\n        showPassword: false\n    })\n    const [error, setError] = useState(false)\n    const [{loading}, signIn] = useAxios({\n        url: `${baseUrl}/user/sign_in`,\n        method: 'POST'\n    }, {manual: true})\n    const auth = useAuth();\n    const size = useWindowSize()\n\n    const handleChange = (props) => (event) => {\n        setValues(prevState => {\n            return {...prevState, [props]: event.target.value}\n        })\n    }\n    const handleClickShowPassword = () => {\n        setValues(prevState => {\n            return {...prevState, showPassword: !prevState.showPassword}\n        });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n        try {\n            const response = await signIn({\n                data: {\n                    \"mobile_number\": toEnDigit(values.mobileNumber),\n                    \"password\": values.password,\n                }\n            })\n            if (response.data.status === \"success\") {\n                localStorage.setItem(\"Authorization\", response.data.data.token)\n                history.go(0)\n            } else {\n                setError(true)\n            }\n        } catch (err) {\n            setError(true)\n        }\n    }\n\n    return (\n        <>\n            <form onSubmit={handleLogin} className={classes.container}>\n                <Title title={'ورود به حساب کاربری'}/>\n                <Card className={classes.card}>\n                    <div className={classes.imageContainer}>\n                        <img alt={'login'} src={loginImage} className={classes.image}/>\n                    </div>\n                    <CardContent classes={{root: classes.contentRoot}} className={classes.cardContent}>\n                        <div className={classes.mobileContainer}>\n                            <Typography style={{marginBottom: '12px'}} className={classes.label}>شماره\n                                موبایل</Typography>\n                            <TextField\n                                required\n                                type={'tel'}\n                                dir={'ltr'}\n                                error={error}\n                                value={toFaDigit(values.mobileNumber)}\n                                onChange={handleChange('mobileNumber')}\n                                InputProps={{\n                                    classes: {\n                                        input: classes.input,\n                                        root: classes.root,\n                                    }\n                                }}\n                                fullWidth\n                                variant=\"outlined\"\n                            />\n                        </div>\n                        <div className={classes.passwordContainer}>\n                            <div className={classes.passwordLabels}>\n                                <Typography className={classes.label}>رمز عبور</Typography>\n                                <ItemLink style={{margin: 'auto 0'}} to={'/forget-password'}>\n                                    <Typography className={classes.forgetLabel}>رمزعبور خود را فراموش\n                                        کرده‌اید!؟</Typography>\n                                </ItemLink>\n                            </div>\n                            <TextField\n                                required\n                                error={error}\n                                dir={'ltr'}\n                                autocompelete={'current-password'}\n                                value={values.password}\n                                onChange={handleChange('password')}\n                                type={values.showPassword ? 'text' : 'password'}\n                                InputProps={{\n                                    endAdornment:\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                aria-label=\"toggle password visibility\"\n                                                onClick={handleClickShowPassword}\n                                                onMouseDown={handleMouseDownPassword}\n                                                edge=\"end\"\n                                            >\n                                                {values.showPassword ? <Visibility/> : <VisibilityOff/>}\n                                            </IconButton>\n                                        </InputAdornment>,\n                                    classes: {\n                                        input: classes.input,\n                                        root: classes.root,\n                                    }\n                                }}\n                                fullWidth\n                                variant=\"outlined\"\n                            />\n                            <ItemLink style={{margin: 'auto 0'}} to={'/forget-password'}>\n                                <Typography className={classes.forgetMobileLabel}>رمزعبور خود را فراموش\n                                    کرده‌اید!؟</Typography>\n                            </ItemLink>\n                        </div>\n                        {\n                            size.width < 600 &&\n                            <div className={classes.action}>\n                                <ItemLink style={{alignSelf: 'flex-start', marginTop: 24,}} to={'/signup'}>\n                                    <Button\n                                        className={classes.signupButton}\n                                        dir={'ltr'}\n                                        variant={'text'}\n                                        endIcon={\n                                            <AddCircleOutlineIcon color={'primary'}\n                                                                  classes={{colorPrimary: classes.iconColor}}/>\n                                        }\n                                    >\n                                        ساخت حساب‌کاربری جدید\n                                    </Button>\n                                </ItemLink>\n                                <div style={{position: 'relative', width: '100%'}}>\n                                    <Button\n                                        fullWidth\n                                        disabled={loading}\n                                        type={'submit'}\n                                        className={classes.signInButton}\n                                        variant={'contained'}\n                                    >\n                                        ورود</Button>\n                                    {loading && <CircularProgress size={38} className={classes.buttonProgress}/>}\n                                </div>\n                            </div>\n                        }\n                    </CardContent>\n\n                </Card>\n\n                {\n                    size.width >= 600 &&\n                    <div className={classes.action}>\n                        <ItemLink to={'/signup'}>\n                            <Button\n                                className={classes.signupButton}\n                                dir={'ltr'}\n                                variant={'text'}\n                                endIcon={\n                                    <AddCircleOutlineIcon color={'primary'}\n                                                          classes={{colorPrimary: classes.iconColor}}/>\n                                }\n                            >\n                                ساخت حساب‌کاربری جدید\n                            </Button>\n                        </ItemLink>\n                        <div style={{position: 'relative'}}>\n                            <Button\n                                disabled={loading}\n                                type={'submit'}\n                                className={classes.signInButton}\n                                variant={'contained'}\n                            >\n                                ورود</Button>\n                            {loading && <CircularProgress size={38} className={classes.buttonProgress}/>}\n                        </div>\n                    </div>\n                }\n            </form>\n        </>\n    )\n}\n\nexport default LoginPage","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/ShopLayout.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/utills/ToFaDigit.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/utills/smoothScroll.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/utills/Hooks/useWindowSize.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/utills/Hooks/useForceUpdate.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/utills/Hooks/useLogin.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Footer.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Header.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useLoginPageStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useProfilePageStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useAddressesData.js",["597"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\n\nfunction useAddressesData(fetch) {\n    const [result, setResult] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [, getAddresses] = useAxios({\n        url: '/user/costumer_information/get',\n    })\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await getAddresses()\n                setResult(response.data.data.costumer_information)\n                setLoading(false)\n            } catch (err) {\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useAddressesData","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useUserOrderData.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useMaxPriceData.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useForgetPassPageStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useUserData.js",["598"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\n\nfunction useUserData(fetch) {\n    const [result, setResult] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [, getInfo] = useAxios({\n        url: '/user/get_profile',\n    })\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await getInfo()\n                setResult(response.data.data)\n                setLoading(false)\n                document.title =`حساب کاربری ${response.data.data.name_and_last_name}`\n            } catch (err) {\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useUserData","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useCartPageStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useProductPageStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useSearchData.js",["599"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\nimport {useHistory, useLocation} from \"react-router-dom\"\nimport {SmoothVerticalScrolling} from \"../../utills/smoothScroll\";\n\n\nfunction useSearchData(fetch, search, page, catsLength, fromPrice, toPrice, hasDiscount, showCampaign) {\n    const location = useLocation()\n    const history = useHistory()\n    const changeUrl = (search) => {\n        let newSearch = search\n        if (!showCampaign) {\n            const queryParams = new URLSearchParams(location.search)\n            if (queryParams.has('campaign_id')) {\n                const id = queryParams.get('campaign_id')\n                newSearch = newSearch.replace(`campaign_id=${id}`, '')\n            }\n            if (search === '') {\n                newSearch += '?'\n            }\n            for (let i = 0; i < catsLength; i++) {\n                newSearch = newSearch.replace(`[${i}]`, '')\n            }\n\n            newSearch += `&lb_price=${fromPrice}&ub_price=${toPrice}`\n            if (hasDiscount) {\n                newSearch += `&has_discount=${hasDiscount}`\n            }\n        }\n        newSearch += `&page=${page}`\n        return newSearch\n    }\n    const [result, setResult] = useState({\n        products: [],\n        max_pages: 0,\n        merchandise_objs_number: 0,\n    })\n    const [loading, setLoading] = useState(true)\n    const [, getProducts] = useAxios({\n        url: `/merchandise/get_all${changeUrl(search)}`,\n    })\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await getProducts()\n                setResult({\n                    products: response.data.data.merchandise,\n                    max_pages: response.data.data.max_pages,\n                    merchandise_objs_number: response.data.data.merchandise_objs_number,\n                })\n                setLoading(false)\n            } catch (err) {\n                if (err.response) {\n                    history.push({pathname: '/search', state: {showCampaign: false}})\n                }\n\n            }\n            SmoothVerticalScrolling(document.body, 500, \"top\")\n        }\n\n        if (fetch)\n            getResult().then()\n\n    }, [fetch, search, page, fromPrice, toPrice, hasDiscount, showCampaign, getProducts])\n\n    return [loading, result]\n}\n\nexport default useSearchData","/Users/tavallai/codes/JS/didartshop-website/src/Shop/DeleteData/useDeleteAddress.js",["600"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\nfunction useDeleteAddress(fetch, id) {\n    const [result, setResult] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [, deleteAddress] = useAxios({\n        url: '/user/costumer_information/delete',\n        method: 'DELETE',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await deleteAddress({\n                    data: {\n                        \"id\": id,\n                    },\n                })\n                setResult(response.data.status === 'success')\n                setLoading(false)\n            } catch (err) {\n                setResult(false)\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useDeleteAddress","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useCategoriesData.js",["601"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\n\nfunction useCategoriesData(fetch) {\n    const [result, setResult] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [, getCategories] = useAxios({\n        url: '/get_all_category',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await getCategories()\n                const responseCats = response.data.data.categories\n                let categories = []\n                responseCats.sort((a, b) => a.name.localeCompare(b.name))\n                for (let i = 0; i < responseCats.length; i++) {\n                    categories.push({...responseCats[i], checked: false})\n                }\n                setResult(categories)\n                setLoading(false)\n            } catch (err) {\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useCategoriesData","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePostCart.js",["602"],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePostAddress.js",["603"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\nimport {toEnDigit, toFaDigit} from \"../../utills/ToFaDigit\";\n\nfunction usePostAddress(fetch, values) {\n    const [result, setResult] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [, createAddress] = useAxios({\n        url: '/user/costumer_information/create',\n        method: 'POST',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await createAddress({\n                    data: {\n                        \"costumer_name\": values.name,\n                        \"address\": toFaDigit(values.address),\n                        \"post_code\": toEnDigit(values.code),\n                        \"phone_number\": toEnDigit(values.mobileNumber),\n                        \"email\": toEnDigit(values.email),\n                        \"state\": values.state.id,\n                        \"city\": values.city.id\n                    },\n                })\n                setResult(response.data.status === 'success')\n                setLoading(false)\n\n            } catch (err) {\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default usePostAddress","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/useApplyDiscountCode.js",["604"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\nfunction useApplyDiscountCode(fetch, id, discountCode) {\n    const [result, setResult] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [, applyCode] = useAxios({\n        url: '/basket/apply_discount_code',\n        method: 'PATCH',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await applyCode({\n                    data: {\n                        \"basket_id\": id,\n                        \"discount_code\": discountCode,\n                    },\n                })\n                setResult(response.data)\n                setLoading(false)\n            } catch (err) {\n                setResult(err.response)\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useApplyDiscountCode","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePathCart.js",["605"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\nimport {toEnDigit} from \"../../utills/ToFaDigit\";\n\nfunction usePathCart(fetch, id, address, details) {\n    const [result, setResult] = useState()\n    const [loading, setLoading] = useState(false)\n    const [, updateBasket] = useAxios({\n        url: '/basket/update_basket',\n        method: 'PATCH',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await updateBasket({\n                    data: {\n                        \"id\": id,\n                        \"city\": address.city,\n                        \"state\": address.state,\n                        \"address\": address.address,\n                        \"post_code\": toEnDigit(address.post_code),\n                        \"costumer_name\": address.costumer_name,\n                        \"phone_number\": toEnDigit(address.phone_number),\n                        \"email\": address.email,\n                        \"details\": details === '' ? 'بدون توضیح' : details,\n                    },\n                })\n                setResult(response.data.data)\n                setLoading(false)\n            } catch (err) {\n                setResult(err.response)\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default usePathCart","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Styles/ShopLayoutStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Routes/Link/ItemLink.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useAddressPageStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useHomeData.js",["606"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\n\nfunction useHomeData(fetch) {\n    const [result, setResult] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [, getIndex] = useAxios({\n        url: '/index',\n    })\n    // blog api\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await getIndex()\n                setResult([\n                    response.data.data.covers,\n                    response.data.data.campaigns,\n                    response.data.data.top_merchandises,\n                    response.data.data.amazing_offers,\n                    response.data.data.mottos,\n                    // todo: array of blog posts\n                ])\n                setLoading(false)\n            } catch (err) {\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useHomeData","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/Step.js",["607"],"import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/styles\";\n\nconst useStyle = makeStyles((theme) => ({\n    step: {\n        display: 'flex',\n        padding: 32,\n        alignItems: 'center',\n        [theme.breakpoints.down('xs')]: {\n            flexDirection: 'column'\n        },\n    },\n}), {index: 1})\n\nfunction Step(props) {\n    const classes = useStyle()\n    const {children, index, step, stepClass} = props\n\n    const style = {\n        display: step !== index ? 'none' : 'flex'\n    }\n    return (\n        <div style={style} className={stepClass} hidden={step !== index}>\n            {step === index && children}\n        </div>\n    )\n\n\n}\n\nStep.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    step: PropTypes.number.isRequired,\n    stepClass: PropTypes.any,\n}\nexport default Step","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/Title.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/ForgetPass/ThirdStep.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/SignUp/SecondStep.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/AddressCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/OrderCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Profile/PreviewOrderCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/FactorCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/AddressForm.js",["608"],"import React, {useState} from \"react\";\nimport {Card, Grid, MenuItem, TextField, Typography} from \"@material-ui/core\";\nimport {useUserInfoPageStyle} from \"../../Pages/Styles/useUserInfoPageStyle\";\nimport PropType from 'prop-types'\nimport useStateData from \"../../FetchData/useStateData\";\nimport useCityData from \"../../FetchData/useCityData\";\nimport {toFaDigit} from \"../../../utills/ToFaDigit\";\n\n\nfunction AddressForm(props) {\n    const {values, setValues, errors, setErrors} = props\n    const [fetchCities, setFetchCities] = useState(false)\n    const [statesLoading, states] = useStateData(true)\n    const [citiesLoading, cities] = useCityData(fetchCities, values.state.id)\n    const classes = useUserInfoPageStyle()\n\n    const findStateId = (name) => {\n        for (let i = 0; i < states.length; i++) {\n            if (states[i].name === name) {\n                return states[i].id\n            }\n        }\n    }\n    const findCityId = (name) => {\n        for (let i = 0; i < cities.length; i++) {\n            if (cities[i].name === name) {\n                return cities[i].id\n            }\n        }\n    }\n\n    const handleChange = (prop) => (event) => {\n        setValues({...values, [prop]: event.target.value})\n    }\n\n    return (\n        <Card className={classes.card}>\n            <Grid container spacing={4}>\n                <Grid item md={6} xs={12}>\n                    <Typography className={classes.label}>نام و نام‌خانوادگی</Typography>\n                    <TextField\n                        required\n                        error={errors.name}\n                        value={values.name}\n                        onChange={handleChange('name')}\n                        InputProps={{\n                            classes: {\n                                input: classes.input,\n                                root: classes.textFieldRoot,\n                            }\n                        }}\n                        fullWidth\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                    <Typography className={classes.label}>شماره موبایل</Typography>\n                    <TextField\n                        required\n                        dir={'ltr'}\n                        type={'tel'}\n                        error={errors.mobileNumber}\n                        value={toFaDigit(values.mobileNumber)}\n                        onChange={handleChange('mobileNumber')}\n                        InputProps={{\n                            classes: {\n                                input: classes.input,\n                                root: classes.textFieldRoot,\n                            }\n                        }}\n                        fullWidth\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                    <Typography className={classes.label}>آدرس پست الکترونیک</Typography>\n                    <TextField\n                        required\n                        dir={'ltr'}\n                        error={errors.email}\n                        value={values.email}\n                        onChange={handleChange('email')}\n                        InputProps={{\n                            classes: {\n                                input: classes.input,\n                                root: classes.textFieldRoot,\n                            }\n                        }}\n                        fullWidth\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                    <Typography className={classes.label}>استان</Typography>\n                    <TextField\n                        required\n                        disabled={statesLoading}\n                        select\n                        placeholder={'استان خود را انتخاب کنید'}\n                        onChange={(event) => {\n                            setFetchCities(false)\n                            setValues({\n                                ...values,\n                                state: {\n                                    name: event.target.value,\n                                    id: findStateId(event.target.value)\n                                },\n                                city: {\n                                    name: '',\n                                    id: null,\n                                }\n                            })\n                            setFetchCities(true)\n                        }}\n                        InputProps={{\n                            classes: {\n                                input: classes.input,\n                                root: classes.textFieldRoot,\n                            }\n                        }}\n                        fullWidth\n                        variant=\"outlined\"\n                    >\n                        {\n                            states.map((state) => (\n                                <MenuItem className={classes.menu} key={state.id} value={state.name}>\n                                    {state.name}\n                                </MenuItem>\n                            ))\n                        }\n                    </TextField>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                    <Typography className={classes.label}>شهر</Typography>\n                    <TextField\n                        required\n                        disabled={citiesLoading}\n                        select\n                        placeholder={'شهر خود را انتخاب کنید'}\n                        onChange={(event) => {\n                            setValues({\n                                ...values,\n                                city: {\n                                    name: event.target.value,\n                                    id: findCityId(event.target.value)\n                                }\n                            })\n                            setFetchCities(false)\n                        }}\n                        InputProps={{\n                            classes: {\n                                input: classes.input,\n                                root: classes.textFieldRoot,\n                            }\n                        }}\n                        fullWidth\n                        variant=\"outlined\"\n                    >\n                        {\n                            cities.map((city) => (\n                                <MenuItem className={classes.menu} key={city.id} value={city.name}>\n                                    {city.name}\n                                </MenuItem>\n                            ))\n                        }\n                    </TextField>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                    <Typography className={classes.label}>کد پستی</Typography>\n                    <TextField\n                        required\n                        dir={'ltr'}\n                        error={errors.code}\n                        value={toFaDigit(values.code)}\n                        onChange={handleChange('code')}\n                        InputProps={{\n                            classes: {\n                                input: classes.input,\n                                root: classes.textFieldRoot,\n                            }\n                        }}\n                        fullWidth\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography className={classes.label}>آدرس</Typography>\n                    <TextField\n                        required\n                        multiline\n                        error={errors.address}\n                        value={toFaDigit(values.address)}\n                        onChange={handleChange('address')}\n                        InputProps={{\n                            classes: {\n                                input: classes.input,\n                            }\n                        }}\n                        fullWidth\n                        variant=\"outlined\"\n                    />\n                </Grid>\n            </Grid>\n        </Card>\n    )\n}\n\nAddressForm.propTypes = {\n    values: PropType.object.isRequired,\n    setValues: PropType.func.isRequired,\n    errors: PropType.object.isRequired,\n    setErrors: PropType.func.isRequired,\n\n}\n\nexport default AddressForm","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Search/Reducer.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/ForgetPass/FirstStep.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/TablePaginationActions.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Search/FilterPrice.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Skeletons/ProfilePageSkeleton.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Search/Styles/SearchStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/ProuductCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Profile/PreviewAddressCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Search/FilterCategory.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/SignUp/ThirdStep.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/DesktopProduct.js",["609"],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/BlogInterView.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Slider.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Banners.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Attributes.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/BestSeller.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/AmazingOffers.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useSignUpPageStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/SignUp/FirstStep.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePathUserInfo.js",["610"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\nimport {useHistory} from 'react-router-dom'\n\nfunction usePathUserInfo(fetch, id, values) {\n    const history = useHistory()\n    const [result, setResult] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [, updateInfo] = useAxios({\n        url: '/user/update_profile',\n        method: 'PATCH',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await updateInfo({\n                    data: {\n                        \"id\": id,\n                        \"name_and_last_name\": values.name,\n                        \"email\": values.email,\n                        \"state\": values.state.id,\n                        \"city\": values.city.id,\n                    },\n                })\n                    setResult(response.data.status === 'success')\n                    setLoading(false)\n                if(response.data.status === 'success'){\n                    history.push('/profile')\n                }\n\n            } catch (err) {\n            }\n        }\n        if(fetch)\n            getResult().then()\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default usePathUserInfo","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useCityData.js",["611"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\n\nfunction useCityData(fetch, id) {\n    const [result, setResult] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [, getCities] = useAxios({\n        url: `get_city?id=${id}`,\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await getCities()\n                setResult(response.data.data.cities)\n                setLoading(false)\n            } catch (err) {\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n\n    }, [fetch, id])\n\n    return [loading, result]\n}\n\nexport default useCityData","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useStateData.js",["612"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\n\nfunction useStateData(fetch) {\n    const [result, setResult] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [, getStates] = useAxios({\n        url: '/get_state',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await getStates()\n                setResult(response.data.data)\n                setLoading(false)\n            } catch (err) {\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useStateData","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useUserInfoPageStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Skeletons/ProductPageSkeleton.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useProductData.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/ProductDetail.js",["613","614"],"import React, {useEffect, useState} from \"react\";\nimport {AppBar, Card, CircularProgress, IconButton, Snackbar, Tab, Tabs, Typography} from \"@material-ui/core\";\nimport {toFaDigit} from \"../../../utills/ToFaDigit\";\nimport TabPanel from \"./TabPanel\";\nimport {useProductDetailStyle} from \"./Styles/useProductDetailStyle\";\nimport CommentCard from \"./CommentCard\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\nimport {StyledTextField} from \"../Public/StyledTextField\";\nimport * as PropTypes from \"prop-types\";\nimport {useAuth} from \"../../../utills/Auth\";\nimport usePostComment from \"../../PostData/usePostComment\";\nimport {Alert} from \"@material-ui/lab\";\nimport {Link} from \"react-router-dom\";\nimport {SmoothVerticalScrolling} from \"../../../utills/smoothScroll\";\nimport FullScreenDialog from \"./MobileVersion/FullScreenDialog\";\n\nfunction ProductDetail(props) {\n    const {product} = props\n    const classes = useProductDetailStyle()\n    const [fetchPostComment, setFetchPostComment] = useState(false)\n    const [value, setValue] = useState(0);\n    const [openSnackBar, setOpenSnackBar] = useState(false)\n    const [commentInput, setCommentInput] = useState('')\n    const [createCommentLoading, createCommentResult] = usePostComment(fetchPostComment, product.id, commentInput)\n    const auth = useAuth()\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    useEffect(() => {\n        if (!createCommentLoading && fetchPostComment) {\n            setOpenSnackBar(true)\n\n            setFetchPostComment(false)\n        }\n\n    }, [createCommentLoading, createCommentResult])\n\n    return (\n        <>\n            <Snackbar open={openSnackBar} autoHideDuration={6000} onClose={() => setOpenSnackBar(false)}>\n                <Alert\n                    dir={'ltr'}\n                    variant={'filled'}\n                    classes={{\n                        action: classes.snackbarAction,\n                        icon: classes.snackbarIcon,\n                        message: classes.snackbarMessage,\n                    }}\n                    style={{fontFamily: 'Shabnam'}}\n                    onClose={() => setOpenSnackBar(false)}\n                    severity={auth.isLogin ? createCommentResult ? \"success\" : \"error\" : \"warning\"}\n                >{\n                    auth.isLogin ?\n                        createCommentResult\n                            ? 'نظر شما ثبت شد. پس از بررسی، نظر شما در سایت قرار داده می‌شود.'\n                            : 'خطا لطفا دوباره تلاش کنید.'\n                        : <div style={{display: 'flex'}}>\n                            <Typography>\n                                {' شما ابتدا باید'}\n                            </Typography>\n                            <Typography\n                                component={\n                                    (props) =>\n                                        <Link\n                                            {...props}\n                                            onClick={() => SmoothVerticalScrolling(document.body, 500, \"top\")}\n                                            to={'/login'}/>\n                                }\n                                style={{margin: 'auto 4px'}}\n                            >\n                                ورود/ثبت‌نام\n                            </Typography>\n                            <Typography>\n                                {'کنید '}\n                            </Typography>\n                        </div>\n                }\n\n                </Alert>\n            </Snackbar>\n            <Card className={classes.card}>\n                <AppBar className={classes.appBar} position={'static'}>\n                    <Tabs classes={{indicator: classes.indicator, scroller: classes.tabsContainer}} value={value}\n                          onChange={handleChange}>\n                        <Tab className={classes.tab} label={'توضیحات محصول'}/>\n                        <Tab className={classes.tab} label={toFaDigit(`دیدگاه‌ها (${product.comment_number})`)}/>\n                    </Tabs>\n                    <TabPanel index={0} value={value}>\n                        <Typography className={classes.description}>{product.description}</Typography>\n                    </TabPanel>\n\n                    <TabPanel index={1} value={value}>\n                        {\n                            product.comment_objs_list.map((comment) => (\n                                <div style={{marginBottom: 16}} key={comment.id}>\n                                    <CommentCard comment={comment}/>\n                                </div>\n                            ))\n                        }\n                        {\n                            product.comment_objs_list.length === 0 &&\n                            <Typography\n                                style={{\n                                    color: '#545454',\n                                    fontSize: 14,\n                                    textAlign: 'center',\n                                    opacity: 0.68,\n                                    margin: '16px 0'\n                                }}\n                            >\n                                هنوز دیدگاهی ثبت نشده !\n                            </Typography>\n                        }\n                        <form\n                            onSubmit={(event) => {\n                                event.preventDefault()\n                                if (!auth.isLogin) {\n                                    setOpenSnackBar(true)\n                                } else {\n                                    setFetchPostComment(true)\n                                }\n                            }}\n                        >\n                            <StyledTextField\n                                required\n                                id=\"comment-input\"\n                                placeholder=\"دیدگاه خود را بنویسید\"\n                                value={toFaDigit(commentInput)}\n                                onChange={(event) => setCommentInput(event.target.value)}\n                                InputProps={{\n                                    endAdornment:\n                                        <InputAdornment\n                                            style={{\n                                                position: 'absolute',\n                                                left: 0,\n                                                bottom: 28,\n                                            }}\n                                            position=\"end\"\n                                        >\n                                            {\n                                                createCommentLoading\n                                                    ?\n                                                    <CircularProgress size={32} color={'initial'}\n                                                                      style={{color: '#F16522'}}/>\n                                                    :\n                                                    <IconButton\n                                                        type={'submit'}\n                                                    >\n                                                        <SendRoundedIcon\n                                                            style={{transform: 'rotate(180deg)', color: '#F16522'}}/>\n                                                    </IconButton>\n\n                                            }\n                                        </InputAdornment>\n                                    ,\n                                    classes: {\n                                        input: classes.commentInput,\n                                        root: classes.commentInputRoot,\n                                    }\n                                }}\n                                fullWidth\n                                multiline\n                                variant=\"outlined\"\n                            />\n                        </form>\n                    </TabPanel>\n\n                </AppBar>\n            </Card>\n        </>\n    )\n\n}\n\nProductDetail.propTypes = {\n    product: PropTypes.object.isRequired,\n}\n\nexport default ProductDetail","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/SimilarProducts.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/MobileProduct.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/CategoriesList.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/SocialNetwork.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/SearchDialog.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/CategoryMenu.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/utills/Hooks/useAxios.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/DesktopPhotoViewer.js",["615"],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/AddressFactorCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Search/Styles/FilterStyles.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/OrderFactorCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/StyledRadio.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/Styles/useProductCardStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Profile/Styles/usePreviewOrderStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/ProductGrid.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/Styles/ProductsSliderStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/ProductsSlider.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/Styles/useProductStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/Styles/useFactoreCardStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/Styles/useOrderCardStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/Styles/useAddressCardStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Styles/AmazingOffersStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Styles/AttributesStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Styles/BannersStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Skeletons/MobileProductSkeleton.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Skeletons/DesktopProductSkeleton.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePostComment.js",["616"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\nfunction usePostComment(fetch, id, input) {\n    const [result, setResult] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [, createComment] = useAxios({\n        url: '/create_comment',\n        method: 'POST',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await createComment({\n                    data: {\n                        \"is_comment\": true,\n                        \"text\": input,\n                        \"merchandise_id\": id\n                    },\n                })\n                setResult(response.data.status === 'success')\n                setLoading(false)\n\n            } catch (err) {\n                setResult(false)\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default usePostComment","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/StyledTextField.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/CommentCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/CommentContainer.js",["617"],"import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\"\nimport {Button, Card, CircularProgress, IconButton, Snackbar} from \"@material-ui/core\";\nimport {useMobileProductStyle} from \"./Styles/useMobileProductStyle\";\nimport {Link} from 'react-router-dom'\nimport Typography from \"@material-ui/core/Typography\";\nimport {separateDigit, toFaDigit} from \"../../../../utills/ToFaDigit\";\nimport MobileCommentCard from \"./MobileCommentCard\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport FullScreenDialog from \"./FullScreenDialog\";\nimport {StyledTextField} from \"../../Public/StyledTextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\nimport usePostComment from \"../../../PostData/usePostComment\";\nimport {useAuth} from \"../../../../utills/Auth\";\nimport {Alert} from \"@material-ui/lab\";\nimport {SmoothVerticalScrolling} from \"../../../../utills/smoothScroll\";\n\n\nfunction CommentContainer(props) {\n    const {comments, productId} = props\n    const classes = useMobileProductStyle()\n    const [open, setOpen] = useState(false)\n    const [fetchPostComment, setFetchPostComment] = useState(false)\n    const [openSnackBar, setOpenSnackBar] = useState(false)\n    const [commentInput, setCommentInput] = useState('')\n    const [createCommentLoading, createCommentResult] = usePostComment(fetchPostComment, productId, commentInput)\n    const auth = useAuth()\n\n    useEffect(() => {\n        if (!createCommentLoading && fetchPostComment) {\n            setOpenSnackBar(true)\n\n            setFetchPostComment(false)\n        }\n\n    }, [createCommentLoading, createCommentResult])\n    return (\n        <>\n            <Card className={classes.card}>\n                <Typography\n                    className={classes.detailTitle}>{toFaDigit(`دیدگاه ها (${separateDigit(comments.length)})`)}</Typography>\n                {comments.length > 0 && <MobileCommentCard isPreview={true} comment={comments[0]}/>}\n                {\n                    comments.length === 0 &&\n                    <Typography\n                        style={{\n                            color: '#545454',\n                            fontSize: 14,\n                            textAlign: 'center',\n                            opacity: 0.68,\n                            margin: '16px 0'\n                        }}\n                    >\n                        هنوز دیدگاهی ثبت نشده !\n                    </Typography>\n                }\n                <Button\n                    onClick={() => setOpen(true)}\n                    style={{marginTop: 8}}\n                    className={classes.moreButton}\n                    dir={'ltr'}\n                    variant={'text'}\n                    endIcon={\n                        <AddCircleOutlineIcon/>\n                    }\n                >\n                    {\n                        comments.length === 0\n                        ? 'ثبت دیدگاه' : 'مشاهده بیشتر'\n                    }\n\n                </Button>\n            </Card>\n            <FullScreenDialog open={open} setOpen={setOpen}\n                              title={toFaDigit(`دیدگاه ها (${separateDigit(comments.length)})`)}>\n                <Snackbar open={openSnackBar} autoHideDuration={6000} onClose={() => setOpenSnackBar(false)}>\n                    <Alert\n                        dir={'ltr'}\n                        variant={'filled'}\n                        classes={{\n                            action: classes.snackbarAction,\n                            icon: classes.snackbarIcon,\n                            message: classes.snackbarMessage,\n                        }}\n                        style={{fontFamily: 'Shabnam'}}\n                        onClose={() => setOpenSnackBar(false)}\n                        severity={auth.isLogin ? createCommentResult ? \"success\" : \"error\" : \"warning\"}\n                    >{\n                        auth.isLogin ?\n                        createCommentResult\n                            ? 'نظر شما ثبت شد. پس از بررسی، نظر شما در سایت قرار داده می‌شود.'\n                            : 'خطا لطفا دوباره تلاش کنید.'\n                            : <div style={{display: 'flex'}}>\n                                <Typography>\n                                    {' شما ابتدا باید'}\n                                </Typography>\n                                <Typography\n                                    component={\n                                        (props) =>\n                                            <Link\n                                                {...props}\n                                                onClick={() => SmoothVerticalScrolling(document.body, 500, \"top\")}\n                                                to={'/login'}/>\n                                    }\n                                    style={{margin: 'auto 4px'}}\n                                >\n                                ورود/ثبت‌نام\n                                </Typography>\n                                <Typography>\n                                    {'کنید '}\n                                </Typography>\n                            </div>\n                    }\n\n                    </Alert>\n                </Snackbar>\n                <Card className={classes.card}>\n                    {\n                        comments.map((comment) => (\n                            <div style={{marginBottom: 16}}>\n                                <MobileCommentCard isPreview={false} comment={comment}/>\n                            </div>\n                        ))\n                    }\n                    {\n                        comments.length === 0 &&\n                        <Typography\n                            style={{\n                                color: '#545454',\n                                fontSize: 14,\n                                textAlign: 'center',\n                                opacity: 0.68,\n                                margin: '16px 0'\n                            }}\n                        >\n                            هنوز دیدگاهی ثبت نشده !\n                        </Typography>\n                    }\n                    <form\n                        onSubmit={(event) => {\n                            event.preventDefault()\n                            if (!auth.isLogin){\n                                setOpenSnackBar(true)\n                            }\n                            else {\n                                setFetchPostComment(true)\n                            }\n\n                        }}\n                    >\n                        <StyledTextField\n                            required\n                            id=\"comment-input\"\n                            placeholder=\"دیدگاه خود را بنویسید\"\n                            value={toFaDigit(commentInput)}\n                            onChange={(event) => setCommentInput(event.target.value)}\n                            InputProps={{\n                                endAdornment:\n                                    <InputAdornment\n                                        style={{\n                                            position: 'absolute',\n                                            left: 0,\n                                            bottom: 28,\n                                        }}\n                                        position=\"end\"\n                                    >\n                                        {\n                                            createCommentLoading\n                                                ?\n                                                <CircularProgress size={32} color={'initial'}\n                                                                  style={{color: '#F16522'}}/>\n                                                :\n                                                <IconButton\n                                                    type={'submit'}\n                                                >\n                                                    <SendRoundedIcon\n                                                        style={{transform: 'rotate(180deg)', color: '#F16522'}}/>\n                                                </IconButton>\n\n                                        }\n                                    </InputAdornment>\n                                ,\n                                classes: {\n                                    input: classes.commentInput,\n                                    root: classes.commentInputRoot,\n                                }\n                            }}\n                            fullWidth\n                            multiline\n                            variant=\"outlined\"\n                        />\n                    </form>\n                </Card>\n\n            </FullScreenDialog>\n        </>\n    )\n\n}\n\nCommentContainer.propTypes = {\n    comments: PropTypes.object.isRequired,\n    productId: PropTypes.number.isRequired,\n}\nexport default CommentContainer","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/DescriptionCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Routes/Link/ListItemLink.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useSocialNetworkData.js",["618"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\n\nfunction useSocialNetworkData(fetch) {\n    const [result, setResult] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [, getSocialData] = useAxios({\n        url: '/admin/setting/social_network/get'\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await getSocialData()\n                setResult(response.data.data.social_networks)\n                setLoading(false)\n            } catch (err) {\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useSocialNetworkData","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Styles/useHeaderStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Styles/Transition.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/Styles/usePhotoViewerStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/Styles/useAddressFactorCardStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/Styles/useOrderFactorCardStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/PrevArrow.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/NextArrow.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/StyledSearchField.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Styles/FooterStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/Styles/useMobileProductStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/useLikingComment.js",["619"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\nfunction useLikingComment(fetch, id, status) {\n    const [result, setResult] = useState()\n    const [loading, setLoading] = useState(false)\n    const [, liking] = useAxios({\n        url: '/liking',\n        method: 'POST',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await liking({\n                    data: {\n                        \"like\": status.like,\n                        \"dislike\": status.dislike,\n                        \"comment_id\": id\n                    },\n                })\n                setResult(response.data.data)\n                setLoading(false)\n            } catch (err) {\n                setResult(null)\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useLikingComment","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/Styles/useMobilePhotoViewerStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/DetailCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/FullScreenDialog.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/MobileCommentCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/Styles/useProductDetailStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/ProductViewCard.js",["620"],"import React, {useEffect, useState} from \"react\";\nimport {Button, Card, Chip, IconButton, MenuItem, SvgIcon, TextField, Typography} from \"@material-ui/core\";\nimport MobilePhotoViewer from \"./MobilePhotoViewer\";\nimport {useMobileProductStyle} from \"./Styles/useMobileProductStyle\";\nimport {separateDigit} from \"../../../../utills/ToFaDigit\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport PropType from 'prop-types'\n\n\nfunction ProductViewCard(props) {\n    const {product, addToCart} = props\n    const classes = useMobileProductStyle()\n    const [selectedSize, setSelectedSize] = useState(product.size_list[0]) // todo: duplicate code\n    const [selectedColor, setSelectedColor] = useState(product.color_list[0])\n    const [count, setCount] = useState(1)\n    const getMaxStockNumber = () => {\n        if (product.merchandise_type === \"1\") {\n            for (let i = 0; i < product.stock_list.length; i++) {\n                if (product.stock_list[i].size === selectedSize\n                    && product.stock_list[i].color === selectedColor) {\n                    return product.stock_list[i].stock_number\n                }\n            }\n        } else {\n            return product.stock_number\n        }\n\n    }\n    const [disabled, setDisabled] = useState(getMaxStockNumber() === 0)\n    useEffect(() => {\n        setDisabled(getMaxStockNumber() === 0)\n\n    }, [selectedSize, selectedColor])\n    let images = [product.preview_image]\n    for (let i = 0; i < product.other_image_list.length; i++) {\n        images.push(product.other_image_list[i])\n    }\n\n    return (\n        <Card className={classes.card}>\n            <MobilePhotoViewer images={images}/>\n            <Typography className={classes.title}>{product.title}</Typography>\n            <div className={classes.priceDetailContainer}>\n                {\n                    product.is_exist ?\n                        product.has_discount ?\n                            <>\n                                <div className={classes.discountContainer}>\n                                    <Chip className={classes.discountChip}\n                                          label={`%${separateDigit(product.percent_of_discount * 100)}`}/>\n                                    <Typography\n                                        className={classes.prevPrice}>{separateDigit(Math.floor(product.price))}</Typography>\n\n                                </div>\n                                <div className={classes.priceContainer}>\n                                    <Typography className={classes.toman}>تومان</Typography>\n                                    <Typography\n                                        className={classes.price}>{separateDigit(Math.floor(product.price_with_discount))}</Typography>\n                                </div>\n                            </>\n                            :\n                            <div className={classes.priceContainer}>\n                                <Typography className={classes.toman}>تومان</Typography>\n                                <Typography\n                                    className={classes.price}>{separateDigit(Math.floor(product.price))}</Typography>\n                            </div>\n                        :\n                        <>\n                            <div className={classes.priceContainer}>\n                                <Typography\n                                    className={classes.price}>ناموجود</Typography>\n                            </div>\n\n                        </>\n                }\n            </div>\n            <div className={classes.selects}>\n                <div className={classes.selectContainer}>\n                    <Typography className={classes.label}>سایز</Typography>\n                    <TextField\n                        id=\"size\"\n                        select\n                        value={selectedSize}\n                        onChange={(event) => {\n                            setSelectedSize(event.target.value)\n                            setCount(1)\n                        }}\n                        InputProps={{\n                            classes: {\n                                input: classes.textFieldFont,\n                                root: classes.textFieldRoot,\n                            }\n                        }}\n                        variant=\"outlined\"\n                    >\n                        {\n                            product.size_list.map((size, index) => (\n                                <MenuItem className={classes.menu} key={index} value={size}>\n                                    {size}\n                                </MenuItem>\n                            ))\n                        }\n                    </TextField>\n                </div>\n                <div className={classes.selectContainer}>\n                    <Typography className={classes.label}>رنگ</Typography>\n                    <TextField\n                        id=\"color\"\n                        select\n                        value={selectedColor}\n                        onChange={(event) => {\n                            setSelectedColor(event.target.value)\n                            setCount(1)\n                        }}\n                        InputProps={{\n                            classes: {\n                                input: classes.textFieldFont,\n                                root: classes.textFieldRoot,\n                            }\n                        }}\n                        variant=\"outlined\"\n                    >\n                        {\n                            product.color_list.map((color, index) => (\n                                <MenuItem className={classes.menu} key={index} value={color}>\n                                    {color}\n                                </MenuItem>\n                            ))\n                        }\n                    </TextField>\n                </div>\n                <div className={classes.selectContainer}>\n                    <Typography className={classes.label}>تعداد</Typography>\n                    <div className={classes.buttonGroup}>\n                        <IconButton\n                            disabled={!product.is_exist}\n                            onClick={() => count !== getMaxStockNumber() && setCount(count + 1)}\n                            className={classes.addButton}\n                        >\n                            <AddIcon/>\n                        </IconButton>\n                        <Typography className={classes.countLabel}>{separateDigit(count)}</Typography>\n                        <IconButton\n                            disabled={!product.is_exist}\n                            onClick={() => count !== 1 && setCount(count - 1)}\n                            className={classes.removeButton}\n                        >\n                            <RemoveIcon/>\n                        </IconButton>\n                    </div>\n                </div>\n                <Button\n                    disabled={!product.is_exist || disabled}\n                    className={classes.shopButton}\n                    dir={'ltr'}\n                    onClick={() => addToCart({\n                        id: product.id,\n                        color: selectedColor,\n                        size: selectedSize,\n                        count: count,\n                    })}\n                    variant={'contained'}\n                    endIcon={\n                        <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" width=\"19.5\" height=\"21.5\"\n                                 viewBox=\"0 0 19.5 21.5\">\n                            <g id=\"shopping-bag\" transform=\"translate(-2.25 -1.25)\">\n                                <path id=\"Path_8\" data-name=\"Path 8\"\n                                      d=\"M6,2,3,6V20a2,2,0,0,0,2,2H19a2,2,0,0,0,2-2V6L18,2Z\" fill=\"none\"\n                                      stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                      strokeWidth=\"1.5\"/>\n                                <line id=\"Line_1\" data-name=\"Line 1\" x2=\"18\" transform=\"translate(3 6)\"\n                                      fill=\"none\" stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                      strokeWidth=\"1.5\"/>\n                                <path id=\"Path_9\" data-name=\"Path 9\" d=\"M16,10a4,4,0,0,1-8,0\" fill=\"none\"\n                                      stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                      strokeWidth=\"1.5\"/>\n                            </g>\n                        </SvgIcon>\n                    }\n                >\n                    افزودن به سبد خرید\n                </Button>\n            </div>\n        </Card>\n    )\n}\n\nProductViewCard.propTypes = {\n    product: PropType.object.isRequired,\n    addToCart: PropType.func.isRequired,\n}\n\n\nexport default ProductViewCard","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/TabPanel.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/MobilePhotoViewer.js",["621"],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Styles/BlogInterViewStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/ImageViewerDialog.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/Styles/useImageDilaogStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Paymentpage.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/usePaymentpageStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/AboutUsPage.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useAboutUsPageStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Theme.js",[],{"ruleId":"622","replacedBy":"623"},{"ruleId":"624","replacedBy":"625"},{"ruleId":"626","severity":1,"message":"627","line":47,"column":8,"nodeType":"628","endLine":47,"endColumn":51,"suggestions":"629"},{"ruleId":"630","severity":1,"message":"631","line":186,"column":11,"nodeType":"632","messageId":"633","endLine":186,"endColumn":22},{"ruleId":"626","severity":1,"message":"634","line":253,"column":8,"nodeType":"628","endLine":253,"endColumn":41,"suggestions":"635"},{"ruleId":"626","severity":1,"message":"636","line":278,"column":8,"nodeType":"628","endLine":278,"endColumn":41,"suggestions":"637"},{"ruleId":"626","severity":1,"message":"638","line":300,"column":8,"nodeType":"628","endLine":300,"endColumn":43,"suggestions":"639"},{"ruleId":"626","severity":1,"message":"640","line":307,"column":8,"nodeType":"628","endLine":307,"endColumn":47,"suggestions":"641"},{"ruleId":"626","severity":1,"message":"642","line":311,"column":8,"nodeType":"628","endLine":311,"endColumn":10,"suggestions":"643"},{"ruleId":"630","severity":1,"message":"644","line":33,"column":27,"nodeType":"632","messageId":"633","endLine":33,"endColumn":39},{"ruleId":"626","severity":1,"message":"645","line":87,"column":8,"nodeType":"628","endLine":87,"endColumn":25,"suggestions":"646"},{"ruleId":"626","severity":1,"message":"647","line":53,"column":8,"nodeType":"628","endLine":53,"endColumn":33,"suggestions":"648"},{"ruleId":"626","severity":1,"message":"649","line":105,"column":8,"nodeType":"628","endLine":105,"endColumn":33,"suggestions":"650"},{"ruleId":"626","severity":1,"message":"651","line":171,"column":8,"nodeType":"628","endLine":171,"endColumn":16,"suggestions":"652"},{"ruleId":"630","severity":1,"message":"653","line":2,"column":8,"nodeType":"632","messageId":"633","endLine":2,"endColumn":18},{"ruleId":"630","severity":1,"message":"654","line":41,"column":11,"nodeType":"632","messageId":"633","endLine":41,"endColumn":15},{"ruleId":"626","severity":1,"message":"655","line":27,"column":8,"nodeType":"628","endLine":27,"endColumn":15,"suggestions":"656"},{"ruleId":"626","severity":1,"message":"657","line":28,"column":8,"nodeType":"628","endLine":28,"endColumn":15,"suggestions":"658"},{"ruleId":"626","severity":1,"message":"659","line":66,"column":8,"nodeType":"628","endLine":66,"endColumn":89,"suggestions":"660"},{"ruleId":"626","severity":1,"message":"661","line":31,"column":8,"nodeType":"628","endLine":31,"endColumn":15,"suggestions":"662"},{"ruleId":"626","severity":1,"message":"663","line":33,"column":8,"nodeType":"628","endLine":33,"endColumn":15,"suggestions":"664"},{"ruleId":"626","severity":1,"message":"665","line":62,"column":8,"nodeType":"628","endLine":62,"endColumn":15,"suggestions":"666"},{"ruleId":"626","severity":1,"message":"667","line":37,"column":8,"nodeType":"628","endLine":37,"endColumn":15,"suggestions":"668"},{"ruleId":"626","severity":1,"message":"669","line":32,"column":8,"nodeType":"628","endLine":32,"endColumn":15,"suggestions":"670"},{"ruleId":"626","severity":1,"message":"671","line":40,"column":8,"nodeType":"628","endLine":40,"endColumn":15,"suggestions":"672"},{"ruleId":"626","severity":1,"message":"673","line":35,"column":8,"nodeType":"628","endLine":35,"endColumn":15,"suggestions":"674"},{"ruleId":"630","severity":1,"message":"675","line":17,"column":11,"nodeType":"632","messageId":"633","endLine":17,"endColumn":18},{"ruleId":"630","severity":1,"message":"676","line":11,"column":39,"nodeType":"632","messageId":"633","endLine":11,"endColumn":48},{"ruleId":"626","severity":1,"message":"677","line":48,"column":8,"nodeType":"628","endLine":48,"endColumn":37,"suggestions":"678"},{"ruleId":"626","severity":1,"message":"679","line":38,"column":8,"nodeType":"628","endLine":38,"endColumn":15,"suggestions":"680"},{"ruleId":"626","severity":1,"message":"681","line":27,"column":8,"nodeType":"628","endLine":27,"endColumn":19,"suggestions":"682"},{"ruleId":"626","severity":1,"message":"683","line":27,"column":8,"nodeType":"628","endLine":27,"endColumn":15,"suggestions":"684"},{"ruleId":"630","severity":1,"message":"685","line":16,"column":8,"nodeType":"632","messageId":"633","endLine":16,"endColumn":24},{"ruleId":"626","severity":1,"message":"686","line":39,"column":8,"nodeType":"628","endLine":39,"endColumn":51,"suggestions":"687"},{"ruleId":"626","severity":1,"message":"688","line":80,"column":8,"nodeType":"628","endLine":80,"endColumn":15,"suggestions":"689"},{"ruleId":"626","severity":1,"message":"690","line":34,"column":8,"nodeType":"628","endLine":34,"endColumn":15,"suggestions":"691"},{"ruleId":"626","severity":1,"message":"686","line":36,"column":8,"nodeType":"628","endLine":36,"endColumn":51,"suggestions":"692"},{"ruleId":"626","severity":1,"message":"693","line":27,"column":8,"nodeType":"628","endLine":27,"endColumn":15,"suggestions":"694"},{"ruleId":"626","severity":1,"message":"695","line":33,"column":8,"nodeType":"628","endLine":33,"endColumn":15,"suggestions":"696"},{"ruleId":"626","severity":1,"message":"677","line":34,"column":8,"nodeType":"628","endLine":34,"endColumn":37,"suggestions":"697"},{"ruleId":"626","severity":1,"message":"688","line":49,"column":8,"nodeType":"628","endLine":49,"endColumn":15,"suggestions":"698"},"no-native-reassign",["699"],"no-negated-in-lhs",["700"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchDelete'. Either include it or remove the dependency array.","ArrayExpression",["701"],"no-unused-vars","'isDuplicate' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'discountCode', 'fetchPostCart', and 'localStorageCart'. Either include them or remove the dependency array.",["702"],"React Hook useEffect has missing dependencies: 'basketDetails', 'fetchPathCart', and 'localStorageCart'. Either include them or remove the dependency array. You can also do a functional update 'setBasketDetails(b => ...)' if you only need 'basketDetails' in the 'setBasketDetails' call.",["703"],"React Hook useEffect has missing dependencies: 'basketDetails' and 'errors'. Either include them or remove the dependency array. You can also do a functional update 'setBasketDetails(b => ...)' if you only need 'basketDetails' in the 'setBasketDetails' call.",["704"],"React Hook useEffect has a missing dependency: 'fetchPostAddress'. Either include it or remove the dependency array.",["705"],"React Hook useEffect has a missing dependency: 'setBasketChange'. Either include it or remove the dependency array.",["706"],"'updateResult' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["707"],"React Hook useEffect has missing dependencies: 'fetchPost' and 'history'. Either include them or remove the dependency array.",["708"],"React Hook useEffect has missing dependencies: 'history' and 'location'. Either include them or remove the dependency array.",["709"],"React Hook useEffect has missing dependencies: 'history', 'location.search', and 'searchStates.categories'. Either include them or remove the dependency array.",["710"],"'ShopLayout' is defined but never used.","'auth' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAddresses'. Either include it or remove the dependency array.",["711"],"React Hook useEffect has a missing dependency: 'getInfo'. Either include it or remove the dependency array.",["712"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["713"],"React Hook useEffect has missing dependencies: 'deleteAddress' and 'id'. Either include them or remove the dependency array.",["714"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["715"],"React Hook useEffect has missing dependencies: 'create_basket' and 'create_box'. Either include them or remove the dependency array.",["716"],"React Hook useEffect has missing dependencies: 'createAddress', 'values.address', 'values.city.id', 'values.code', 'values.email', 'values.mobileNumber', 'values.name', and 'values.state.id'. Either include them or remove the dependency array.",["717"],"React Hook useEffect has missing dependencies: 'applyCode', 'discountCode', and 'id'. Either include them or remove the dependency array.",["718"],"React Hook useEffect has missing dependencies: 'address.address', 'address.city', 'address.costumer_name', 'address.email', 'address.phone_number', 'address.post_code', 'address.state', 'details', 'id', and 'updateBasket'. Either include them or remove the dependency array.",["719"],"React Hook useEffect has a missing dependency: 'getIndex'. Either include it or remove the dependency array.",["720"],"'classes' is assigned a value but never used.","'setErrors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMaxStockNumber'. Either include it or remove the dependency array.",["721"],"React Hook useEffect has missing dependencies: 'history', 'id', 'updateInfo', 'values.city.id', 'values.email', 'values.name', and 'values.state.id'. Either include them or remove the dependency array.",["722"],"React Hook useEffect has a missing dependency: 'getCities'. Either include it or remove the dependency array.",["723"],"React Hook useEffect has a missing dependency: 'getStates'. Either include it or remove the dependency array.",["724"],"'FullScreenDialog' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchPostComment'. Either include it or remove the dependency array.",["725"],"React Hook useEffect has a missing dependency: 'images.length'. Either include it or remove the dependency array.",["726"],"React Hook useEffect has missing dependencies: 'createComment', 'id', and 'input'. Either include them or remove the dependency array.",["727"],["728"],"React Hook useEffect has a missing dependency: 'getSocialData'. Either include it or remove the dependency array.",["729"],"React Hook useEffect has missing dependencies: 'id', 'liking', 'status.dislike', and 'status.like'. Either include them or remove the dependency array.",["730"],["731"],["732"],"no-global-assign","no-unsafe-negation",{"desc":"733","fix":"734"},{"desc":"735","fix":"736"},{"desc":"737","fix":"738"},{"desc":"739","fix":"740"},{"desc":"741","fix":"742"},{"desc":"743","fix":"744"},{"desc":"745","fix":"746"},{"desc":"747","fix":"748"},{"desc":"749","fix":"750"},{"desc":"751","fix":"752"},{"desc":"753","fix":"754"},{"desc":"755","fix":"756"},{"desc":"757","fix":"758"},{"desc":"759","fix":"760"},{"desc":"761","fix":"762"},{"desc":"763","fix":"764"},{"desc":"765","fix":"766"},{"desc":"767","fix":"768"},{"desc":"769","fix":"770"},{"desc":"771","fix":"772"},{"desc":"773","fix":"774"},{"desc":"775","fix":"776"},{"desc":"777","fix":"778"},{"desc":"779","fix":"780"},{"desc":"781","fix":"782"},{"desc":"783","fix":"784"},{"desc":"785","fix":"786"},{"desc":"781","fix":"787"},{"desc":"788","fix":"789"},{"desc":"790","fix":"791"},{"desc":"773","fix":"792"},{"desc":"783","fix":"793"},"Update the dependencies array to be: [loadingDeleteAddress, deleteAddressResult, fetchDelete]",{"range":"794","text":"795"},"Update the dependencies array to be: [discountCode, fetchPostCart, localStorageCart, postCartLoading, postCartResult]",{"range":"796","text":"797"},"Update the dependencies array to be: [basketDetails, fetchPathCart, localStorageCart, pathCartLoading, pathCartResult]",{"range":"798","text":"799"},"Update the dependencies array to be: [applyCodeLoading, applyCodeResult, basketDetails, errors]",{"range":"800","text":"801"},"Update the dependencies array to be: [fetchPostAddress, postAddressLoading, postAddressResult]",{"range":"802","text":"803"},"Update the dependencies array to be: [setBasketChange]",{"range":"804","text":"805"},"Update the dependencies array to be: [loading, result, values]",{"range":"806","text":"807"},"Update the dependencies array to be: [fetchPost, history, postLoading, postResult]",{"range":"808","text":"809"},"Update the dependencies array to be: [catsLoading, catsResult, history, location]",{"range":"810","text":"811"},"Update the dependencies array to be: [change, history, location.search, searchStates.categories]",{"range":"812","text":"813"},"Update the dependencies array to be: [fetch, getAddresses]",{"range":"814","text":"815"},"Update the dependencies array to be: [fetch, getInfo]",{"range":"816","text":"817"},"Update the dependencies array to be: [fetch, search, page, fromPrice, toPrice, hasDiscount, showCampaign, getProducts, history]",{"range":"818","text":"819"},"Update the dependencies array to be: [deleteAddress, fetch, id]",{"range":"820","text":"821"},"Update the dependencies array to be: [fetch, getCategories]",{"range":"822","text":"823"},"Update the dependencies array to be: [create_basket, create_box, fetch]",{"range":"824","text":"825"},"Update the dependencies array to be: [createAddress, fetch, values.address, values.city.id, values.code, values.email, values.mobileNumber, values.name, values.state.id]",{"range":"826","text":"827"},"Update the dependencies array to be: [applyCode, discountCode, fetch, id]",{"range":"828","text":"829"},"Update the dependencies array to be: [address.address, address.city, address.costumer_name, address.email, address.phone_number, address.post_code, address.state, details, fetch, id, updateBasket]",{"range":"830","text":"831"},"Update the dependencies array to be: [fetch, getIndex]",{"range":"832","text":"833"},"Update the dependencies array to be: [selectedSize, selectedColor, getMaxStockNumber]",{"range":"834","text":"835"},"Update the dependencies array to be: [fetch, history, id, updateInfo, values.city.id, values.email, values.name, values.state.id]",{"range":"836","text":"837"},"Update the dependencies array to be: [fetch, getCities, id]",{"range":"838","text":"839"},"Update the dependencies array to be: [fetch, getStates]",{"range":"840","text":"841"},"Update the dependencies array to be: [createCommentLoading, createCommentResult, fetchPostComment]",{"range":"842","text":"843"},"Update the dependencies array to be: [images.length, index]",{"range":"844","text":"845"},"Update the dependencies array to be: [createComment, fetch, id, input]",{"range":"846","text":"847"},{"range":"848","text":"843"},"Update the dependencies array to be: [fetch, getSocialData]",{"range":"849","text":"850"},"Update the dependencies array to be: [fetch, id, liking, status.dislike, status.like]",{"range":"851","text":"852"},{"range":"853","text":"835"},{"range":"854","text":"845"},[1973,2016],"[loadingDeleteAddress, deleteAddressResult, fetchDelete]",[8606,8639],"[discountCode, fetchPostCart, localStorageCart, postCartLoading, postCartResult]",[9383,9416],"[basketDetails, fetchPathCart, localStorageCart, pathCartLoading, pathCartResult]",[10010,10045],"[applyCodeLoading, applyCodeResult, basketDetails, errors]",[10182,10221],"[fetchPostAddress, postAddressLoading, postAddressResult]",[10305,10307],"[setBasketChange]",[2843,2860],"[loading, result, values]",[1508,1533],"[fetchPost, history, postLoading, postResult]",[4227,4252],"[catsLoading, catsResult, history, location]",[6393,6401],"[change, history, location.search, searchStates.categories]",[733,740],"[fetch, getAddresses]",[771,778],"[fetch, getInfo]",[2267,2348],"[fetch, search, page, fromPrice, toPrice, hasDiscount, showCampaign, getProducts, history]",[918,925],"[deleteAddress, fetch, id]",[1043,1050],"[fetch, getCategories]",[2194,2201],"[create_basket, create_box, fetch]",[1283,1290],"[createAddress, fetch, values.address, values.city.id, values.code, values.email, values.mobileNumber, values.name, values.state.id]",[969,976],"[applyCode, discountCode, fetch, id]",[1426,1433],"[address.address, address.city, address.costumer_name, address.email, address.phone_number, address.post_code, address.state, details, fetch, id, updateBasket]",[997,1004],"[fetch, getIndex]",[1584,1613],"[selectedSize, selectedColor, getMaxStockNumber]",[1245,1252],"[fetch, history, id, updateInfo, values.city.id, values.email, values.name, values.state.id]",[715,726],"[fetch, getCities, id]",[698,705],"[fetch, getStates]",[1636,1679],"[createCommentLoading, createCommentResult, fetchPostComment]",[2887,2894],"[images.length, index]",[998,1005],"[createComment, fetch, id, input]",[1585,1628],[752,759],"[fetch, getSocialData]",[965,972],"[fetch, id, liking, status.dislike, status.like]",[1416,1445],[1809,1816]]