[{"/Users/tavallai/codes/JS/didartshop-website/src/index.js":"1","/Users/tavallai/codes/JS/didartshop-website/src/App.js":"2","/Users/tavallai/codes/JS/didartshop-website/src/Routes/PrivateRoute.js":"3","/Users/tavallai/codes/JS/didartshop-website/src/Routes/PublicRoute.js":"4","/Users/tavallai/codes/JS/didartshop-website/src/utills/Auth.js":"5","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/ProfilePage.js":"6","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/ForgetPassPage.js":"7","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/CartPage.js":"8","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/ProductPage.js":"9","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/UserInfoPage.js":"10","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/SignUpPage.js":"11","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/HomePage.js":"12","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/AddressesPage.js":"13","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/SearchPage.js":"14","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/LoginPage.js":"15","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/ShopLayout.js":"16","/Users/tavallai/codes/JS/didartshop-website/src/utills/ToFaDigit.js":"17","/Users/tavallai/codes/JS/didartshop-website/src/utills/smoothScroll.js":"18","/Users/tavallai/codes/JS/didartshop-website/src/utills/Hooks/useWindowSize.js":"19","/Users/tavallai/codes/JS/didartshop-website/src/utills/Hooks/useForceUpdate.js":"20","/Users/tavallai/codes/JS/didartshop-website/src/utills/Hooks/useLogin.js":"21","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Footer.js":"22","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Header.js":"23","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useLoginPageStyle.js":"24","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useProfilePageStyle.js":"25","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useAddressesData.js":"26","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useUserOrderData.js":"27","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useMaxPriceData.js":"28","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useForgetPassPageStyle.js":"29","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useUserData.js":"30","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useCartPageStyle.js":"31","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useProductPageStyle.js":"32","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useSearchData.js":"33","/Users/tavallai/codes/JS/didartshop-website/src/Shop/DeleteData/useDeleteAddress.js":"34","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useCategoriesData.js":"35","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePostCart.js":"36","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePostAddress.js":"37","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/useApplyDiscountCode.js":"38","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePathCart.js":"39","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Styles/ShopLayoutStyle.js":"40","/Users/tavallai/codes/JS/didartshop-website/src/Routes/Link/ItemLink.js":"41","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useAddressPageStyle.js":"42","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useHomeData.js":"43","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/Step.js":"44","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/Title.js":"45","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/ForgetPass/ThirdStep.js":"46","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/SignUp/SecondStep.js":"47","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/AddressCard.js":"48","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/OrderCard.js":"49","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Profile/PreviewOrderCard.js":"50","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/FactorCard.js":"51","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/AddressForm.js":"52","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Search/Reducer.js":"53","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/ForgetPass/FirstStep.js":"54","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/TablePaginationActions.js":"55","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Search/FilterPrice.js":"56","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Skeletons/ProfilePageSkeleton.js":"57","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Search/Styles/SearchStyle.js":"58","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/ProuductCard.js":"59","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Profile/PreviewAddressCard.js":"60","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Search/FilterCategory.js":"61","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/SignUp/ThirdStep.js":"62","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/DesktopProduct.js":"63","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/BlogInterView.js":"64","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Slider.js":"65","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Banners.js":"66","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Attributes.js":"67","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/BestSeller.js":"68","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/AmazingOffers.js":"69","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useSignUpPageStyle.js":"70","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/SignUp/FirstStep.js":"71","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePathUserInfo.js":"72","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useCityData.js":"73","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useStateData.js":"74","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useUserInfoPageStyle.js":"75","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Skeletons/ProductPageSkeleton.js":"76","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useProductData.js":"77","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/ProductDetail.js":"78","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/SimilarProducts.js":"79","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/MobileProduct.js":"80","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/CategoriesList.js":"81","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/SocialNetwork.js":"82","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/SearchDialog.js":"83","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/CategoryMenu.js":"84","/Users/tavallai/codes/JS/didartshop-website/src/utills/Hooks/useAxios.js":"85","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/DesktopPhotoViewer.js":"86","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/AddressFactorCard.js":"87","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Search/Styles/FilterStyles.js":"88","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/OrderFactorCard.js":"89","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/StyledRadio.js":"90","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/Styles/useProductCardStyle.js":"91","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Profile/Styles/usePreviewOrderStyle.js":"92","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/ProductGrid.js":"93","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/Styles/ProductsSliderStyle.js":"94","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/ProductsSlider.js":"95","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/Styles/useProductStyle.js":"96","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/Styles/useFactoreCardStyle.js":"97","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/Styles/useOrderCardStyle.js":"98","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/Styles/useAddressCardStyle.js":"99","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Styles/AmazingOffersStyle.js":"100","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Styles/AttributesStyle.js":"101","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Styles/BannersStyle.js":"102","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Skeletons/MobileProductSkeleton.js":"103","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Skeletons/DesktopProductSkeleton.js":"104","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePostComment.js":"105","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/StyledTextField.js":"106","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/CommentCard.js":"107","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/CommentContainer.js":"108","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/DescriptionCard.js":"109","/Users/tavallai/codes/JS/didartshop-website/src/Routes/Link/ListItemLink.js":"110","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useSocialNetworkData.js":"111","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Styles/useHeaderStyle.js":"112","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Styles/Transition.js":"113","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/Styles/usePhotoViewerStyle.js":"114","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/Styles/useAddressFactorCardStyle.js":"115","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/Styles/useOrderFactorCardStyle.js":"116","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/PrevArrow.js":"117","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/NextArrow.js":"118","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/StyledSearchField.js":"119","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Styles/FooterStyle.js":"120","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/Styles/useMobileProductStyle.js":"121","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/useLikingComment.js":"122","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/Styles/useMobilePhotoViewerStyle.js":"123","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/DetailCard.js":"124","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/FullScreenDialog.js":"125","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/MobileCommentCard.js":"126","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/Styles/useProductDetailStyle.js":"127","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/ProductViewCard.js":"128","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/TabPanel.js":"129","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/MobilePhotoViewer.js":"130","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Styles/BlogInterViewStyle.js":"131","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/ImageViewerDialog.js":"132","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/Styles/useImageDilaogStyle.js":"133","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Paymentpage.js":"134","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/usePaymentpageStyle.js":"135","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/AboutUsPage.js":"136","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useAboutUsPageStyle.js":"137","/Users/tavallai/codes/JS/didartshop-website/src/Theme.js":"138","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/useSendSms.js":"139","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePayment.js":"140","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/useValidation.js":"141","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/useSignUp.js":"142","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/useRestorePassword.js":"143","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/useSendResetSms.js":"144"},{"size":218,"mtime":1612852107866,"results":"145","hashOfConfig":"146"},{"size":3528,"mtime":1610789217085,"results":"147","hashOfConfig":"146"},{"size":526,"mtime":1609789736084,"results":"148","hashOfConfig":"146"},{"size":543,"mtime":1609793361463,"results":"149","hashOfConfig":"146"},{"size":569,"mtime":1609793361489,"results":"150","hashOfConfig":"146"},{"size":6466,"mtime":1609793361486,"results":"151","hashOfConfig":"146"},{"size":6872,"mtime":1613067194556,"results":"152","hashOfConfig":"146"},{"size":24700,"mtime":1613049419331,"results":"153","hashOfConfig":"146"},{"size":5268,"mtime":1610705548088,"results":"154","hashOfConfig":"146"},{"size":11259,"mtime":1609793361488,"results":"155","hashOfConfig":"146"},{"size":8111,"mtime":1613066748310,"results":"156","hashOfConfig":"146"},{"size":1178,"mtime":1611359369864,"results":"157","hashOfConfig":"146"},{"size":2674,"mtime":1609793361481,"results":"158","hashOfConfig":"146"},{"size":14722,"mtime":1610627671833,"results":"159","hashOfConfig":"146"},{"size":9783,"mtime":1609793361486,"results":"160","hashOfConfig":"146"},{"size":497,"mtime":1609789736091,"results":"161","hashOfConfig":"146"},{"size":1326,"mtime":1610336392959,"results":"162","hashOfConfig":"146"},{"size":376,"mtime":1609793361489,"results":"163","hashOfConfig":"146"},{"size":599,"mtime":1609789736846,"results":"164","hashOfConfig":"146"},{"size":213,"mtime":1609789736846,"results":"165","hashOfConfig":"146"},{"size":931,"mtime":1609793361489,"results":"166","hashOfConfig":"146"},{"size":3755,"mtime":1612289239215,"results":"167","hashOfConfig":"146"},{"size":17180,"mtime":1610760700843,"results":"168","hashOfConfig":"146"},{"size":3503,"mtime":1609793361487,"results":"169","hashOfConfig":"146"},{"size":2140,"mtime":1609793361487,"results":"170","hashOfConfig":"146"},{"size":806,"mtime":1609793361478,"results":"171","hashOfConfig":"146"},{"size":789,"mtime":1609793361479,"results":"172","hashOfConfig":"146"},{"size":1866,"mtime":1610196128893,"results":"173","hashOfConfig":"146"},{"size":1390,"mtime":1613066418750,"results":"174","hashOfConfig":"146"},{"size":849,"mtime":1609793361479,"results":"175","hashOfConfig":"146"},{"size":3170,"mtime":1609793361487,"results":"176","hashOfConfig":"146"},{"size":638,"mtime":1609793361487,"results":"177","hashOfConfig":"146"},{"size":2411,"mtime":1609793361478,"results":"178","hashOfConfig":"146"},{"size":991,"mtime":1609793361478,"results":"179","hashOfConfig":"146"},{"size":1117,"mtime":1610489726149,"results":"180","hashOfConfig":"146"},{"size":2262,"mtime":1612289239216,"results":"181","hashOfConfig":"146"},{"size":1354,"mtime":1610223772118,"results":"182","hashOfConfig":"146"},{"size":1046,"mtime":1609793361488,"results":"183","hashOfConfig":"146"},{"size":1503,"mtime":1610222903329,"results":"184","hashOfConfig":"146"},{"size":341,"mtime":1609793361480,"results":"185","hashOfConfig":"146"},{"size":776,"mtime":1610310430283,"results":"186","hashOfConfig":"146"},{"size":948,"mtime":1609793361487,"results":"187","hashOfConfig":"146"},{"size":1065,"mtime":1609789736090,"results":"188","hashOfConfig":"146"},{"size":872,"mtime":1609793361474,"results":"189","hashOfConfig":"146"},{"size":1134,"mtime":1610312160883,"results":"190","hashOfConfig":"146"},{"size":2961,"mtime":1613067194562,"results":"191","hashOfConfig":"146"},{"size":6436,"mtime":1613066840096,"results":"192","hashOfConfig":"146"},{"size":2347,"mtime":1609793361463,"results":"193","hashOfConfig":"146"},{"size":13142,"mtime":1610247978238,"results":"194","hashOfConfig":"146"},{"size":3172,"mtime":1609793361473,"results":"195","hashOfConfig":"146"},{"size":1743,"mtime":1609793361463,"results":"196","hashOfConfig":"146"},{"size":8627,"mtime":1609793361473,"results":"197","hashOfConfig":"146"},{"size":1141,"mtime":1609793361477,"results":"198","hashOfConfig":"146"},{"size":1655,"mtime":1609793361464,"results":"199","hashOfConfig":"146"},{"size":7066,"mtime":1610628617089,"results":"200","hashOfConfig":"146"},{"size":2816,"mtime":1609793361477,"results":"201","hashOfConfig":"146"},{"size":1935,"mtime":1609789736090,"results":"202","hashOfConfig":"146"},{"size":3130,"mtime":1610209812571,"results":"203","hashOfConfig":"146"},{"size":5647,"mtime":1612290356981,"results":"204","hashOfConfig":"146"},{"size":3513,"mtime":1609793361473,"results":"205","hashOfConfig":"146"},{"size":4812,"mtime":1609789736089,"results":"206","hashOfConfig":"146"},{"size":8911,"mtime":1609793361478,"results":"207","hashOfConfig":"146"},{"size":14280,"mtime":1612289239214,"results":"208","hashOfConfig":"146"},{"size":2362,"mtime":1609789736086,"results":"209","hashOfConfig":"146"},{"size":849,"mtime":1609793361464,"results":"210","hashOfConfig":"146"},{"size":2438,"mtime":1610786330311,"results":"211","hashOfConfig":"146"},{"size":1299,"mtime":1609789736085,"results":"212","hashOfConfig":"146"},{"size":1570,"mtime":1609789736086,"results":"213","hashOfConfig":"146"},{"size":1246,"mtime":1612289239213,"results":"214","hashOfConfig":"146"},{"size":2975,"mtime":1613066517521,"results":"215","hashOfConfig":"146"},{"size":1711,"mtime":1609793361477,"results":"216","hashOfConfig":"146"},{"size":1317,"mtime":1609793361488,"results":"217","hashOfConfig":"146"},{"size":787,"mtime":1609793361478,"results":"218","hashOfConfig":"146"},{"size":767,"mtime":1609793361479,"results":"219","hashOfConfig":"146"},{"size":1290,"mtime":1609793361487,"results":"220","hashOfConfig":"146"},{"size":667,"mtime":1609789736090,"results":"221","hashOfConfig":"146"},{"size":981,"mtime":1609793361478,"results":"222","hashOfConfig":"146"},{"size":8512,"mtime":1610789287448,"results":"223","hashOfConfig":"146"},{"size":1409,"mtime":1610194904967,"results":"224","hashOfConfig":"146"},{"size":1066,"mtime":1609793361472,"results":"225","hashOfConfig":"146"},{"size":1082,"mtime":1609793361479,"results":"226","hashOfConfig":"146"},{"size":9979,"mtime":1609789736091,"results":"227","hashOfConfig":"146"},{"size":3083,"mtime":1609789736091,"results":"228","hashOfConfig":"146"},{"size":2941,"mtime":1610336044942,"results":"229","hashOfConfig":"146"},{"size":264,"mtime":1609789736846,"results":"230","hashOfConfig":"146"},{"size":5566,"mtime":1611418442071,"results":"231","hashOfConfig":"146"},{"size":2412,"mtime":1609793361463,"results":"232","hashOfConfig":"146"},{"size":5049,"mtime":1609793361477,"results":"233","hashOfConfig":"146"},{"size":1836,"mtime":1609793361463,"results":"234","hashOfConfig":"146"},{"size":321,"mtime":1609793361474,"results":"235","hashOfConfig":"146"},{"size":2092,"mtime":1612295013193,"results":"236","hashOfConfig":"146"},{"size":931,"mtime":1609793361473,"results":"237","hashOfConfig":"146"},{"size":758,"mtime":1609793361473,"results":"238","hashOfConfig":"146"},{"size":1588,"mtime":1612288990368,"results":"239","hashOfConfig":"146"},{"size":4921,"mtime":1610197051368,"results":"240","hashOfConfig":"146"},{"size":3970,"mtime":1609793361473,"results":"241","hashOfConfig":"146"},{"size":926,"mtime":1609793361464,"results":"242","hashOfConfig":"146"},{"size":4200,"mtime":1610248233012,"results":"243","hashOfConfig":"146"},{"size":1160,"mtime":1609793361464,"results":"244","hashOfConfig":"146"},{"size":1804,"mtime":1612288990367,"results":"245","hashOfConfig":"146"},{"size":1664,"mtime":1609793361471,"results":"246","hashOfConfig":"146"},{"size":1783,"mtime":1609793361471,"results":"247","hashOfConfig":"146"},{"size":2891,"mtime":1609789736090,"results":"248","hashOfConfig":"146"},{"size":3192,"mtime":1612851524924,"results":"249","hashOfConfig":"146"},{"size":1069,"mtime":1609793361488,"results":"250","hashOfConfig":"146"},{"size":487,"mtime":1609789736088,"results":"251","hashOfConfig":"146"},{"size":7122,"mtime":1609793361471,"results":"252","hashOfConfig":"146"},{"size":9250,"mtime":1610789287456,"results":"253","hashOfConfig":"146"},{"size":1692,"mtime":1609789736086,"results":"254","hashOfConfig":"146"},{"size":1203,"mtime":1609793361463,"results":"255","hashOfConfig":"146"},{"size":829,"mtime":1609789736090,"results":"256","hashOfConfig":"146"},{"size":5108,"mtime":1610760700819,"results":"257","hashOfConfig":"146"},{"size":165,"mtime":1609789736091,"results":"258","hashOfConfig":"146"},{"size":1718,"mtime":1609793361473,"results":"259","hashOfConfig":"146"},{"size":890,"mtime":1609793361464,"results":"260","hashOfConfig":"146"},{"size":1057,"mtime":1609793361464,"results":"261","hashOfConfig":"146"},{"size":949,"mtime":1609789736088,"results":"262","hashOfConfig":"146"},{"size":949,"mtime":1609789736088,"results":"263","hashOfConfig":"146"},{"size":858,"mtime":1609793361480,"results":"264","hashOfConfig":"146"},{"size":2104,"mtime":1610758025166,"results":"265","hashOfConfig":"146"},{"size":5414,"mtime":1609793361473,"results":"266","hashOfConfig":"146"},{"size":1038,"mtime":1609793361488,"results":"267","hashOfConfig":"146"},{"size":1059,"mtime":1609793361472,"results":"268","hashOfConfig":"146"},{"size":1671,"mtime":1609789736087,"results":"269","hashOfConfig":"146"},{"size":2147,"mtime":1609789736087,"results":"270","hashOfConfig":"146"},{"size":7722,"mtime":1609793361472,"results":"271","hashOfConfig":"146"},{"size":2233,"mtime":1609793361473,"results":"272","hashOfConfig":"146"},{"size":9010,"mtime":1610196462607,"results":"273","hashOfConfig":"146"},{"size":734,"mtime":1609789736088,"results":"274","hashOfConfig":"146"},{"size":2964,"mtime":1612289239215,"results":"275","hashOfConfig":"146"},{"size":1781,"mtime":1609793361471,"results":"276","hashOfConfig":"146"},{"size":2521,"mtime":1610404828290,"results":"277","hashOfConfig":"278"},{"size":775,"mtime":1610404428977,"results":"279","hashOfConfig":"278"},{"size":6083,"mtime":1610687146213,"results":"280","hashOfConfig":"146"},{"size":1727,"mtime":1610687101508,"results":"281","hashOfConfig":"146"},{"size":2822,"mtime":1612120559565,"results":"282","hashOfConfig":"146"},{"size":1109,"mtime":1610758403371,"results":"283","hashOfConfig":"146"},{"size":1064,"mtime":1610698670427,"results":"284","hashOfConfig":"146"},{"size":1008,"mtime":1612289239217,"results":"285","hashOfConfig":"146"},{"size":989,"mtime":1613008945060,"results":"286","hashOfConfig":"146"},{"size":1085,"mtime":1613054996869,"results":"287","hashOfConfig":"146"},{"size":1263,"mtime":1613055113501,"results":"288","hashOfConfig":"146"},{"size":1128,"mtime":1613064765024,"results":"289","hashOfConfig":"146"},{"size":1038,"mtime":1613065526740,"results":"290","hashOfConfig":"146"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},"1en869z",{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"293"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"293"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"293"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"293"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"293"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"293"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"293"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"293"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"293"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"293"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"293"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"293"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"293"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"293"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"293"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"293"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"293"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"293"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"293"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"293"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"293"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"293"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"293"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"293"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"293"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"293"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"293"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"293"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"293"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"293"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19grmed",{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"293"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"293"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"293"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"611","messages":"612","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tavallai/codes/JS/didartshop-website/src/index.js",[],["613","614"],"/Users/tavallai/codes/JS/didartshop-website/src/App.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Routes/PrivateRoute.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Routes/PublicRoute.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/utills/Auth.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/ProfilePage.js",["615"],"import React, {useEffect, useState} from \"react\";\nimport Title from \"../Components/Public/Title\";\nimport {Button, Card, Typography} from \"@material-ui/core\";\nimport profileImage from '../../img/profile.png'\nimport PreviewOrderCard from \"../Components/Profile/PreviewOrderCard\";\nimport {useProfilePageStyle} from \"./Styles/useProfilePageStyle\";\nimport PreviewAddressCard from \"../Components/Profile/PreviewAddressCard\";\nimport {useHistory} from 'react-router-dom'\nimport useUserData from \"../FetchData/useUserData\";\nimport {toFaDigit} from \"../../utills/ToFaDigit\";\nimport ProfilePageSkeleton from \"../Components/Skeletons/ProfilePageSkeleton\";\nimport useAddressesData from \"../FetchData/useAddressesData\";\nimport useDeleteAddress from \"../DeleteData/useDeleteAddress\";\nimport {SmoothVerticalScrolling} from \"../../utills/smoothScroll\";\nimport useUserOrderData from \"../FetchData/useUserOrderData\";\n\nfunction ProfilePage() {\n    const [fetchDelete, setFetchDelete] = useState(false)\n    const [fetchAddresses, setFetchAddresses] = useState(true)\n\n    const [deleteId, setDeleteId] = useState(0)\n    const [loadingUserData, userDataResult] = useUserData(true)\n    const [loadingAddressesData, addressesDataResult] = useAddressesData(fetchAddresses)\n    const [loadingOrderData, orderDataResult] = useUserOrderData(true)\n    const [loadingDeleteAddress, deleteAddressResult] = useDeleteAddress(fetchDelete, deleteId)\n    const classes = useProfilePageStyle()\n    const history = useHistory()\n\n    const handleDeleteAddress = (id) => {\n        setDeleteId(id)\n        setFetchDelete(true)\n    }\n\n    useEffect(() => {\n        if (!loadingAddressesData) {\n            setFetchAddresses(false)\n        }\n    }, [loadingAddressesData, addressesDataResult])\n\n    useEffect(() => {\n        if (!loadingDeleteAddress && fetchDelete) {\n            if (deleteAddressResult) {\n                setFetchAddresses(true)\n                setFetchDelete(false)\n            }\n        }\n    }, [loadingDeleteAddress, deleteAddressResult])\n\n    if (loadingUserData || loadingAddressesData || loadingDeleteAddress || loadingOrderData)\n        return <ProfilePageSkeleton/>\n    return (\n        <>\n            <div className={classes.container}>\n                <Title title={'پروفایل کاربری'}/>\n                <Card className={classes.profileCard}>\n                    <div className={classes.profileContent}>\n                        <img className={classes.image} src={profileImage} alt={'profile'}/>\n                        <div className={classes.profileDetail}>\n                            <Typography className={classes.name}>{userDataResult.name_and_last_name}</Typography>\n                            <Typography\n                                className={classes.mobileNumber}>{toFaDigit((userDataResult.mobile_number).toString())}</Typography>\n                        </div>\n                    </div>\n                    <div className={classes.actionContainer}>\n                        <Button\n                            onClick={() => {\n                                SmoothVerticalScrolling(document.body, 500, \"top\")\n                                history.push('/profile/personal-info')\n                            }}\n                            className={classes.editButton}\n                            variant={'outlined'}\n                        >\n                            ویرایش اطلاعات کاربری\n                        </Button>\n                        <Button\n                            style={{marginTop: 8}}\n                            onClick={() => {\n                                localStorage.removeItem('Authorization')\n                                history.go(0)\n                            }}\n                            className={classes.editButton}\n                            variant={'outlined'}\n                        >\n                            خروج\n                        </Button>\n                    </div>\n                </Card>\n                <Typography className={classes.title}>سفارشات شما</Typography>\n                <div className={classes.cardsContainer}>\n                    {\n                        orderDataResult.map((order) => (\n                            <div key={Math.round(order.create_date)}>\n                                <PreviewOrderCard order={order}/>\n                            </div>\n                        ))\n                    }\n                    {\n                        orderDataResult.length === 0 &&\n                            <Typography\n                                style={{fontWeight: 500, fontSize: 16, textAlign: 'center'}}\n                                className={classes.title}>\n                                سفارشی ثبت نشده\n                            </Typography>\n                    }\n                </div>\n                <div style={{marginTop: 22, marginBottom: 16, display: 'flex', justifyContent: 'space-between'}}>\n                    <Typography style={{margin: 'auto 0'}} className={classes.title}>آدرس‌های شما</Typography>\n                    <Button\n                        onClick={() => {\n                            SmoothVerticalScrolling(document.body, 500, \"top\")\n                            history.push('/profile/addresses')\n                        }}\n                    >\n                        <Typography\n                            className={classes.addAddress}\n                        >\n                            افزودن آدرس\n                        </Typography>\n                    </Button>\n                </div>\n                <div className={classes.cardsContainer}>\n                    {\n                        addressesDataResult.map((address) => (\n                            <div key={address.id}>\n                                <PreviewAddressCard data={address} handleDelete={handleDeleteAddress}/>\n                            </div>\n                        ))\n                    }\n                    {\n                        addressesDataResult.length === 0 &&\n                        <Typography\n                            style={{fontWeight: 500, fontSize: 16, textAlign: 'center'}}\n                            className={classes.title}>\n                            آدرسی ثبت نشده\n                        </Typography>\n                    }\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default ProfilePage","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/ForgetPassPage.js",["616","617","618"],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/CartPage.js",["619","620","621","622","623","624","625"],"import React, {useEffect, useState} from \"react\";\nimport {useCartPageStyle} from \"./Styles/useCartPageStyle\";\nimport {\n    Backdrop,\n    Button,\n    Card,\n    CircularProgress,\n    Divider,\n    Grid,\n    InputAdornment,\n    TextField,\n    Typography\n} from \"@material-ui/core\";\nimport Title from \"../Components/Public/Title\";\nimport Step from \"../Components/Public/Step\";\nimport OrderCard from \"../Components/Cart/OrderCard\";\nimport AddressCard from \"../Components/Cart/AddressCard\";\nimport AddressForm from \"../Components/Public/AddressForm\";\nimport FactorCard from \"../Components/Cart/FactorCard\";\nimport usePostCart from \"../PostData/usePostCart\";\nimport {separateDigit} from \"../../utills/ToFaDigit\";\nimport PropTypes from \"prop-types\"\nimport useAddressesData from \"../FetchData/useAddressesData\";\nimport useForceUpdate from \"../../utills/Hooks/useForceUpdate\";\nimport useApplyDiscountCode from \"../PostData/useApplyDiscountCode\";\nimport usePathCart from \"../PostData/usePathCart\";\nimport usePostAddress from \"../PostData/usePostAddress\";\nimport usePayment from \"../PostData/usePayment\";\nimport {SmoothVerticalScrolling} from \"../../utills/smoothScroll\";\n\n\nfunction CartPage(props) {\n    const localStorageCart = JSON.parse(localStorage.getItem('cart'))\n    const forceUpdate = useForceUpdate()\n    const [fetchPostCart, setFetchPostCart] = useState(true)\n    const [fetchPostAddress, setFetchPostAddress] = useState(false)\n    const [fetchApplyCode, setFetchApplyCode] = useState(false)\n    const [fetchPathCart, setFetchPathCart] = useState(false)\n    const [fetchPayment, setFetchPayment] = useState(false)\n    const [selectedAddress, setSelectedAddress] = useState({\n        city: null,\n        state: null,\n        email: '',\n        address: '',\n        post_code: '',\n        costumer_name: '',\n        phone_number: '',\n    })\n    const {setBasketChange} = props\n    const [postCartLoading, postCartResult] = usePostCart(fetchPostCart)\n    const [addressesDataLoading, addressesDataResult] = useAddressesData(true)\n\n    const [addressCheckboxes, setAddressCheckboxes] = useState([])\n    const classes = useCartPageStyle()\n    const [step, setStep] = useState(0)\n\n    const [addressStep, setAddressStep] = useState(0)\n    const [basketDetails, setBasketDetails] = useState({\n        boxes: [],\n        basket: {\n            address: null,\n            basket_code: \"\",\n            boxes_list: [],\n            city: null,\n            city_obj: {name: \"\", id: null},\n            costumer_name: null,\n            create_date: 0,\n            details: null,\n            discount_code: null,\n            free_transmission: false,\n            gift: false,\n            id: 0,\n            merchandise_number: 0,\n            phone_number: null,\n            post_code: null,\n            state: null,\n            state_obj: {name: \"\", id: null},\n            total_basket_price: 0,\n            total_basket_price_with_discount: 0,\n            user: 0,\n            email: null,\n            approved: false,\n        },\n    })\n    const [addressValues, setAddressValues] = useState({\n        name: '',\n        mobileNumber: '',\n        email: '',\n        state: {\n            name: '',\n            id: null\n        },\n        city: {\n            name: '',\n            id: null\n        },\n        code: '',\n        address: ''\n    })\n    const [postAddressLoading, postAddressResult] = usePostAddress(fetchPostAddress, addressValues)\n    const [paymentLoading, paymentResult] = usePayment(fetchPayment, basketDetails.basket.id)\n    const [details, setDetails] = useState('')\n    const [discountCode, setDiscountCode] = useState('')\n    const [applyCodeLoading, applyCodeResult] = useApplyDiscountCode(fetchApplyCode, basketDetails.basket.id, discountCode)\n    const [pathCartLoading, pathCartResult] = usePathCart(fetchPathCart, basketDetails.basket.id, selectedAddress, details)\n    document.title = 'سبد خرید'\n\n    const [errors, setErrors] = useState({\n        name: false,\n        mobileNumber: false,\n        email: false,\n        discountCode: false,\n        address: false\n    })\n\n    const setTitle = (step) => {\n        switch (step) {\n            case 0:\n                return 'سبد خرید'\n            case 1:\n                return 'تکمیل آدرس و مشخصات'\n            case 2:\n                return 'پیش فاکتور'\n            default:\n                break\n        }\n\n    }\n\n    const findIndexOfCart = (prvBox) => {\n        const localStorageCart = JSON.parse(localStorage.getItem('cart'))\n\n        for (let i = 0; i < localStorageCart.length; i++) {\n            if (localStorageCart[i].id === prvBox.id\n                && localStorageCart[i].color === prvBox.color\n                && localStorageCart[i].size === prvBox.size\n                && localStorageCart[i].count === prvBox.count) {\n                return i\n            }\n        }\n        return -1\n    }\n\n    const handleDelete = (prvBox) => {\n        let cart = []\n        const localStorageCart = JSON.parse(localStorage.getItem('cart'))\n        for (let i = 0; i < localStorageCart.length; i++) {\n            cart.push(localStorageCart[i])\n        }\n\n        cart = cart.filter(item => item !== cart[findIndexOfCart(prvBox)])\n        if (cart.length === 0){\n            localStorage.removeItem('cart')\n            setBasketDetails({\n                boxes: [],\n                basket: {\n                    address: null,\n                    basket_code: \"\",\n                    boxes_list: [],\n                    city: null,\n                    city_obj: {name: \"\", id: null},\n                    costumer_name: null,\n                    create_date: 0,\n                    details: null,\n                    discount_code: null,\n                    free_transmission: false,\n                    gift: false,\n                    id: 0,\n                    merchandise_number: 0,\n                    phone_number: null,\n                    post_code: null,\n                    state: null,\n                    state_obj: {name: \"\", id: null},\n                    total_basket_price: 0,\n                    total_basket_price_with_discount: 0,\n                    user: 0,\n                    email: null,\n                    approved: false,\n                },\n            })\n        }else {\n            localStorage.setItem('cart', JSON.stringify(cart))\n        }\n\n        setBasketChange(prvState => prvState + 1)\n        setFetchPostCart(true)\n    }\n\n    const isDuplicate = (newBox) => {\n        const localStorageCart = JSON.parse(localStorage.getItem('cart'))\n        for (let i = 0; i < localStorageCart.length; i++) {\n            if (localStorageCart[i].id === newBox.id\n                && localStorageCart[i].color === newBox.color\n                && localStorageCart[i].size === newBox.size) {\n                return true\n            }\n\n        }\n        return false\n    }\n\n    const onChangeSelects = (prvBox, newBox) => {\n        let cart = []\n        // if (!isDuplicate(newBox)) { //todo: duplicate bug\n        const localStorageCart = JSON.parse(localStorage.getItem('cart'))\n        localStorageCart[findIndexOfCart(prvBox)] = newBox\n        for (let i = 0; i < localStorageCart.length; i++) {\n            cart.push(localStorageCart[i])\n        }\n        localStorage.setItem('cart', JSON.stringify(cart))\n        setBasketChange(prvState => prvState + 1)\n        setFetchPostCart(true)\n    }\n\n    const handleClickContinue = (event) => {\n        event.preventDefault()\n        if (step === 0) {\n            setStep(1)\n        } else if (step === 1) {\n            if (addressStep === 0) {\n                for (let i = 0; i < addressCheckboxes.length; i++) {\n                    if (addressCheckboxes[i].checked === true) {\n                        setSelectedAddress(addressesDataResult[i])\n                    }\n                }\n                setFetchPathCart(true)\n            } else {\n                setSelectedAddress({\n                    city: addressValues.city.id,\n                    state: addressValues.state.id,\n                    email: addressValues.email,\n                    address: addressValues.address,\n                    post_code: addressValues.code,\n                    costumer_name: addressValues.name,\n                    phone_number: addressValues.mobileNumber,\n                })\n                setFetchPathCart(true)\n                setFetchPostAddress(true)\n            }\n        } else {\n            setFetchPayment(true)\n        }\n        SmoothVerticalScrolling(document.body, 500, \"top\")\n    }\n\n\n    useEffect(() => {\n        if (!postCartLoading && fetchPostCart && localStorageCart) {\n            setBasketDetails({\n                boxes: postCartResult.boxes,\n                basket: postCartResult.basket,\n            })\n            setFetchPostCart(false)\n            discountCode !== '' && setFetchApplyCode(true)\n\n        }\n    }, [postCartLoading, postCartResult])\n\n    useEffect(() => {\n        if (!addressesDataLoading) {\n            let checkboxes = []\n            for (let i = 0; i < addressesDataResult.length; i++) {\n                checkboxes.push({id: addressesDataResult[i].id, checked: i === 0})\n            }\n            setAddressCheckboxes(checkboxes)\n            if (checkboxes.length === 0){\n                setAddressStep(1)\n            }\n        }\n    }, [addressesDataLoading, addressesDataResult])\n\n    useEffect(() => {\n        if (!pathCartLoading && fetchPathCart && localStorageCart) {\n            setBasketDetails({\n                ...basketDetails,\n                basket: pathCartResult,\n            })\n            setStep(2)\n            setFetchPathCart(false)\n        }\n\n    }, [pathCartLoading, pathCartResult])\n\n    const updateAddress = () => {\n        forceUpdate()\n    }\n\n    useEffect(() => {\n        if (!applyCodeLoading) {\n            if (applyCodeResult.status === 'success') {\n                setBasketDetails({\n                    ...basketDetails,\n                    basket: applyCodeResult.data,\n                })\n            } else {\n                setErrors({...errors, discountCode: true})\n                setTimeout(\n                    () => setErrors({...errors, discountCode: false})\n                    , 5000)\n            }\n            setFetchApplyCode(false)\n        }\n\n    }, [applyCodeLoading, applyCodeResult])\n\n    useEffect(() => {\n        if (!postAddressLoading && fetchPostAddress) {\n\n            setFetchPostAddress(false)\n        }\n    }, [postAddressLoading, postAddressResult])\n\n    useEffect(() => {\n        setBasketChange(prevState => prevState + 1)\n    }, [])\n\n    useEffect(() => {\n        if (!paymentLoading && fetchPayment) {\n            console.log(paymentResult)\n            setFetchPayment(false)\n        }\n    }, [paymentLoading, paymentResult])\n\n    return (\n        <>\n            <Backdrop\n                className={classes.backdrop}\n                open={postCartLoading || addressesDataLoading || applyCodeLoading || pathCartLoading || postAddressLoading}\n            >\n                <CircularProgress size={70} color=\"inherit\"/>\n            </Backdrop>\n            <form className={classes.container} onSubmit={handleClickContinue}>\n                <Title title={setTitle(step)}/>\n                <Grid container spacing={3}>\n                    <Grid item md={9} xs={12}>\n                        <Step stepClass={classes.orderCardsStep} index={0} step={step}>\n                            {\n                                basketDetails.boxes.map((box) => (\n                                    <div key={box.id}>\n                                        <OrderCard\n                                            box={box}\n                                            onChangeSelects={onChangeSelects}\n                                            product={box.merchandise_obj}\n                                            deleteHandler={handleDelete}\n                                        />\n                                    </div>\n\n                                ))\n\n                            }\n                            {\n                                basketDetails.boxes.length=== 0 &&\n                                <Typography style={{textAlign: 'center', fontSize: 22}} className={classes.discountTitle}>\n                                    سبد خرید شما خالی است\n                                </Typography>\n                            }\n                        </Step>\n                        <Step stepClass={classes.orderCardsStep} index={1} step={step}>\n                            <Step stepClass={classes.orderCardsStep} index={0} step={addressStep}>\n                                {\n                                    addressesDataResult.map((address, index) => (\n                                        <div key={address.id}>\n                                            <AddressCard\n                                                data={address}\n                                                addressCheckbox={addressCheckboxes[index]}\n                                                index={index}\n                                                setAddressCheckboxes={setAddressCheckboxes}\n                                                forceUpdate={updateAddress}\n                                            />\n                                        </div>\n                                    ))\n                                }\n                            </Step>\n                            <Step stepClass={classes.orderCardsStep} index={1} step={addressStep}>\n                                <AddressForm\n                                    values={addressValues}\n                                    setValues={setAddressValues}\n                                    errors={errors}\n                                    setErrors={setErrors}\n                                />\n                            </Step>\n\n                            <Button\n                                variant={'text'}\n                                className={classes.addAddress}\n                                onClick={() => setAddressStep(prevState => {\n                                    if (addressesDataResult.length === 0){\n                                        return 1\n                                    }\n                                    return prevState === 0 ? 1 : 0\n                                })}\n                            >\n                                {`${addressStep === 0 ? 'افزودن آدرس جدید' : 'آدرس‌های شما'}`}\n                            </Button>\n                            <Typography className={classes.title}>توضیحات سفارش</Typography>\n                            <Card className={classes.card}>\n                                <Typography className={classes.descriptionLabel}>توضیحات</Typography>\n                                <TextField\n                                    multiline\n                                    rows={4}\n                                    value={details}\n                                    onChange={(event) => setDetails(event.target.value)}\n                                    InputProps={{\n                                        classes: {\n                                            input: classes.input,\n                                        }\n                                    }}\n                                    fullWidth\n                                    variant=\"outlined\"\n                                />\n                            </Card>\n                        </Step>\n                        <Step index={2} step={step} >\n                            <Card style={{width: '100%'}} className={classes.card}>\n                                <FactorCard products={basketDetails.boxes} info={basketDetails.basket}/>\n                            </Card>\n\n                        </Step>\n\n                    </Grid>\n\n                    <Grid item md={3} xs={12}>\n                        <Card className={classes.card}>\n                            <Typography className={classes.discountTitle}>کد تخفیف</Typography>\n                            <TextField\n                                disabled={basketDetails.boxes.length === 0}\n                                dir={'ltr'}\n                                value={discountCode}\n                                onChange={\n                                    (event) => setDiscountCode(event.target.value)\n                                }\n                                margin={'normal'}\n                                error={errors.discountCode}\n                                fullWidth\n                                InputProps={{\n                                    classes: {\n                                        input: classes.input,\n                                        root: classes.textFieldRoot,\n                                    },\n                                    startAdornment:\n                                        <InputAdornment position={\"start\"}>\n                                            <Button\n                                                disabled={basketDetails.boxes.length === 0}\n                                                size={\"small\"}\n                                                className={classes.save}\n                                                variant={\"contained\"}\n                                                onClick={() => {\n                                                    if (discountCode === '') {\n                                                        setDiscountCode('')\n                                                        setErrors({...errors, discountCode: true})\n                                                        setTimeout(\n                                                            () => setErrors({...errors, discountCode: false})\n                                                            , 5000)\n                                                    } else {\n                                                        setFetchApplyCode(true)\n                                                    }\n\n                                                }}\n                                            >\n                                                ثبت\n                                            </Button>\n                                        </InputAdornment>\n                                }}\n                                variant=\"outlined\"\n                            />\n                        </Card>\n                        <Step index={2} step={step}>\n                            <Card style={{width: '100%'}} className={classes.card}>\n                                <Typography style={{marginBottom: 16}}\n                                            className={classes.discountTitle}>توضیحات</Typography>\n                                <Typography\n                                    className={classes.descriptionLabel}>{basketDetails.basket.details && basketDetails.basket.details}</Typography>\n                            </Card>\n                        </Step>\n                        <Card className={classes.card}>\n                            <div style={{marginBottom: 8,}} className={classes.detailContainer}>\n                                <Typography className={classes.detailTitle}>تعداد کالا</Typography>\n                                <Typography\n                                    className={classes.number}>{separateDigit(basketDetails.basket.merchandise_number)}</Typography>\n                            </div>\n                            <Divider/>\n                            <div className={classes.detail}>\n                                <div className={classes.detailContainer}>\n                                    <Typography className={classes.detailTitle}>قیمت کالاها</Typography>\n                                    <div className={classes.priceContainer}>\n                                        <Typography\n                                            className={classes.number}\n                                        >\n                                            {separateDigit(basketDetails.basket.total_basket_price)}\n                                        </Typography>\n                                        <Typography className={classes.toman}>تومان</Typography>\n                                    </div>\n                                </div>\n                                <div className={classes.detailContainer}>\n                                    <Typography className={classes.detailTitle}>تخفیف</Typography>\n                                    <div className={classes.priceContainer}>\n                                        <Typography style={{color: '#F16522'}}\n                                                    className={classes.number}>\n                                            {separateDigit(basketDetails.basket.total_basket_price - basketDetails.basket.total_basket_price_with_discount)}\n                                        </Typography>\n                                        <Typography className={classes.toman}>تومان</Typography>\n                                    </div>\n                                </div>\n                                <div style={{marginBottom: 0}} className={classes.detailContainer}>\n                                    <Typography className={classes.detailTitle}>هزینه ارسال</Typography>\n                                    <div className={classes.priceContainer}>\n                                        <Typography\n                                            style={{opacity: 0.6, fontWeight: 'normal', fontSize: 16}}\n                                            className={classes.number}\n                                        >\n                                            {basketDetails.basket.free_transmission ? 'رایگان' : 'به عهده مشتری'}\n                                        </Typography>\n                                    </div>\n                                </div>\n                            </div>\n                            <Divider/>\n                            <div style={{marginTop: 11, marginBottom: 0}} className={classes.detailContainer}>\n                                <Typography className={classes.detailTitle}>مبلغ قابل پرداخت</Typography>\n                                <div className={classes.priceContainer}>\n                                    <Typography\n                                        className={classes.number}\n                                    >\n                                        {separateDigit(basketDetails.basket.total_basket_price_with_discount)}\n                                    </Typography>\n                                    <Typography className={classes.toman}>تومان</Typography>\n                                </div>\n                            </div>\n                            <div style={{width: '100%', float: 'left', marginTop: 24}}>\n                                <Button\n                                    disabled={basketDetails.boxes.length === 0}\n                                    fullWidth\n                                    type={'submit'}\n                                    className={classes.shopButton}\n                                    variant={'contained'}\n                                >\n                                    ادامه خرید\n                                </Button>\n                            </div>\n                            {\n                                step !== 0 &&\n                                <div style={{width: '100%', float: 'left', marginTop: 24}}>\n                                    <Button\n                                        fullWidth\n                                        onClick={() => {\n                                            setStep(step - 1)\n                                            SmoothVerticalScrolling(document.body, 500, \"top\")\n                                        }}\n                                        className={classes.backButton}\n                                        variant={'outlined'}\n                                    >\n                                        بازگشت به مرحله قبل\n                                    </Button>\n                                </div>\n                            }\n                        </Card>\n                    </Grid>\n                </Grid>\n            </form>\n        </>\n    )\n}\n\nCard.propTypes = {\n    setBasketChange: PropTypes.func.isRequired,\n}\n\nexport default CartPage\n","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/ProductPage.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/UserInfoPage.js",["626","627"],"import React, {useEffect, useState} from \"react\";\nimport {Button, Card, CircularProgress, Grid, MenuItem, TextField, Typography} from \"@material-ui/core\";\nimport {useUserInfoPageStyle} from \"./Styles/useUserInfoPageStyle\";\nimport Title from \"../Components/Public/Title\";\nimport useWindowSize from \"../../utills/Hooks/useWindowSize\";\nimport useUserData from \"../FetchData/useUserData\";\nimport {toFaDigit} from \"../../utills/ToFaDigit\";\nimport useStateData from \"../FetchData/useStateData\";\nimport useCityData from \"../FetchData/useCityData\";\nimport usePathUserInfo from \"../PostData/usePathUserInfo\";\n\nfunction UserInfoPage() {\n    const [loading, result] = useUserData(true)\n    const classes = useUserInfoPageStyle()\n    const size = useWindowSize()\n    const [values, setValues] = useState({\n        name: '',\n        mobileNumber: '',\n        email: '',\n        state: {\n            name: '',\n            id: null,\n        },\n        city: {\n            name: '',\n            id: null,\n        },\n    })\n    const [fetchCities, setFetchCities] = useState(false)\n    const [statesLoading, states] = useStateData(true)\n    const [citiesLoading, cities] = useCityData(fetchCities, values.state.id)\n    const [fetchSubmit, setFetchSubmit] = useState(false)\n    const [updateLoading, updateResult] = usePathUserInfo(fetchSubmit, result.id, values)\n\n    const [errors, setErrors] = useState({\n        name: false,\n        mobileNumber: false,\n        email: false,\n    })\n    const findStateId = (name) => {\n        for (let i = 0; i < states.length; i++) {\n            if (states[i].name === name) {\n                return states[i].id\n            }\n        }\n    }\n    const findCityId = (name) => {\n        for (let i = 0; i < cities.length; i++) {\n            if (cities[i].name === name) {\n                return cities[i].id\n            }\n        }\n    }\n\n    const handleChange = (prop) => (event) => {\n        setValues({...values, [prop]: event.target.value})\n    }\n    useEffect(() => {\n        if (!loading) {\n            setValues({\n                ...values,\n                name: result.name_and_last_name,\n                mobileNumber: result.mobile_number,\n                email: result.email,\n                state: result.state\n                    ? {\n                        name: result.state_name,\n                        id: result.state\n                    }\n                    : {\n                        name: '',\n                        id: null,\n                    },\n                city: result.city\n                    ? {\n                        name: result.city_name,\n                        id: result.city,\n                    }\n                    : {\n                        name: '',\n                        id: null,\n                    }\n\n            })\n            setFetchCities(true)\n        }\n    }, [loading, result])\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        if (!values.email.includes('@')) {\n            setErrors({\n                ...errors,\n                email: true,\n            })\n            setTimeout(\n                () => setErrors({...errors, email: false})\n                , 5000)\n        } else {\n            setFetchSubmit(true)\n        }\n    }\n\n    return (\n        <>\n            <form className={classes.container} onSubmit={handleSubmit}>\n                <Title title={'ویرایش اطلاعات کاربری'}/>\n                <Card className={classes.card}>\n                    <Grid container spacing={4}>\n                        <Grid item md={6} xs={12}>\n                            <Typography className={classes.label}>نام و نام‌خانوادگی</Typography>\n                            <TextField\n                                required\n                                disabled={loading}\n                                error={errors.name}\n                                value={values.name}\n                                onChange={handleChange('name')}\n                                InputProps={{\n                                    classes: {\n                                        input: classes.input,\n                                        root: classes.textFieldRoot,\n                                    }\n                                }}\n                                fullWidth\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <Typography className={classes.label}>شماره موبایل</Typography>\n                            <TextField\n                                required\n                                disabled\n                                dir={'ltr'}\n                                error={errors.mobileNumber}\n                                value={toFaDigit((values.mobileNumber).toString())}\n                                onChange={handleChange('mobileNumber')}\n                                InputProps={{\n                                    classes: {\n                                        input: classes.input,\n                                        root: classes.textFieldRoot,\n                                    }\n                                }}\n                                fullWidth\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <Typography className={classes.label}>آدرس پست الکترونیک</Typography>\n                            <TextField\n                                required\n                                disabled={loading}\n                                dir={'ltr'}\n                                error={errors.email}\n                                value={values.email}\n                                onChange={handleChange('email')}\n                                InputProps={{\n                                    classes: {\n                                        input: classes.input,\n                                        root: classes.textFieldRoot,\n                                    }\n                                }}\n                                fullWidth\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <Typography className={classes.label}>استان</Typography>\n                            <TextField\n                                required\n                                disabled={statesLoading || loading}\n                                select\n                                placeholder={'استان خود را انتخاب کنید'}\n                                value={values.state.name ? values.state.name : ''}\n                                onChange={(event) => {\n                                    setFetchCities(false)\n                                    setValues({\n                                        ...values,\n                                        state: {\n                                            name: event.target.value,\n                                            id: findStateId(event.target.value)\n                                        },\n                                        city: {\n                                            name: '',\n                                            id: null,\n                                        }\n                                    })\n                                    setFetchCities(true)\n                                }}\n                                InputProps={{\n                                    classes: {\n                                        input: classes.input,\n                                        root: classes.textFieldRoot,\n                                    }\n                                }}\n                                fullWidth\n                                variant=\"outlined\"\n                            >\n                                {\n                                    states.map((state) => (\n                                        <MenuItem className={classes.menu} key={state.id} value={state.name}>\n                                            {state.name}\n                                        </MenuItem>\n                                    ))\n                                }\n                            </TextField>\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <Typography className={classes.label}>شهر</Typography>\n                            <TextField\n                                required\n                                disabled={citiesLoading || loading}\n                                select\n                                placeholder={'شهر خود را انتخاب کنید'}\n                                value={values.city.name}\n                                onChange={(event) => {\n                                    setValues({\n                                        ...values,\n                                        city: {\n                                            name: event.target.value,\n                                            id: findCityId(event.target.value)\n                                        }\n                                    })\n                                    setFetchCities(false)\n                                }}\n                                InputProps={{\n                                    classes: {\n                                        input: classes.input,\n                                        root: classes.textFieldRoot,\n                                    }\n                                }}\n                                fullWidth\n                                variant=\"outlined\"\n                            >\n                                {\n                                    cities.map((city) => (\n                                        <MenuItem className={classes.menu} key={city.id} value={city.name}>\n                                            {city.name}\n                                        </MenuItem>\n                                    ))\n                                }\n                            </TextField>\n                        </Grid>\n                    </Grid>\n                </Card>\n                <div style={{\n                    width: size.width >= 600 ? '33.33%' : '100%',\n                    float: 'left',\n                    marginTop: 24,\n                    position: 'relative'\n                }}>\n                    {(updateLoading || loading) && <CircularProgress size={38} className={classes.buttonProgress}/>}\n                    <Button\n                        disabled={updateLoading || loading}\n                        type={'submit'}\n                        fullWidth\n                        className={classes.editButton}\n                        variant={'contained'}\n                    >\n                        ویرایش\n                    </Button>\n                </div>\n            </form>\n        </>\n    )\n\n}\n\nexport default UserInfoPage","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/SignUpPage.js",["628","629","630"],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/HomePage.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/AddressesPage.js",["631"],"import React, {useEffect, useState} from \"react\";\nimport AddressForm from \"../Components/Public/AddressForm\";\nimport {useAddressPageStyle} from \"./Styles/useAddressPageStyle\";\nimport Title from \"../Components/Public/Title\";\nimport {Button, CircularProgress} from \"@material-ui/core\";\nimport useWindowSize from \"../../utills/Hooks/useWindowSize\";\nimport usePostAddress from \"../PostData/usePostAddress\";\nimport {useHistory} from 'react-router-dom'\n\nfunction AddressPage() {\n    document.title = 'اضافه کردن آدرس'\n    const history = useHistory()\n    const classes = useAddressPageStyle()\n    const size = useWindowSize()\n    const [values, setValues] = useState({\n        name: '',\n        mobileNumber: '',\n        email: '',\n        state: {\n            name: '',\n            id: null,\n        },\n        city: {\n            name: '',\n            id: null,\n        },\n        code: '',\n        address: ''\n    })\n\n    const [fetchPost, setFetchPost] = useState(false)\n    const [postLoading, postResult] = usePostAddress(fetchPost, values)\n    const [errors, setErrors] = useState({\n        name: false,\n        mobileNumber: false,\n        email: false,\n        code: false,\n        address: false\n    })\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        setFetchPost(true)\n\n    }\n    useEffect(() => {\n        if (!postLoading && fetchPost) {\n            if (postResult) {\n                history.push('/profile')\n            }\n            setFetchPost(false)\n        }\n    }, [postLoading, postResult])\n\n    return (\n        <>\n            <form className={classes.container} onSubmit={handleSubmit}>\n                <Title title={'افزودن آدرس جدید'}/>\n                <AddressForm\n                    values={values}\n                    setValues={setValues}\n                    errors={errors}\n                    setErrors={setErrors}\n                />\n                <div style={{\n                    width: size.width >= 600 ? '33.33%' : '100%',\n                    float: 'left',\n                    marginTop: 24,\n                    position: 'relative'\n                }}>\n                    {postLoading && <CircularProgress size={38} className={classes.buttonProgress}/>}\n                    <Button\n                        disabled={postLoading}\n                        type={'submit'}\n                        fullWidth\n                        className={classes.addButton}\n                        variant={'contained'}\n                    >\n                        افزودن\n                    </Button>\n                </div>\n            </form>\n\n        </>\n    )\n}\n\nexport default AddressPage","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/SearchPage.js",["632","633"],"import React, {useEffect, useReducer, useRef, useState} from \"react\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ItemLink from \"../../Routes/Link/ItemLink\";\nimport {Backdrop, Card, CardContent, CircularProgress, Grid, Typography} from \"@material-ui/core\";\nimport ProductCard from \"../Components/Public/ProuductCard\";\nimport {StyledSwitch, useStyles} from \"../Components/Search/Styles/SearchStyle\";\nimport FilterPrice from \"../Components/Search/FilterPrice\";\nimport FilterCategory from \"../Components/Search/FilterCategory\";\nimport {initialStates, reducer} from \"../Components/Search/Reducer\";\nimport {useHistory} from 'react-router-dom'\nimport useCategoriesData from \"../FetchData/useCategoriesData\";\nimport Title from \"../Components/Public/Title\";\nimport useSearchData from \"../FetchData/useSearchData\";\nimport TablePaginationActions from \"../Components/Public/TablePaginationActions\";\nimport useWindowSize from \"../../utills/Hooks/useWindowSize\";\nimport {SmoothVerticalScrolling} from \"../../utills/smoothScroll\";\nimport useMaxPriceData from \"../FetchData/useMaxPriceData\";\n\nfunction SearchPage({location}) {\n    const history = useHistory()\n    const search = useRef(location.search)\n    const size = useWindowSize()\n    const [catsLoading, catsResult] = useCategoriesData(true)\n    const classes = useStyles()\n    const [searchStates, dispatch] = useReducer(reducer, initialStates)\n    const [page, setPage] = useState(0)\n    const [mobilePage, setMobilePage] = useState(0)\n    const [mobileMaxPage, setMobileMaxPage] = useState(1)\n    const [maxPages, setMaxPages] = useState(1)\n    const [change, setChange] = useState(0)\n    const [fetch, setFetch] = useState(false)\n    const [filterValues, setFilterValues] = useState({\n        from: 0,\n        to: 1500000,\n    })\n    const [maxPriceLoading, maxPriceResult] = useMaxPriceData(\n        fetch,\n        location.search,\n        searchStates.categories.length,\n        location.state ? location.state.showCampaign : false\n    )\n    const [searchLoading, searchResults] = useSearchData(\n        fetch,\n        location.search,\n        page,\n        searchStates.categories.length,\n        filterValues.from,\n        filterValues.to,\n        searchStates.hasDiscount,\n        location.state ? location.state.showCampaign : false\n    )\n    const handleChangePages = (pageNumber) => {\n        setPage(pageNumber)\n        SmoothVerticalScrolling(document.body, 500, \"top\")\n    }\n    const handleMobileChangePages = (pageNumber) => {\n        setMobilePage(pageNumber)\n        setPage(Math.floor(pageNumber / 3))\n        SmoothVerticalScrolling(document.body, 500, \"top\")\n    }\n\n    const [searchItems, setSearchItems] = useState({\n        search_text: '',\n    })\n    const filterPrice = () => {\n        setFilterValues({\n            from: searchStates.filterValues.from,\n            to: searchStates.filterValues.to\n        })\n        setPage(0)\n        location.state = {showCampaign: false}\n    }\n\n    useEffect(() => {\n        if (!catsLoading && search.current !== undefined) {\n            dispatch({\n                type: 'setCategories',\n                categories: catsResult,\n            })\n            const params = new URLSearchParams(search.current)\n            if (!params.has('campaign_id')) {\n                for (let i = 0; i < catsResult.length; i++) {\n                    const categoryId = params.get(`category_list[${i}]`)\n                    if (categoryId) {\n                        location.state = {showCampaign: false}\n                        dispatch({\n                            type: 'selectCategory',\n                            categoryId: parseInt(categoryId),\n                            value: true,\n                        })\n                        setChange(prevState => prevState + 1)\n                    }\n                }\n            } else {\n                history.push({\n                    pathname: '/search',\n                    search: `campaign_id=${params.get('campaign_id')}`,\n                    state: {showCampaign: true}\n                })\n            }\n            search.current = undefined\n        }\n        setFetch(true)\n    }, [catsLoading, catsResult])\n\n    useEffect(() => {\n        if (!maxPriceLoading) {\n            setFilterValues({\n                from: 0,\n                to: maxPriceResult,\n            })\n            dispatch({\n                type: 'priceFilter',\n                filterValues: {\n                    from: 0,\n                    to: maxPriceResult,\n                    max: maxPriceResult,\n                },\n            })\n        }\n    }, [maxPriceLoading, maxPriceResult])\n    useEffect(() => {\n        if (!searchLoading) {\n            setMaxPages(searchResults.max_pages + 1)\n            let max\n            max = Math.floor(searchResults.merchandise_objs_number / 5)\n            if (searchResults.merchandise_objs_number % 5 !== 0) {\n                max++\n            }\n            setMobileMaxPage(max)\n            dispatch({\n                type: 'setProducts',\n                products: searchResults.products,\n            })\n        }\n\n    }, [searchLoading, searchResults])\n\n    useEffect(() => {\n        const params = new URLSearchParams(location.search)\n        const search_text = params.get('search_text') ? `\"${params.get('search_text')}\"` : ''\n\n        for (let i = 0; i < searchStates.categories.length; i++) {\n            if (params.get(`category_list[${i}]`)) {\n                dispatch({\n                    type: 'selectCategory',\n                    categoryId: parseInt(params.get(`category_list[${i}]`)),\n                    value: true,\n                })\n            }\n        }\n        setPage(0)\n        setSearchItems({search_text: search_text})\n    }, [location, searchStates.categories.length])\n\n    useEffect(() => {\n        setPage(0)\n        const params = new URLSearchParams(location.search)\n        let newLocation = ''\n        if (params.get('search_text')) {\n            newLocation = `search_text=${params.get('search_text')}`\n        }\n        for (let i = 0; i < searchStates.categories.length; i++) {\n            if (searchStates.categories[i].checked) {\n                newLocation += `&category_list[${i}]=${searchStates.categories[i].id}`\n\n            }\n        }\n        history.push(`/search?${newLocation}`)\n    }, [change])\n\n    document.title = `لیست محصولات ${searchItems.search_text}`\n    return (\n        <>\n            <Backdrop className={classes.backdrop} open={maxPriceLoading || searchLoading || catsLoading}>\n                <CircularProgress size={70} color=\"inherit\"/>\n            </Backdrop>\n            <div className={classes.searchContainer}>\n                <Breadcrumbs className={classes.breadcrumbContainer} separator={<NavigateBeforeIcon fontSize=\"small\"/>}>\n                    <ItemLink to={'/'}>\n                        <Typography className={classes.breadcrumb}>خانه</Typography>\n                    </ItemLink>\n                    <Typography className={classes.breadcrumb}>جستجو میان محصولات</Typography>\n                </Breadcrumbs>\n                <Title title={`لیست محصولات ${searchItems.search_text}`}/>\n\n                <Grid xs={12} className={classes.gridContainer} container direction={\"row\"}>\n                    <Grid\n                        style={{\n                            display:\n                                location.state ?\n                                    location.state.showCampaign && 'none'\n                                    : undefined\n                        }}\n                        container sm={3}\n                        className={classes.filterContainer}\n                        direction={\"row\"}\n                    >\n\n                        <Grid className={classes.filterItem} xs={12} item>\n                            <div>\n                                <FilterPrice\n                                    filterValues={searchStates.filterValues}\n                                    dispatch={dispatch}\n                                    filterPrice={filterPrice}\n                                />\n                            </div>\n                        </Grid>\n\n                        <Grid className={classes.categoryMdItem} xs={12} item>\n                            <div>\n                                <FilterCategory\n                                    setChange={setChange}\n                                    categories={searchStates.categories}\n                                    dispatch={dispatch}\n                                />\n                            </div>\n                        </Grid>\n\n                        <Grid className={classes.filterItem} xs={12} item>\n                            <div>\n                                <Card>\n                                    <CardContent style={{padding: '8px 16px'}} className={classes.discount}>\n                                        <Typography className={classes.discountTitle}>تخفیف‌دار ها</Typography>\n                                        <StyledSwitch\n                                            checked={searchStates.hasDiscount}\n                                            onChange={() => {\n                                                dispatch({type: 'discount'})\n                                                location.state = {showCampaign: false}\n                                            }}\n                                        />\n                                    </CardContent>\n                                </Card>\n                            </div>\n                        </Grid>\n                    </Grid>\n\n                    <Grid\n                        container\n                        className={classes.productsContainer}\n                        sm={location.state ?\n                            location.state.showCampaign ? 12 : 9\n                            : 9\n                        }\n                        xs={12}\n                        direction={\"row\"}\n                    >\n                        {\n                            searchStates.products.length === 0 && (!maxPriceLoading && !searchLoading && !catsLoading) &&\n                            <>\n                                <Typography\n                                    style={{\n                                        textAlign: 'center',\n                                        margin: 'auto',\n                                        fontFamily: 'Shabnam',\n                                        fontSize: 20,\n                                        fontWeight: 500,\n                                        marginBottom: location.state ?\n                                            location.state.showCampaign && '150px'\n                                            : 'auto'\n                                    }}\n                                >محصولی ثبت نشده</Typography>\n                            </>\n                        }\n                        {\n                            size.width > 600\n                                ? <>\n                                    {\n                                        searchStates.products\n                                            .map((product) => (\n                                                <Grid className={classes.productItem} md={4} sm={6} xs={12} item>\n                                                    <ProductCard product={product}/>\n                                                </Grid>\n                                            ))\n                                    }\n\n                                    <Grid item xs={12}>\n\n                                        {\n                                            searchStates.products.length !== 0 &&\n                                            <TablePaginationActions\n                                                buttonGroupClass={classes.buttonGroup}\n                                                numPages={maxPages}\n                                                page={page}\n                                                onChange={handleChangePages}\n\n                                            />\n                                        }\n\n                                    </Grid>\n                                </>\n                                : <>\n                                    {\n                                        searchStates.products.slice((mobilePage % 3) * 5, (mobilePage % 3) * 5 + 5)\n                                            .map((product) => (\n                                                <Grid key={product.id} className={classes.productItem} md={4} sm={6} xs={12}\n                                                      item>\n                                                    <ProductCard product={product}/>\n                                                </Grid>\n                                            ))\n                                    }\n\n                                    <Grid item xs={12}>\n\n                                        {\n                                            searchStates.products.length !== 0 &&\n                                            <TablePaginationActions\n                                                buttonGroupClass={classes.buttonGroup}\n                                                numPages={mobileMaxPage}\n                                                page={mobilePage}\n                                                onChange={handleMobileChangePages}\n                                            />\n                                        }\n\n                                    </Grid>\n                                </>\n                        }\n\n                    </Grid>\n\n                    <Grid\n                        style={{\n                            display:\n                                location.state ?\n                                    location.state.showCampaign && 'none'\n                                    : undefined\n                        }}\n                        item\n                        className={classes.categoryXsItem}\n                        xs={12}\n                    >\n                        <div style={{width: '100%'}}>\n                            <FilterCategory\n                                setChange={setChange}\n                                categories={searchStates.categories}\n                                dispatch={dispatch}\n                            />\n                        </div>\n                    </Grid>\n\n                </Grid>\n            </div>\n        </>\n    )\n}\n\nexport default SearchPage","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/LoginPage.js",["634","635"],"import React, {useState} from \"react\";\nimport ShopLayout from \"../Layouts/ShopLayout\";\nimport {useLoginPageStyle} from \"./Styles/useLoginPageStyle\";\nimport {\n    Button,\n    Card,\n    CardContent,\n    CircularProgress,\n    IconButton,\n    InputAdornment,\n    TextField,\n    Typography\n} from \"@material-ui/core\";\nimport loginImage from '../../img/Login.png'\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport ItemLink from \"../../Routes/Link/ItemLink\";\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Title from \"../Components/Public/Title\";\nimport useAxios from \"axios-hooks\";\nimport {useHistory} from 'react-router-dom'\nimport useWindowSize from \"../../utills/Hooks/useWindowSize\";\nimport {useAuth} from \"../../utills/Auth\";\nimport {toEnDigit, toFaDigit} from \"../../utills/ToFaDigit\";\n\nfunction LoginPage() {\n    document.title = 'ورود به حساب کاربری'\n    const classes = useLoginPageStyle()\n    const history = useHistory()\n    const baseUrl = \"https://api.didartshop.ir\"\n    const [values, setValues] = useState({\n        mobileNumber: '',\n        password: '',\n        showPassword: false\n    })\n    const [error, setError] = useState(false)\n    const [{loading}, signIn] = useAxios({\n        url: `${baseUrl}/user/sign_in`,\n        method: 'POST'\n    }, {manual: true})\n    const auth = useAuth();\n    const size = useWindowSize()\n\n    const handleChange = (props) => (event) => {\n        setValues(prevState => {\n            return {...prevState, [props]: event.target.value}\n        })\n    }\n    const handleClickShowPassword = () => {\n        setValues(prevState => {\n            return {...prevState, showPassword: !prevState.showPassword}\n        });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n        try {\n            const response = await signIn({\n                data: {\n                    \"mobile_number\": toEnDigit(values.mobileNumber),\n                    \"password\": values.password,\n                }\n            })\n            if (response.data.status === \"success\") {\n                localStorage.setItem(\"Authorization\", response.data.data.token)\n                history.go(0)\n            } else {\n                setError(true)\n            }\n        } catch (err) {\n            setError(true)\n        }\n    }\n\n    return (\n        <>\n            <form onSubmit={handleLogin} className={classes.container}>\n                <Title title={'ورود به حساب کاربری'}/>\n                <Card className={classes.card}>\n                    <div className={classes.imageContainer}>\n                        <img alt={'login'} src={loginImage} className={classes.image}/>\n                    </div>\n                    <CardContent classes={{root: classes.contentRoot}} className={classes.cardContent}>\n                        <div className={classes.mobileContainer}>\n                            <Typography style={{marginBottom: '12px'}} className={classes.label}>شماره\n                                موبایل</Typography>\n                            <TextField\n                                required\n                                type={'tel'}\n                                dir={'ltr'}\n                                error={error}\n                                value={toFaDigit(values.mobileNumber)}\n                                onChange={handleChange('mobileNumber')}\n                                InputProps={{\n                                    classes: {\n                                        input: classes.input,\n                                        root: classes.root,\n                                    }\n                                }}\n                                fullWidth\n                                variant=\"outlined\"\n                            />\n                        </div>\n                        <div className={classes.passwordContainer}>\n                            <div className={classes.passwordLabels}>\n                                <Typography className={classes.label}>رمز عبور</Typography>\n                                <ItemLink style={{margin: 'auto 0'}} to={'/forget-password'}>\n                                    <Typography className={classes.forgetLabel}>رمزعبور خود را فراموش\n                                        کرده‌اید!؟</Typography>\n                                </ItemLink>\n                            </div>\n                            <TextField\n                                required\n                                error={error}\n                                dir={'ltr'}\n                                autocompelete={'current-password'}\n                                value={values.password}\n                                onChange={handleChange('password')}\n                                type={values.showPassword ? 'text' : 'password'}\n                                InputProps={{\n                                    endAdornment:\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                aria-label=\"toggle password visibility\"\n                                                onClick={handleClickShowPassword}\n                                                onMouseDown={handleMouseDownPassword}\n                                                edge=\"end\"\n                                            >\n                                                {values.showPassword ? <Visibility/> : <VisibilityOff/>}\n                                            </IconButton>\n                                        </InputAdornment>,\n                                    classes: {\n                                        input: classes.input,\n                                        root: classes.root,\n                                    }\n                                }}\n                                fullWidth\n                                variant=\"outlined\"\n                            />\n                            <ItemLink style={{margin: 'auto 0'}} to={'/forget-password'}>\n                                <Typography className={classes.forgetMobileLabel}>رمزعبور خود را فراموش\n                                    کرده‌اید!؟</Typography>\n                            </ItemLink>\n                        </div>\n                        {\n                            size.width < 600 &&\n                            <div className={classes.action}>\n                                <ItemLink style={{alignSelf: 'flex-start', marginTop: 24,}} to={'/signup'}>\n                                    <Button\n                                        className={classes.signupButton}\n                                        dir={'ltr'}\n                                        variant={'text'}\n                                        endIcon={\n                                            <AddCircleOutlineIcon color={'primary'}\n                                                                  classes={{colorPrimary: classes.iconColor}}/>\n                                        }\n                                    >\n                                        ساخت حساب‌کاربری جدید\n                                    </Button>\n                                </ItemLink>\n                                <div style={{position: 'relative', width: '100%'}}>\n                                    <Button\n                                        fullWidth\n                                        disabled={loading}\n                                        type={'submit'}\n                                        className={classes.signInButton}\n                                        variant={'contained'}\n                                    >\n                                        ورود</Button>\n                                    {loading && <CircularProgress size={38} className={classes.buttonProgress}/>}\n                                </div>\n                            </div>\n                        }\n                    </CardContent>\n\n                </Card>\n\n                {\n                    size.width >= 600 &&\n                    <div className={classes.action}>\n                        <ItemLink to={'/signup'}>\n                            <Button\n                                className={classes.signupButton}\n                                dir={'ltr'}\n                                variant={'text'}\n                                endIcon={\n                                    <AddCircleOutlineIcon color={'primary'}\n                                                          classes={{colorPrimary: classes.iconColor}}/>\n                                }\n                            >\n                                ساخت حساب‌کاربری جدید\n                            </Button>\n                        </ItemLink>\n                        <div style={{position: 'relative'}}>\n                            <Button\n                                disabled={loading}\n                                type={'submit'}\n                                className={classes.signInButton}\n                                variant={'contained'}\n                            >\n                                ورود</Button>\n                            {loading && <CircularProgress size={38} className={classes.buttonProgress}/>}\n                        </div>\n                    </div>\n                }\n            </form>\n        </>\n    )\n}\n\nexport default LoginPage","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/ShopLayout.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/utills/ToFaDigit.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/utills/smoothScroll.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/utills/Hooks/useWindowSize.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/utills/Hooks/useForceUpdate.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/utills/Hooks/useLogin.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Footer.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Header.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useLoginPageStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useProfilePageStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useAddressesData.js",["636"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\n\nfunction useAddressesData(fetch) {\n    const [result, setResult] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [, getAddresses] = useAxios({\n        url: '/user/costumer_information/get',\n    })\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await getAddresses()\n                setResult(response.data.data.costumer_information)\n                setLoading(false)\n            } catch (err) {\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useAddressesData","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useUserOrderData.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useMaxPriceData.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useForgetPassPageStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useUserData.js",["637"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\n\nfunction useUserData(fetch) {\n    const [result, setResult] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [, getInfo] = useAxios({\n        url: '/user/get_profile',\n    })\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await getInfo()\n                setResult(response.data.data)\n                setLoading(false)\n                document.title =`حساب کاربری ${response.data.data.name_and_last_name}`\n            } catch (err) {\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useUserData","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useCartPageStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useProductPageStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useSearchData.js",["638"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\nimport {useHistory, useLocation} from \"react-router-dom\"\nimport {SmoothVerticalScrolling} from \"../../utills/smoothScroll\";\n\n\nfunction useSearchData(fetch, search, page, catsLength, fromPrice, toPrice, hasDiscount, showCampaign) {\n    const location = useLocation()\n    const history = useHistory()\n    const changeUrl = (search) => {\n        let newSearch = search\n        if (!showCampaign) {\n            const queryParams = new URLSearchParams(location.search)\n            if (queryParams.has('campaign_id')) {\n                const id = queryParams.get('campaign_id')\n                newSearch = newSearch.replace(`campaign_id=${id}`, '')\n            }\n            if (search === '') {\n                newSearch += '?'\n            }\n            for (let i = 0; i < catsLength; i++) {\n                newSearch = newSearch.replace(`[${i}]`, '')\n            }\n\n            newSearch += `&lb_price=${fromPrice}&ub_price=${toPrice}`\n            if (hasDiscount) {\n                newSearch += `&has_discount=${hasDiscount}`\n            }\n        }\n        newSearch += `&page=${page}`\n        return newSearch\n    }\n    const [result, setResult] = useState({\n        products: [],\n        max_pages: 0,\n        merchandise_objs_number: 0,\n    })\n    const [loading, setLoading] = useState(true)\n    const [, getProducts] = useAxios({\n        url: `/merchandise/get_all${changeUrl(search)}`,\n    })\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await getProducts()\n                setResult({\n                    products: response.data.data.merchandise,\n                    max_pages: response.data.data.max_pages,\n                    merchandise_objs_number: response.data.data.merchandise_objs_number,\n                })\n                setLoading(false)\n            } catch (err) {\n                if (err.response) {\n                    history.push({pathname: '/search', state: {showCampaign: false}})\n                }\n\n            }\n            SmoothVerticalScrolling(document.body, 500, \"top\")\n        }\n\n        if (fetch)\n            getResult().then()\n\n    }, [fetch, search, page, fromPrice, toPrice, hasDiscount, showCampaign, getProducts])\n\n    return [loading, result]\n}\n\nexport default useSearchData","/Users/tavallai/codes/JS/didartshop-website/src/Shop/DeleteData/useDeleteAddress.js",["639"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\nfunction useDeleteAddress(fetch, id) {\n    const [result, setResult] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [, deleteAddress] = useAxios({\n        url: '/user/costumer_information/delete',\n        method: 'DELETE',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await deleteAddress({\n                    data: {\n                        \"id\": id,\n                    },\n                })\n                setResult(response.data.status === 'success')\n                setLoading(false)\n            } catch (err) {\n                setResult(false)\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useDeleteAddress","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useCategoriesData.js",["640"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\n\nfunction useCategoriesData(fetch) {\n    const [result, setResult] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [, getCategories] = useAxios({\n        url: '/get_all_category',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await getCategories()\n                const responseCats = response.data.data.categories\n                let categories = []\n                responseCats.sort((a, b) => a.name.localeCompare(b.name))\n                for (let i = 0; i < responseCats.length; i++) {\n                    categories.push({...responseCats[i], checked: false})\n                }\n                setResult(categories)\n                setLoading(false)\n            } catch (err) {\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useCategoriesData","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePostCart.js",["641"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\n\nfunction usePostCart(fetch) {\n    const [result, setResult] = useState()\n    const [loading, setLoading] = useState(true)\n    const [, create_box] = useAxios({\n        url: '/basket/create_box',\n        method: 'POST',\n    }, {manual: true})\n    const [, create_basket] = useAxios({\n        url: '/basket/create_basket',\n        method: 'POST',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                const localStorageCart = JSON.parse(localStorage.getItem('cart'))\n                if (localStorageCart) {\n                    setLoading(true)\n                    let response = []\n                    for (let i = 0; i < localStorageCart.length; i++) {\n                        response.push(await create_box({\n                            data: {\n                                \"count\": localStorageCart[i].count,\n                                \"merchandise\": localStorageCart[i].id,\n                                \"size\": localStorageCart[i].size,\n                                \"color\": localStorageCart[i].color,\n                            }\n                        }))\n                    }\n\n                    const boxesId = [], boxes = []\n                    for (let i = 0; i < response.length; i++) {\n                        boxesId.push(response[i].data.data.id)\n                        boxes.push(response[i].data.data)\n                    }\n                    const basketResponse = await create_basket({\n                        data: {\n                            \"boxes_list\": boxesId,\n                        }\n                    })\n                    setResult({\n                        boxes: boxes,\n                        basket: basketResponse.data.data,\n                    })\n                    setLoading(false)\n                }\n                else {\n                    setLoading(false)\n                }\n            } catch (err) {\n                localStorage.removeItem('cart')\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default usePostCart","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePostAddress.js",["642"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\nimport {toEnDigit, toFaDigit} from \"../../utills/ToFaDigit\";\n\nfunction usePostAddress(fetch, values) {\n    const [result, setResult] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [, createAddress] = useAxios({\n        url: '/user/costumer_information/create',\n        method: 'POST',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await createAddress({\n                    data: {\n                        \"costumer_name\": values.name,\n                        \"address\": toFaDigit(values.address),\n                        \"post_code\": toEnDigit(values.code),\n                        \"phone_number\": toEnDigit(values.mobileNumber),\n                        \"email\": toEnDigit(values.email),\n                        \"state\": values.state.id,\n                        \"city\": values.city.id\n                    },\n                })\n                setResult(response.data.status === 'success')\n                setLoading(false)\n\n            } catch (err) {\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default usePostAddress","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/useApplyDiscountCode.js",["643"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\nfunction useApplyDiscountCode(fetch, id, discountCode) {\n    const [result, setResult] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [, applyCode] = useAxios({\n        url: '/basket/apply_discount_code',\n        method: 'PATCH',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await applyCode({\n                    data: {\n                        \"basket_id\": id,\n                        \"discount_code\": discountCode,\n                    },\n                })\n                setResult(response.data)\n                setLoading(false)\n            } catch (err) {\n                setResult(err.response)\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useApplyDiscountCode","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePathCart.js",["644"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\nimport {toEnDigit} from \"../../utills/ToFaDigit\";\n\nfunction usePathCart(fetch, id, address, details) {\n    const [result, setResult] = useState()\n    const [loading, setLoading] = useState(false)\n    const [, updateBasket] = useAxios({\n        url: '/basket/update_basket',\n        method: 'PATCH',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await updateBasket({\n                    data: {\n                        \"id\": id,\n                        \"city\": address.city,\n                        \"state\": address.state,\n                        \"address\": address.address,\n                        \"post_code\": toEnDigit(address.post_code),\n                        \"costumer_name\": address.costumer_name,\n                        \"phone_number\": toEnDigit(address.phone_number),\n                        \"email\": address.email,\n                        \"details\": details === '' ? 'بدون توضیح' : details,\n                    },\n                })\n                setResult(response.data.data)\n                setLoading(false)\n            } catch (err) {\n                setResult(err.response)\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default usePathCart","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Styles/ShopLayoutStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Routes/Link/ItemLink.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useAddressPageStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useHomeData.js",["645"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\n\nfunction useHomeData(fetch) {\n    const [result, setResult] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [, getIndex] = useAxios({\n        url: '/index',\n    })\n    // blog api\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await getIndex()\n                setResult([\n                    response.data.data.covers,\n                    response.data.data.campaigns,\n                    response.data.data.top_merchandises,\n                    response.data.data.amazing_offers,\n                    response.data.data.mottos,\n                    // todo: array of blog posts\n                ])\n                setLoading(false)\n            } catch (err) {\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useHomeData","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/Step.js",["646"],"import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/styles\";\n\nconst useStyle = makeStyles((theme) => ({\n    step: {\n        display: 'flex',\n        padding: 32,\n        alignItems: 'center',\n        [theme.breakpoints.down('xs')]: {\n            flexDirection: 'column'\n        },\n    },\n}), {index: 1})\n\nfunction Step(props) {\n    const classes = useStyle()\n    const {children, index, step, stepClass} = props\n\n    const style = {\n        display: step !== index ? 'none' : 'flex'\n    }\n    return (\n        <div style={style} className={stepClass} hidden={step !== index}>\n            {step === index && children}\n        </div>\n    )\n\n\n}\n\nStep.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    step: PropTypes.number.isRequired,\n    stepClass: PropTypes.any,\n}\nexport default Step","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/Title.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/ForgetPass/ThirdStep.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/SignUp/SecondStep.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/AddressCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/OrderCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Profile/PreviewOrderCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/FactorCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/AddressForm.js",["647"],"import React, {useState} from \"react\";\nimport {Card, Grid, MenuItem, TextField, Typography} from \"@material-ui/core\";\nimport {useUserInfoPageStyle} from \"../../Pages/Styles/useUserInfoPageStyle\";\nimport PropType from 'prop-types'\nimport useStateData from \"../../FetchData/useStateData\";\nimport useCityData from \"../../FetchData/useCityData\";\nimport {toFaDigit} from \"../../../utills/ToFaDigit\";\n\n\nfunction AddressForm(props) {\n    const {values, setValues, errors, setErrors} = props\n    const [fetchCities, setFetchCities] = useState(false)\n    const [statesLoading, states] = useStateData(true)\n    const [citiesLoading, cities] = useCityData(fetchCities, values.state.id)\n    const classes = useUserInfoPageStyle()\n\n    const findStateId = (name) => {\n        for (let i = 0; i < states.length; i++) {\n            if (states[i].name === name) {\n                return states[i].id\n            }\n        }\n    }\n    const findCityId = (name) => {\n        for (let i = 0; i < cities.length; i++) {\n            if (cities[i].name === name) {\n                return cities[i].id\n            }\n        }\n    }\n\n    const handleChange = (prop) => (event) => {\n        setValues({...values, [prop]: event.target.value})\n    }\n\n    return (\n        <Card className={classes.card}>\n            <Grid container spacing={4}>\n                <Grid item md={6} xs={12}>\n                    <Typography className={classes.label}>نام و نام‌خانوادگی</Typography>\n                    <TextField\n                        required\n                        error={errors.name}\n                        value={values.name}\n                        onChange={handleChange('name')}\n                        InputProps={{\n                            classes: {\n                                input: classes.input,\n                                root: classes.textFieldRoot,\n                            }\n                        }}\n                        fullWidth\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                    <Typography className={classes.label}>شماره موبایل</Typography>\n                    <TextField\n                        required\n                        dir={'ltr'}\n                        type={'tel'}\n                        error={errors.mobileNumber}\n                        value={toFaDigit(values.mobileNumber)}\n                        onChange={handleChange('mobileNumber')}\n                        InputProps={{\n                            classes: {\n                                input: classes.input,\n                                root: classes.textFieldRoot,\n                            }\n                        }}\n                        fullWidth\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                    <Typography className={classes.label}>آدرس پست الکترونیک</Typography>\n                    <TextField\n                        required\n                        dir={'ltr'}\n                        error={errors.email}\n                        value={values.email}\n                        onChange={handleChange('email')}\n                        InputProps={{\n                            classes: {\n                                input: classes.input,\n                                root: classes.textFieldRoot,\n                            }\n                        }}\n                        fullWidth\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                    <Typography className={classes.label}>استان</Typography>\n                    <TextField\n                        required\n                        disabled={statesLoading}\n                        select\n                        placeholder={'استان خود را انتخاب کنید'}\n                        onChange={(event) => {\n                            setFetchCities(false)\n                            setValues({\n                                ...values,\n                                state: {\n                                    name: event.target.value,\n                                    id: findStateId(event.target.value)\n                                },\n                                city: {\n                                    name: '',\n                                    id: null,\n                                }\n                            })\n                            setFetchCities(true)\n                        }}\n                        InputProps={{\n                            classes: {\n                                input: classes.input,\n                                root: classes.textFieldRoot,\n                            }\n                        }}\n                        fullWidth\n                        variant=\"outlined\"\n                    >\n                        {\n                            states.map((state) => (\n                                <MenuItem className={classes.menu} key={state.id} value={state.name}>\n                                    {state.name}\n                                </MenuItem>\n                            ))\n                        }\n                    </TextField>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                    <Typography className={classes.label}>شهر</Typography>\n                    <TextField\n                        required\n                        disabled={citiesLoading}\n                        select\n                        placeholder={'شهر خود را انتخاب کنید'}\n                        onChange={(event) => {\n                            setValues({\n                                ...values,\n                                city: {\n                                    name: event.target.value,\n                                    id: findCityId(event.target.value)\n                                }\n                            })\n                            setFetchCities(false)\n                        }}\n                        InputProps={{\n                            classes: {\n                                input: classes.input,\n                                root: classes.textFieldRoot,\n                            }\n                        }}\n                        fullWidth\n                        variant=\"outlined\"\n                    >\n                        {\n                            cities.map((city) => (\n                                <MenuItem className={classes.menu} key={city.id} value={city.name}>\n                                    {city.name}\n                                </MenuItem>\n                            ))\n                        }\n                    </TextField>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                    <Typography className={classes.label}>کد پستی</Typography>\n                    <TextField\n                        required\n                        dir={'ltr'}\n                        error={errors.code}\n                        value={toFaDigit(values.code)}\n                        onChange={handleChange('code')}\n                        InputProps={{\n                            classes: {\n                                input: classes.input,\n                                root: classes.textFieldRoot,\n                            }\n                        }}\n                        fullWidth\n                        variant=\"outlined\"\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography className={classes.label}>آدرس</Typography>\n                    <TextField\n                        required\n                        multiline\n                        error={errors.address}\n                        value={toFaDigit(values.address)}\n                        onChange={handleChange('address')}\n                        InputProps={{\n                            classes: {\n                                input: classes.input,\n                            }\n                        }}\n                        fullWidth\n                        variant=\"outlined\"\n                    />\n                </Grid>\n            </Grid>\n        </Card>\n    )\n}\n\nAddressForm.propTypes = {\n    values: PropType.object.isRequired,\n    setValues: PropType.func.isRequired,\n    errors: PropType.object.isRequired,\n    setErrors: PropType.func.isRequired,\n\n}\n\nexport default AddressForm","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Search/Reducer.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/ForgetPass/FirstStep.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/TablePaginationActions.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Search/FilterPrice.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Skeletons/ProfilePageSkeleton.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Search/Styles/SearchStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/ProuductCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Profile/PreviewAddressCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Search/FilterCategory.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/SignUp/ThirdStep.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/DesktopProduct.js",["648"],"import React, {useEffect, useState} from \"react\";\nimport {\n    Button,\n    Card,\n    Chip,\n    IconButton,\n    MenuItem,\n    Snackbar,\n    SvgIcon,\n    TextField,\n    Typography\n} from \"@material-ui/core\";\nimport DesktopPhotoViewer from \"./DesktopPhotoViewer\";\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport {separateDigit} from \"../../../utills/ToFaDigit\";\nimport {useProductStyle} from \"./Styles/useProductStyle\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport * as PropTypes from 'prop-types'\nimport {Alert} from \"@material-ui/lab\";\n\n\nfunction DesktopProduct(props) {\n    const {product, addToCart} = props\n    const classes = useProductStyle()\n    const [openSnackBar, setOpenSnackBar] = useState(false)\n    const [selectedSize, setSelectedSize] = useState(product.size_list[0])\n    const [selectedColor, setSelectedColor] = useState(product.color_list[0])\n    const [count, setCount] = useState(1)\n\n    const getMaxStockNumber = () => {\n        if (product.merchandise_type === \"1\") {\n            for (let i = 0; i < product.stock_list.length; i++) {\n                if (product.stock_list[i].size === selectedSize\n                    && product.stock_list[i].color === selectedColor) {\n                    return product.stock_list[i].stock_number\n                }\n            }\n        } else {\n            return product.stock_number\n        }\n\n    }\n    const [disabled, setDisabled] = useState(getMaxStockNumber() === 0)\n    useEffect(() => {\n        setDisabled(getMaxStockNumber() === 0)\n\n    }, [selectedSize, selectedColor])\n\n    let images = [product.preview_image !== null && product.preview_image]\n    for (let i = 0; i < product.other_image_list.length; i++) {\n        images.push(product.other_image_list[i])\n    }\n    return (\n        <>\n            <Snackbar open={openSnackBar} autoHideDuration={6000} onClose={() => setOpenSnackBar(false)}>\n                <Alert\n                    dir={'ltr'}\n                    variant={'filled'}\n                    style={{fontFamily: 'Shabnam'}}\n                    onClose={() => setOpenSnackBar(false)}\n                    severity={\"success\"}\n                >\n                    لینک در کلیپ بورد کپی شد\n                </Alert>\n            </Snackbar>\n            <Card>\n                <div className={classes.content}>\n                    <DesktopPhotoViewer images={images}/>\n                    <div className={classes.detailContainer}>\n\n                        <div className={classes.details}>\n                            <Typography className={classes.title}>{product.title}</Typography>\n                            <Typography className={classes.subtitle}>مشخصات محصول:</Typography>\n                            <Typography className={classes.detail}>{product.specification}</Typography>\n                        </div>\n\n                        <div className={classes.selects}>\n                            <div className={classes.selectContainer}>\n                                <Typography className={classes.label}>سایز</Typography>\n                                <TextField\n                                    id=\"size\"\n                                    select\n                                    value={selectedSize}\n                                    onChange={(event) => {\n                                        setSelectedSize(event.target.value)\n                                        setCount(1)\n                                    }}\n                                    InputProps={{\n                                        classes: {\n                                            input: classes.textFieldFont,\n                                            root: classes.textFieldRoot,\n                                        }\n                                    }}\n                                    variant=\"outlined\"\n                                >\n                                    {\n                                        product.size_list.map((size, index) => (\n                                            <MenuItem className={classes.menu} key={index} value={size}>\n                                                {size}\n                                            </MenuItem>\n                                        ))\n                                    }\n                                </TextField>\n                            </div>\n                            <div className={classes.selectContainer}>\n                                <Typography className={classes.label}>رنگ</Typography>\n                                <TextField\n                                    id=\"color\"\n                                    select\n                                    value={selectedColor}\n                                    onChange={(event) => {\n                                        setSelectedColor(event.target.value)\n                                        setCount(1)\n                                    }}\n                                    InputProps={{\n                                        classes: {\n                                            input: classes.textFieldFont,\n                                            root: classes.textFieldRoot,\n                                        }\n                                    }}\n                                    variant=\"outlined\"\n                                >\n                                    {\n                                        product.color_list.map((color, index) => (\n                                            <MenuItem className={classes.menu} key={index} value={color}>\n                                                {color}\n                                            </MenuItem>\n                                        ))\n                                    }\n                                </TextField>\n                            </div>\n                            <div className={classes.selectContainer}>\n                                <Typography className={classes.label}>تعداد</Typography>\n                                <div className={classes.buttonGroup}>\n                                    <IconButton\n                                        disabled={!product.is_exist}\n                                        onClick={() => count !== getMaxStockNumber() && setCount(count + 1)}\n                                        className={classes.addButton}\n                                    >\n                                        <AddIcon/>\n                                    </IconButton>\n                                    <Typography className={classes.countLabel}>{separateDigit(count)}</Typography>\n                                    <IconButton\n                                        disabled={!product.is_exist}\n                                        onClick={() => count !== 1 && setCount(count - 1)}\n                                        className={classes.removeButton}\n                                    >\n                                        <RemoveIcon/>\n                                    </IconButton>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.actionContainer}>\n                        <CopyToClipboard text={window.location.href}>\n                            <IconButton className={classes.shareButton} onClick={() => setOpenSnackBar(true)}>\n                                <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" width=\"22.5\" height=\"21\"\n                                         viewBox=\"0 0 22.5 21\">\n                                    <g id=\"share\" transform=\"translate(-0.75 -1.5)\">\n                                        <circle id=\"Ellipse_115\" data-name=\"Ellipse 115\" cx=\"3.75\" cy=\"3.75\" r=\"3.75\"\n                                                transform=\"translate(1.5 7.5)\" fill=\"none\" stroke=\"#434343\"\n                                                strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1.5\"/>\n                                        <circle id=\"Ellipse_116\" data-name=\"Ellipse 116\" cx=\"3.75\" cy=\"3.75\" r=\"3.75\"\n                                                transform=\"translate(15 2.25)\" fill=\"none\" stroke=\"#434343\"\n                                                strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1.5\"/>\n                                        <circle id=\"Ellipse_117\" data-name=\"Ellipse 117\" cx=\"3.75\" cy=\"3.75\" r=\"3.75\"\n                                                transform=\"translate(15 14.25)\" fill=\"none\" stroke=\"#434343\"\n                                                strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1.5\"/>\n                                        <path id=\"Path_30119\" data-name=\"Path 30119\" d=\"M8.746,9.891,15.254,7.36\"\n                                              fill=\"none\"\n                                              stroke=\"#434343\" strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                              strokeWidth=\"1.5\"/>\n                                        <path id=\"Path_30120\" data-name=\"Path 30120\" d=\"M8.6,12.928l6.79,3.395\"\n                                              fill=\"none\"\n                                              stroke=\"#434343\" strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                              strokeWidth=\"1.5\"/>\n                                    </g>\n                                </SvgIcon>\n\n                            </IconButton>\n                        </CopyToClipboard>\n                        <div className={classes.priceDetailContainer}>\n\n                            {\n                                product.is_exist ?\n                                    product.has_discount ?\n                                        <>\n                                            <div className={classes.discountContainer}>\n                                                <Chip className={classes.discountChip}\n                                                      label={`%${separateDigit(product.percent_of_discount * 100)}`}/>\n                                                <Typography\n                                                    className={classes.prevPrice}>{separateDigit(product.price)}</Typography>\n\n                                            </div>\n                                            <div className={classes.priceContainer}>\n                                                <Typography className={classes.toman}>تومان</Typography>\n                                                <Typography\n                                                    className={classes.price}>{separateDigit(Math.floor(product.price_with_discount))}</Typography>\n                                            </div>\n                                        </>\n                                        :\n                                        <div className={classes.priceContainer}>\n                                            <Typography className={classes.toman}>تومان</Typography>\n                                            <Typography\n                                                className={classes.price}>{separateDigit(Math.floor(product.price))}</Typography>\n                                        </div>\n                                    :\n                                    <>\n                                        <div className={classes.priceContainer}>\n                                            <Typography\n                                                className={classes.price}>ناموجود</Typography>\n                                        </div>\n\n                                    </>\n                            }\n\n                            <Button\n                                disabled={!product.is_exist || disabled}\n                                className={classes.shopButton}// order : id, color, size, count\n                                onClick={() => addToCart({\n                                    id: product.id,\n                                    color: selectedColor,\n                                    size: selectedSize,\n                                    count: count,\n                                })}\n                                dir={'ltr'}\n                                variant={'contained'}\n                                endIcon={\n                                    <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" width=\"19.5\" height=\"21.5\"\n                                             viewBox=\"0 0 19.5 21.5\">\n                                        <g id=\"shopping-bag\" transform=\"translate(-2.25 -1.25)\">\n                                            <path id=\"Path_8\" data-name=\"Path 8\"\n                                                  d=\"M6,2,3,6V20a2,2,0,0,0,2,2H19a2,2,0,0,0,2-2V6L18,2Z\" fill=\"none\"\n                                                  stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                                  strokeWidth=\"1.5\"/>\n                                            <line id=\"Line_1\" data-name=\"Line 1\" x2=\"18\" transform=\"translate(3 6)\"\n                                                  fill=\"none\" stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                                  strokeWidth=\"1.5\"/>\n                                            <path id=\"Path_9\" data-name=\"Path 9\" d=\"M16,10a4,4,0,0,1-8,0\" fill=\"none\"\n                                                  stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                                  strokeWidth=\"1.5\"/>\n                                        </g>\n                                    </SvgIcon>\n                                }\n                            >\n                                افزودن به سبد خرید\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </Card>\n        </>\n    )\n}\n\nDesktopProduct.propTypes = {\n    product: PropTypes.object.isRequired,\n    addToCart: PropTypes.func.isRequired,\n}\n\n\nexport default DesktopProduct","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/BlogInterView.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Slider.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Banners.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Attributes.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/BestSeller.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/AmazingOffers.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useSignUpPageStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/SignUp/FirstStep.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePathUserInfo.js",["649"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\nimport {useHistory} from 'react-router-dom'\n\nfunction usePathUserInfo(fetch, id, values) {\n    const history = useHistory()\n    const [result, setResult] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [, updateInfo] = useAxios({\n        url: '/user/update_profile',\n        method: 'PATCH',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await updateInfo({\n                    data: {\n                        \"id\": id,\n                        \"name_and_last_name\": values.name,\n                        \"email\": values.email,\n                        \"state\": values.state.id,\n                        \"city\": values.city.id,\n                    },\n                })\n                    setResult(response.data.status === 'success')\n                    setLoading(false)\n                if(response.data.status === 'success'){\n                    history.push('/profile')\n                }\n\n            } catch (err) {\n            }\n        }\n        if(fetch)\n            getResult().then()\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default usePathUserInfo","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useCityData.js",["650"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\n\nfunction useCityData(fetch, id) {\n    const [result, setResult] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [, getCities] = useAxios({\n        url: `get_city?id=${id}`,\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await getCities()\n                setResult(response.data.data.cities)\n                setLoading(false)\n            } catch (err) {\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n\n    }, [fetch, id])\n\n    return [loading, result]\n}\n\nexport default useCityData","/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useStateData.js",["651"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\n\nfunction useStateData(fetch) {\n    const [result, setResult] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [, getStates] = useAxios({\n        url: '/get_state',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await getStates()\n                setResult(response.data.data)\n                setLoading(false)\n            } catch (err) {\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useStateData","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useUserInfoPageStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Skeletons/ProductPageSkeleton.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useProductData.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/ProductDetail.js",["652","653"],"import React, {useEffect, useState} from \"react\";\nimport {AppBar, Card, CircularProgress, IconButton, Snackbar, Tab, Tabs, Typography} from \"@material-ui/core\";\nimport {toFaDigit} from \"../../../utills/ToFaDigit\";\nimport TabPanel from \"./TabPanel\";\nimport {useProductDetailStyle} from \"./Styles/useProductDetailStyle\";\nimport CommentCard from \"./CommentCard\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\nimport {StyledTextField} from \"../Public/StyledTextField\";\nimport * as PropTypes from \"prop-types\";\nimport {useAuth} from \"../../../utills/Auth\";\nimport usePostComment from \"../../PostData/usePostComment\";\nimport {Alert} from \"@material-ui/lab\";\nimport {Link} from \"react-router-dom\";\nimport {SmoothVerticalScrolling} from \"../../../utills/smoothScroll\";\nimport FullScreenDialog from \"./MobileVersion/FullScreenDialog\";\n\nfunction ProductDetail(props) {\n    const {product} = props\n    const classes = useProductDetailStyle()\n    const [fetchPostComment, setFetchPostComment] = useState(false)\n    const [value, setValue] = useState(0);\n    const [openSnackBar, setOpenSnackBar] = useState(false)\n    const [commentInput, setCommentInput] = useState('')\n    const [createCommentLoading, createCommentResult] = usePostComment(fetchPostComment, product.id, commentInput)\n    const auth = useAuth()\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    useEffect(() => {\n        if (!createCommentLoading && fetchPostComment) {\n            setOpenSnackBar(true)\n\n            setFetchPostComment(false)\n        }\n\n    }, [createCommentLoading, createCommentResult])\n\n    return (\n        <>\n            <Snackbar open={openSnackBar} autoHideDuration={6000} onClose={() => setOpenSnackBar(false)}>\n                <Alert\n                    dir={'ltr'}\n                    variant={'filled'}\n                    classes={{\n                        action: classes.snackbarAction,\n                        icon: classes.snackbarIcon,\n                        message: classes.snackbarMessage,\n                    }}\n                    style={{fontFamily: 'Shabnam'}}\n                    onClose={() => setOpenSnackBar(false)}\n                    severity={auth.isLogin ? createCommentResult ? \"success\" : \"error\" : \"warning\"}\n                >{\n                    auth.isLogin ?\n                        createCommentResult\n                            ? 'نظر شما ثبت شد. پس از بررسی، نظر شما در سایت قرار داده می‌شود.'\n                            : 'خطا لطفا دوباره تلاش کنید.'\n                        : <div style={{display: 'flex'}}>\n                            <Typography>\n                                {' شما ابتدا باید'}\n                            </Typography>\n                            <Typography\n                                component={\n                                    (props) =>\n                                        <Link\n                                            {...props}\n                                            onClick={() => SmoothVerticalScrolling(document.body, 500, \"top\")}\n                                            to={'/login'}/>\n                                }\n                                style={{margin: 'auto 4px'}}\n                            >\n                                ورود/ثبت‌نام\n                            </Typography>\n                            <Typography>\n                                {'کنید '}\n                            </Typography>\n                        </div>\n                }\n\n                </Alert>\n            </Snackbar>\n            <Card className={classes.card}>\n                <AppBar className={classes.appBar} position={'static'}>\n                    <Tabs classes={{indicator: classes.indicator, scroller: classes.tabsContainer}} value={value}\n                          onChange={handleChange}>\n                        <Tab className={classes.tab} label={'توضیحات محصول'}/>\n                        <Tab className={classes.tab} label={toFaDigit(`دیدگاه‌ها (${product.comment_number})`)}/>\n                    </Tabs>\n                    <TabPanel index={0} value={value}>\n                        <Typography className={classes.description}>{product.description}</Typography>\n                    </TabPanel>\n\n                    <TabPanel index={1} value={value}>\n                        {\n                            product.comment_objs_list.map((comment) => (\n                                <div style={{marginBottom: 16}} key={comment.id}>\n                                    <CommentCard comment={comment}/>\n                                </div>\n                            ))\n                        }\n                        {\n                            product.comment_objs_list.length === 0 &&\n                            <Typography\n                                style={{\n                                    color: '#545454',\n                                    fontSize: 14,\n                                    textAlign: 'center',\n                                    opacity: 0.68,\n                                    margin: '16px 0'\n                                }}\n                            >\n                                هنوز دیدگاهی ثبت نشده !\n                            </Typography>\n                        }\n                        <form\n                            onSubmit={(event) => {\n                                event.preventDefault()\n                                if (!auth.isLogin) {\n                                    setOpenSnackBar(true)\n                                } else {\n                                    setFetchPostComment(true)\n                                }\n                            }}\n                        >\n                            <StyledTextField\n                                required\n                                id=\"comment-input\"\n                                placeholder=\"دیدگاه خود را بنویسید\"\n                                value={toFaDigit(commentInput)}\n                                onChange={(event) => setCommentInput(event.target.value)}\n                                InputProps={{\n                                    endAdornment:\n                                        <InputAdornment\n                                            style={{\n                                                position: 'absolute',\n                                                left: 0,\n                                                bottom: 28,\n                                            }}\n                                            position=\"end\"\n                                        >\n                                            {\n                                                createCommentLoading\n                                                    ?\n                                                    <CircularProgress size={32} color={'initial'}\n                                                                      style={{color: '#F16522'}}/>\n                                                    :\n                                                    <IconButton\n                                                        type={'submit'}\n                                                    >\n                                                        <SendRoundedIcon\n                                                            style={{transform: 'rotate(180deg)', color: '#F16522'}}/>\n                                                    </IconButton>\n\n                                            }\n                                        </InputAdornment>\n                                    ,\n                                    classes: {\n                                        input: classes.commentInput,\n                                        root: classes.commentInputRoot,\n                                    }\n                                }}\n                                fullWidth\n                                multiline\n                                variant=\"outlined\"\n                            />\n                        </form>\n                    </TabPanel>\n\n                </AppBar>\n            </Card>\n        </>\n    )\n\n}\n\nProductDetail.propTypes = {\n    product: PropTypes.object.isRequired,\n}\n\nexport default ProductDetail","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/SimilarProducts.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/MobileProduct.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/CategoriesList.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/SocialNetwork.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/SearchDialog.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/CategoryMenu.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/utills/Hooks/useAxios.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/DesktopPhotoViewer.js",["654"],"import React, {useEffect, useState} from \"react\";\nimport SwipeableViews from 'react-swipeable-views';\nimport {ButtonBase, IconButton, SvgIcon} from \"@material-ui/core\";\nimport {usePhotoViewerStyle} from \"./Styles/usePhotoViewerStyle\";\nimport * as PropTypes from \"prop-types\";\nimport {GlassMagnifier} from 'react-image-magnifiers'\n\nfunction DesktopPhotoViewer(props) {\n    const [index, setIndex] = useState(0)\n    const {images} = props\n    const classes = usePhotoViewerStyle()\n\n    useEffect(() => {\n        const slider = document.getElementById('image-buttons');\n        let isDown = false;\n        let startX;\n        let scrollLeft;\n\n        slider.addEventListener('mousedown', (e) => {\n            isDown = true;\n            slider.classList.add('active');\n            startX = e.pageX - slider.offsetLeft;\n            scrollLeft = slider.scrollLeft;\n        });\n        slider.addEventListener('mouseleave', () => {\n            isDown = false;\n            slider.classList.remove('active');\n        });\n        slider.addEventListener('mouseup', () => {\n            isDown = false;\n            slider.classList.remove('active');\n        });\n        slider.addEventListener('mousemove', (e) => {\n            if (!isDown) return;\n            e.preventDefault();\n            const x = e.pageX - slider.offsetLeft;\n            const walk = (x - startX) * 1.5; //scroll-fast\n            slider.scrollLeft = scrollLeft - walk;\n        });\n    }, [])\n\n    useEffect(() => {\n        const slider = document.getElementById('image-buttons');\n        let isDown = false;\n        let startX;\n        let scrollLeft;\n\n        slider.addEventListener('touchstart', (e) => {\n            isDown = true;\n            slider.classList.add('active');\n            startX = e.targetTouches[0].pageX - slider.offsetLeft;\n            scrollLeft = slider.scrollLeft;\n        });\n        slider.addEventListener('touchend', () => {\n            console.log('touchend')\n            isDown = false;\n            slider.classList.remove('active');\n        });\n        slider.addEventListener('touchcancel', () => {\n            console.log('touchcancel')\n            isDown = false;\n            slider.classList.remove('active');\n        });\n        slider.addEventListener('touchmove', (e) => {\n            if (!isDown) return;\n            e.preventDefault();\n            const x = e.targetTouches[0].pageX - slider.offsetLeft;\n            const walk = (x - startX) * 1.5; //scroll-fast\n            slider.scrollLeft = scrollLeft - walk;\n        });\n    }, [])\n\n    useEffect(() => {\n        for (let i = 0; i < images.length; i++) {\n            const imageButton = document.getElementById(`image-button-${i}`)\n            imageButton.style.borderColor = '#989898'\n        }\n        const imageButton = document.getElementById(`image-button-${index}`)\n        imageButton.style.borderColor = '#434343'\n    }, [index])\n\n\n    return (\n        <div className={classes.container}>\n            <SwipeableViews\n                onChangeIndex={(event) => setIndex(event)}\n                axis={'x-reverse'}\n                index={index}\n                enableMouseEvents\n            >\n                {\n                    images.map((image) => (\n                        <GlassMagnifier\n                            magnifierSize={'50%'}\n                            allowOverflow={true}\n                            dragToMove={false}\n                            className={classes.imageView}\n                            imageSrc={image}\n                            largeImageSrc={image}\n                            imageAlt={document.title}\n                        />\n                    ))\n                }\n            </SwipeableViews>\n            <IconButton onClick={() => index !== 0 && setIndex(prevState => prevState - 1)}\n                        className={classes.nextArrow}>\n                <SvgIcon style={{width: '8px', height: '14px'}} xmlns=\"http://www.w3.org/2000/svg\" width=\"5.811\"\n                         height=\"10.121\" viewBox=\"0 0 5.811 10.121\">\n                    <path id=\"chevron-right\" d=\"M13,14,9,10l4-4\" transform=\"translate(-8.25 -4.939)\" fill=\"none\"\n                          stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1.5\"/>\n                </SvgIcon>\n\n            </IconButton>\n\n            <IconButton onClick={() => index !== images.length - 1 && setIndex(prevState => prevState + 1)}\n                        className={classes.prevArrow}>\n                <SvgIcon style={{width: '8px', height: '14px'}} xmlns=\"http://www.w3.org/2000/svg\" width=\"5.811\"\n                         height=\"10.121\" viewBox=\"0 0 5.811 10.121\">\n                    <path id=\"chevron-left\" d=\"M13,14,9,10l4-4\" transform=\"translate(-8.25 -4.939)\" fill=\"none\"\n                          stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1.5\"/>\n                </SvgIcon>\n            </IconButton>\n            <div id={'image-buttons'} className={classes.imageButtonContainer}>\n                {\n                    images.map((image, index) => (\n                        <ButtonBase className={classes.listItem} onClick={() => setIndex(index)}>\n                            <img id={`image-button-${index}`} className={classes.imageButton} src={image}\n                                 alt={document.title}/>\n                        </ButtonBase>\n                    ))\n                }\n            </div>\n        </div>\n    )\n\n}\n\nDesktopPhotoViewer.propTypes = {\n    images: PropTypes.array.isRequired,\n}\n\nexport default DesktopPhotoViewer","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/AddressFactorCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Search/Styles/FilterStyles.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/OrderFactorCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/StyledRadio.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/Styles/useProductCardStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Profile/Styles/usePreviewOrderStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/ProductGrid.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/Styles/ProductsSliderStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/ProductsSlider.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/Styles/useProductStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/Styles/useFactoreCardStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/Styles/useOrderCardStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/Styles/useAddressCardStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Styles/AmazingOffersStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Styles/AttributesStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Styles/BannersStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Skeletons/MobileProductSkeleton.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Skeletons/DesktopProductSkeleton.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePostComment.js",["655"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\nfunction usePostComment(fetch, id, input) {\n    const [result, setResult] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [, createComment] = useAxios({\n        url: '/create_comment',\n        method: 'POST',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await createComment({\n                    data: {\n                        \"is_comment\": true,\n                        \"text\": input,\n                        \"merchandise_id\": id\n                    },\n                })\n                setResult(response.data.status === 'success')\n                setLoading(false)\n\n            } catch (err) {\n                setResult(false)\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default usePostComment","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/StyledTextField.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/CommentCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/CommentContainer.js",["656"],"import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\"\nimport {Button, Card, CircularProgress, IconButton, Snackbar} from \"@material-ui/core\";\nimport {useMobileProductStyle} from \"./Styles/useMobileProductStyle\";\nimport {Link} from 'react-router-dom'\nimport Typography from \"@material-ui/core/Typography\";\nimport {separateDigit, toFaDigit} from \"../../../../utills/ToFaDigit\";\nimport MobileCommentCard from \"./MobileCommentCard\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport FullScreenDialog from \"./FullScreenDialog\";\nimport {StyledTextField} from \"../../Public/StyledTextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\nimport usePostComment from \"../../../PostData/usePostComment\";\nimport {useAuth} from \"../../../../utills/Auth\";\nimport {Alert} from \"@material-ui/lab\";\nimport {SmoothVerticalScrolling} from \"../../../../utills/smoothScroll\";\n\n\nfunction CommentContainer(props) {\n    const {comments, productId} = props\n    const classes = useMobileProductStyle()\n    const [open, setOpen] = useState(false)\n    const [fetchPostComment, setFetchPostComment] = useState(false)\n    const [openSnackBar, setOpenSnackBar] = useState(false)\n    const [commentInput, setCommentInput] = useState('')\n    const [createCommentLoading, createCommentResult] = usePostComment(fetchPostComment, productId, commentInput)\n    const auth = useAuth()\n\n    useEffect(() => {\n        if (!createCommentLoading && fetchPostComment) {\n            setOpenSnackBar(true)\n\n            setFetchPostComment(false)\n        }\n\n    }, [createCommentLoading, createCommentResult])\n    return (\n        <>\n            <Card className={classes.card}>\n                <Typography\n                    className={classes.detailTitle}>{toFaDigit(`دیدگاه ها (${separateDigit(comments.length)})`)}</Typography>\n                {comments.length > 0 && <MobileCommentCard isPreview={true} comment={comments[0]}/>}\n                {\n                    comments.length === 0 &&\n                    <Typography\n                        style={{\n                            color: '#545454',\n                            fontSize: 14,\n                            textAlign: 'center',\n                            opacity: 0.68,\n                            margin: '16px 0'\n                        }}\n                    >\n                        هنوز دیدگاهی ثبت نشده !\n                    </Typography>\n                }\n                <Button\n                    onClick={() => setOpen(true)}\n                    style={{marginTop: 8}}\n                    className={classes.moreButton}\n                    dir={'ltr'}\n                    variant={'text'}\n                    endIcon={\n                        <AddCircleOutlineIcon/>\n                    }\n                >\n                    {\n                        comments.length === 0\n                            ? 'ثبت دیدگاه' : 'مشاهده بیشتر'\n                    }\n\n                </Button>\n            </Card>\n            <FullScreenDialog open={open} setOpen={setOpen}\n                              title={toFaDigit(`دیدگاه ها (${separateDigit(comments.length)})`)}>\n                <Snackbar open={openSnackBar} autoHideDuration={6000} onClose={() => setOpenSnackBar(false)}>\n                    <Alert\n                        dir={'ltr'}\n                        variant={'filled'}\n                        classes={{\n                            action: classes.snackbarAction,\n                            icon: classes.snackbarIcon,\n                            message: classes.snackbarMessage,\n                        }}\n                        style={{fontFamily: 'Shabnam'}}\n                        onClose={() => setOpenSnackBar(false)}\n                        severity={auth.isLogin ? createCommentResult ? \"success\" : \"error\" : \"warning\"}\n                    >{\n                        auth.isLogin ?\n                            createCommentResult\n                                ? 'نظر شما ثبت شد. پس از بررسی، نظر شما در سایت قرار داده می‌شود.'\n                                : 'خطا لطفا دوباره تلاش کنید.'\n                            : <div style={{display: 'flex'}}>\n                                <Typography>\n                                    {' شما ابتدا باید'}\n                                </Typography>\n                                <Typography\n                                    component={\n                                        (props) =>\n                                            <Link\n                                                {...props}\n                                                onClick={() => SmoothVerticalScrolling(document.body, 500, \"top\")}\n                                                to={'/login'}/>\n                                    }\n                                    style={{margin: 'auto 4px'}}\n                                >\n                                    ورود/ثبت‌نام\n                                </Typography>\n                                <Typography>\n                                    {'کنید '}\n                                </Typography>\n                            </div>\n                    }\n\n                    </Alert>\n                </Snackbar>\n                <Card className={classes.card}>\n                    {\n                        comments.map((comment) => (\n                            <div style={{marginBottom: 16}}>\n                                <MobileCommentCard isPreview={false} comment={comment}/>\n                            </div>\n                        ))\n                    }\n                    {\n                        comments.length === 0 &&\n                        <Typography\n                            style={{\n                                color: '#545454',\n                                fontSize: 14,\n                                textAlign: 'center',\n                                opacity: 0.68,\n                                margin: '16px 0'\n                            }}\n                        >\n                            هنوز دیدگاهی ثبت نشده !\n                        </Typography>\n                    }\n                    <form\n                        onSubmit={(event) => {\n                            event.preventDefault()\n                            if (!auth.isLogin) {\n                                setOpenSnackBar(true)\n                            } else {\n                                setFetchPostComment(true)\n                            }\n\n                        }}\n                    >\n                        <StyledTextField\n                            required\n                            id=\"comment-input\"\n                            placeholder=\"دیدگاه خود را بنویسید\"\n                            value={toFaDigit(commentInput)}\n                            onChange={(event) => setCommentInput(event.target.value)}\n                            InputProps={{\n                                endAdornment:\n                                    <InputAdornment\n                                        style={{\n                                            position: 'absolute',\n                                            left: 0,\n                                            bottom: 28,\n                                        }}\n                                        position=\"end\"\n                                    >\n                                        {\n                                            createCommentLoading\n                                                ?\n                                                <CircularProgress size={32} color={'initial'}\n                                                                  style={{color: '#F16522'}}/>\n                                                :\n                                                <IconButton\n                                                    type={'submit'}\n                                                >\n                                                    <SendRoundedIcon\n                                                        style={{transform: 'rotate(180deg)', color: '#F16522'}}/>\n                                                </IconButton>\n\n                                        }\n                                    </InputAdornment>\n                                ,\n                                classes: {\n                                    input: classes.commentInput,\n                                    root: classes.commentInputRoot,\n                                }\n                            }}\n                            fullWidth\n                            multiline\n                            variant=\"outlined\"\n                        />\n                    </form>\n                </Card>\n\n            </FullScreenDialog>\n        </>\n    )\n\n}\n\nCommentContainer.propTypes = {\n    comments: PropTypes.object.isRequired,\n    productId: PropTypes.number.isRequired,\n}\nexport default CommentContainer","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/DescriptionCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Routes/Link/ListItemLink.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/FetchData/useSocialNetworkData.js",["657"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\n\nfunction useSocialNetworkData(fetch) {\n    const [result, setResult] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [, getSocialData] = useAxios({\n        url: '/admin/setting/social_network/get'\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await getSocialData()\n                setResult(response.data.data.social_networks)\n                setLoading(false)\n            } catch (err) {\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useSocialNetworkData","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Styles/useHeaderStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Styles/Transition.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/Styles/usePhotoViewerStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/Styles/useAddressFactorCardStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Cart/Styles/useOrderFactorCardStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/PrevArrow.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Public/NextArrow.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/StyledSearchField.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Layouts/Styles/FooterStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/Styles/useMobileProductStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/useLikingComment.js",["658"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\nfunction useLikingComment(fetch, id, status) {\n    const [result, setResult] = useState()\n    const [loading, setLoading] = useState(false)\n    const [, liking] = useAxios({\n        url: '/liking',\n        method: 'POST',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await liking({\n                    data: {\n                        \"like\": status.like,\n                        \"dislike\": status.dislike,\n                        \"comment_id\": id\n                    },\n                })\n                setResult(response.data.data)\n                setLoading(false)\n            } catch (err) {\n                setResult(null)\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useLikingComment","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/Styles/useMobilePhotoViewerStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/DetailCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/FullScreenDialog.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/MobileCommentCard.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/Styles/useProductDetailStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/ProductViewCard.js",["659"],"import React, {useEffect, useState} from \"react\";\nimport {Button, Card, Chip, IconButton, MenuItem, SvgIcon, TextField, Typography} from \"@material-ui/core\";\nimport MobilePhotoViewer from \"./MobilePhotoViewer\";\nimport {useMobileProductStyle} from \"./Styles/useMobileProductStyle\";\nimport {separateDigit} from \"../../../../utills/ToFaDigit\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport PropType from 'prop-types'\n\n\nfunction ProductViewCard(props) {\n    const {product, addToCart} = props\n    const classes = useMobileProductStyle()\n    const [selectedSize, setSelectedSize] = useState(product.size_list[0]) // todo: duplicate code\n    const [selectedColor, setSelectedColor] = useState(product.color_list[0])\n    const [count, setCount] = useState(1)\n    const getMaxStockNumber = () => {\n        if (product.merchandise_type === \"1\") {\n            for (let i = 0; i < product.stock_list.length; i++) {\n                if (product.stock_list[i].size === selectedSize\n                    && product.stock_list[i].color === selectedColor) {\n                    return product.stock_list[i].stock_number\n                }\n            }\n        } else {\n            return product.stock_number\n        }\n\n    }\n    const [disabled, setDisabled] = useState(getMaxStockNumber() === 0)\n    useEffect(() => {\n        setDisabled(getMaxStockNumber() === 0)\n\n    }, [selectedSize, selectedColor])\n    let images = [product.preview_image]\n    for (let i = 0; i < product.other_image_list.length; i++) {\n        images.push(product.other_image_list[i])\n    }\n\n    return (\n        <Card className={classes.card}>\n            <MobilePhotoViewer images={images}/>\n            <Typography className={classes.title}>{product.title}</Typography>\n            <div className={classes.priceDetailContainer}>\n                {\n                    product.is_exist ?\n                        product.has_discount ?\n                            <>\n                                <div className={classes.discountContainer}>\n                                    <Chip className={classes.discountChip}\n                                          label={`%${separateDigit(product.percent_of_discount * 100)}`}/>\n                                    <Typography\n                                        className={classes.prevPrice}>{separateDigit(Math.floor(product.price))}</Typography>\n\n                                </div>\n                                <div className={classes.priceContainer}>\n                                    <Typography className={classes.toman}>تومان</Typography>\n                                    <Typography\n                                        className={classes.price}>{separateDigit(Math.floor(product.price_with_discount))}</Typography>\n                                </div>\n                            </>\n                            :\n                            <div className={classes.priceContainer}>\n                                <Typography className={classes.toman}>تومان</Typography>\n                                <Typography\n                                    className={classes.price}>{separateDigit(Math.floor(product.price))}</Typography>\n                            </div>\n                        :\n                        <>\n                            <div className={classes.priceContainer}>\n                                <Typography\n                                    className={classes.price}>ناموجود</Typography>\n                            </div>\n\n                        </>\n                }\n            </div>\n            <div className={classes.selects}>\n                <div className={classes.selectContainer}>\n                    <Typography className={classes.label}>سایز</Typography>\n                    <TextField\n                        id=\"size\"\n                        select\n                        value={selectedSize}\n                        onChange={(event) => {\n                            setSelectedSize(event.target.value)\n                            setCount(1)\n                        }}\n                        InputProps={{\n                            classes: {\n                                input: classes.textFieldFont,\n                                root: classes.textFieldRoot,\n                            }\n                        }}\n                        variant=\"outlined\"\n                    >\n                        {\n                            product.size_list.map((size, index) => (\n                                <MenuItem className={classes.menu} key={index} value={size}>\n                                    {size}\n                                </MenuItem>\n                            ))\n                        }\n                    </TextField>\n                </div>\n                <div className={classes.selectContainer}>\n                    <Typography className={classes.label}>رنگ</Typography>\n                    <TextField\n                        id=\"color\"\n                        select\n                        value={selectedColor}\n                        onChange={(event) => {\n                            setSelectedColor(event.target.value)\n                            setCount(1)\n                        }}\n                        InputProps={{\n                            classes: {\n                                input: classes.textFieldFont,\n                                root: classes.textFieldRoot,\n                            }\n                        }}\n                        variant=\"outlined\"\n                    >\n                        {\n                            product.color_list.map((color, index) => (\n                                <MenuItem className={classes.menu} key={index} value={color}>\n                                    {color}\n                                </MenuItem>\n                            ))\n                        }\n                    </TextField>\n                </div>\n                <div className={classes.selectContainer}>\n                    <Typography className={classes.label}>تعداد</Typography>\n                    <div className={classes.buttonGroup}>\n                        <IconButton\n                            disabled={!product.is_exist}\n                            onClick={() => count !== getMaxStockNumber() && setCount(count + 1)}\n                            className={classes.addButton}\n                        >\n                            <AddIcon/>\n                        </IconButton>\n                        <Typography className={classes.countLabel}>{separateDigit(count)}</Typography>\n                        <IconButton\n                            disabled={!product.is_exist}\n                            onClick={() => count !== 1 && setCount(count - 1)}\n                            className={classes.removeButton}\n                        >\n                            <RemoveIcon/>\n                        </IconButton>\n                    </div>\n                </div>\n                <Button\n                    disabled={!product.is_exist || disabled}\n                    className={classes.shopButton}\n                    dir={'ltr'}\n                    onClick={() => addToCart({\n                        id: product.id,\n                        color: selectedColor,\n                        size: selectedSize,\n                        count: count,\n                    })}\n                    variant={'contained'}\n                    endIcon={\n                        <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" width=\"19.5\" height=\"21.5\"\n                                 viewBox=\"0 0 19.5 21.5\">\n                            <g id=\"shopping-bag\" transform=\"translate(-2.25 -1.25)\">\n                                <path id=\"Path_8\" data-name=\"Path 8\"\n                                      d=\"M6,2,3,6V20a2,2,0,0,0,2,2H19a2,2,0,0,0,2-2V6L18,2Z\" fill=\"none\"\n                                      stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                      strokeWidth=\"1.5\"/>\n                                <line id=\"Line_1\" data-name=\"Line 1\" x2=\"18\" transform=\"translate(3 6)\"\n                                      fill=\"none\" stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                      strokeWidth=\"1.5\"/>\n                                <path id=\"Path_9\" data-name=\"Path 9\" d=\"M16,10a4,4,0,0,1-8,0\" fill=\"none\"\n                                      stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                      strokeWidth=\"1.5\"/>\n                            </g>\n                        </SvgIcon>\n                    }\n                >\n                    افزودن به سبد خرید\n                </Button>\n            </div>\n        </Card>\n    )\n}\n\nProductViewCard.propTypes = {\n    product: PropType.object.isRequired,\n    addToCart: PropType.func.isRequired,\n}\n\n\nexport default ProductViewCard","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/TabPanel.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/MobileVersion/MobilePhotoViewer.js",["660"],"import React, {useEffect, useState} from 'react'\nimport SwipeableViews from \"react-swipeable-views\";\nimport {useMobilePhotoViewerStyle} from \"./Styles/useMobilePhotoViewerStyle\";\nimport {IconButton} from \"@material-ui/core\";\nimport * as PropTypes from \"prop-types\";\n\n\nfunction MobilePhotoViewer(props) {\n    const {images} = props\n\n    const [index, setIndex] = useState(0)\n    const classes = useMobilePhotoViewerStyle()\n    useEffect(() => {\n        const slider = document.getElementById('photoViewer-dots');\n        let isDown = false;\n        let startX;\n        let scrollLeft;\n\n        slider.addEventListener('touchstart', (e) => {\n            isDown = true;\n            slider.classList.add('active');\n            startX = e.targetTouches[0].pageX - slider.offsetLeft;\n            scrollLeft = slider.scrollLeft;\n        });\n        slider.addEventListener('touchend', () => {\n            isDown = false;\n            slider.classList.remove('active');\n        });\n        slider.addEventListener('touchcancel', () => {\n            isDown = false;\n            slider.classList.remove('active');\n        });\n        slider.addEventListener('touchmove', (e) => {\n            if (!isDown) return;\n            e.preventDefault();\n            const x = e.targetTouches[0].pageX - slider.offsetLeft;\n            const walk = (x - startX) * 1.5; //scroll-fast\n            slider.scrollLeft = scrollLeft - walk;\n        });\n    }, [])\n\n    useEffect(() => {\n        for (let i = 0; i < images.length; i++) {\n            const imageButton = document.getElementById(`photoViewer-dots-${i}`)\n            imageButton.style.backgroundColor = 'rgba(0, 0, 0, 0.45)'\n        }\n        const imageButton = document.getElementById(`photoViewer-dots-${index}`)\n        imageButton.style.backgroundColor = 'white'\n    }, [index])\n\n    return (\n        <div className={classes.container}>\n            <SwipeableViews onChangeIndex={(event) => setIndex(event)} style={{borderRadius: 4}} axis={'x-reverse'}\n                            index={index} enableMouseEvents>\n                {\n                    images.map((image) => (\n                        <img\n                            className={classes.imageView}\n                            src={image}\n                            alt={document.title}\n                        />\n                    ))\n                }\n            </SwipeableViews>\n            <div id={'photoViewer-dots'} className={classes.dotsContainer}>\n                {\n                    images.map((image, index) => (\n                        <IconButton style={{padding: 8}} component={'span'} onClick={() => setIndex(index)}>\n                            <div id={`photoViewer-dots-${index}`} className={classes.dot}/>\n                        </IconButton>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nMobilePhotoViewer.propTypes = {\n    images: PropTypes.array.isRequired,\n}\n\nexport default MobilePhotoViewer","/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Home/Styles/BlogInterViewStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/ImageViewerDialog.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Components/Product/Styles/useImageDilaogStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Paymentpage.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/usePaymentpageStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/AboutUsPage.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/Pages/Styles/useAboutUsPageStyle.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Theme.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/useSendSms.js",["661"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\nimport {toEnDigit} from \"../../utills/ToFaDigit\";\n\nfunction useSendSms(fetch, mobileNumber) {\n    const [result, setResult] = useState()\n    const [loading, setLoading] = useState(false)\n    const [, sendSms] = useAxios({\n        url: 'user/send_sms',\n        method: 'POST'\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await sendSms({\n                    data: {\n                        \"mobile_number\": toEnDigit(mobileNumber),\n                    },\n                })\n                setResult(response.data.data)\n            } catch (err) {\n                setResult(err.response.data.data)\n            }\n            setLoading(false)\n        }\n\n        if (fetch)\n            getResult().then()\n    }, [fetch, mobileNumber])\n\n    return [loading, result]\n}\n\nexport default useSendSms","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/usePayment.js",["662"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\nimport {useHistory} from 'react-router-dom'\n\nfunction usePayment(fetch, id) {\n    const history = useHistory()\n    const [result, setResult] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [, post] = useAxios({\n        url: '/payment/pay',\n        method: 'POST',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await post({\n                    data: {\n                        \"basket_id\": id,\n                    },\n                })\n                    setResult(response)\n                    \n            } catch (err) {\n                setResult(err)\n            }\n            setLoading(false)\n        }\n        if(fetch)\n            getResult().then()\n    }, [fetch, id, post])\n\n    return [loading, result]\n}\n\nexport default usePayment","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/useValidation.js",[],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/useSignUp.js",["663"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\nimport {toEnDigit} from \"../../utills/ToFaDigit\";\n\nfunction useSignUp(fetch, values) {\n    const [result, setResult] = useState()\n    const [loading, setLoading] = useState(false)\n    const [, signUp] = useAxios({\n        url: '/user/sign_up',\n        method: 'POST'\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await signUp({\n                    data: {\n                        \"mobile_number\": toEnDigit(values.mobileNumber),\n                        \"name_and_last_name\": values.name,\n                        \"password\": toEnDigit(values.password),\n                        \"state\": values.state.id,\n                        \"city\": values.city.id,\n                        \"email\": values.email,\n                    },\n                })\n                setResult(response.data.status === 201)\n            } catch (err) {\n                setResult(false)\n            }\n            setLoading(false)\n        }\n\n        if (fetch)\n            getResult().then()\n    }, [fetch, values, ])\n\n    return [loading, result]\n}\n\nexport default useSignUp\n","/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/useRestorePassword.js",["664"],"/Users/tavallai/codes/JS/didartshop-website/src/Shop/PostData/useSendResetSms.js",["665"],{"ruleId":"666","replacedBy":"667"},{"ruleId":"668","replacedBy":"669"},{"ruleId":"670","severity":1,"message":"671","line":47,"column":8,"nodeType":"672","endLine":47,"endColumn":51,"suggestions":"673"},{"ruleId":"670","severity":1,"message":"674","line":77,"column":8,"nodeType":"672","endLine":77,"endColumn":39,"suggestions":"675"},{"ruleId":"670","severity":1,"message":"676","line":88,"column":8,"nodeType":"672","endLine":88,"endColumn":45,"suggestions":"677"},{"ruleId":"670","severity":1,"message":"678","line":98,"column":8,"nodeType":"672","endLine":98,"endColumn":39,"suggestions":"679"},{"ruleId":"680","severity":1,"message":"681","line":189,"column":11,"nodeType":"682","messageId":"683","endLine":189,"endColumn":22},{"ruleId":"670","severity":1,"message":"684","line":257,"column":8,"nodeType":"672","endLine":257,"endColumn":41,"suggestions":"685"},{"ruleId":"670","severity":1,"message":"686","line":282,"column":8,"nodeType":"672","endLine":282,"endColumn":41,"suggestions":"687"},{"ruleId":"670","severity":1,"message":"688","line":304,"column":8,"nodeType":"672","endLine":304,"endColumn":43,"suggestions":"689"},{"ruleId":"670","severity":1,"message":"690","line":311,"column":8,"nodeType":"672","endLine":311,"endColumn":47,"suggestions":"691"},{"ruleId":"670","severity":1,"message":"692","line":315,"column":8,"nodeType":"672","endLine":315,"endColumn":10,"suggestions":"693"},{"ruleId":"670","severity":1,"message":"694","line":322,"column":8,"nodeType":"672","endLine":322,"endColumn":39,"suggestions":"695"},{"ruleId":"680","severity":1,"message":"696","line":33,"column":27,"nodeType":"682","messageId":"683","endLine":33,"endColumn":39},{"ruleId":"670","severity":1,"message":"697","line":87,"column":8,"nodeType":"672","endLine":87,"endColumn":25,"suggestions":"698"},{"ruleId":"670","severity":1,"message":"674","line":101,"column":8,"nodeType":"672","endLine":101,"endColumn":39,"suggestions":"699"},{"ruleId":"670","severity":1,"message":"676","line":113,"column":8,"nodeType":"672","endLine":113,"endColumn":45,"suggestions":"700"},{"ruleId":"670","severity":1,"message":"701","line":124,"column":8,"nodeType":"672","endLine":124,"endColumn":37,"suggestions":"702"},{"ruleId":"670","severity":1,"message":"703","line":53,"column":8,"nodeType":"672","endLine":53,"endColumn":33,"suggestions":"704"},{"ruleId":"670","severity":1,"message":"705","line":105,"column":8,"nodeType":"672","endLine":105,"endColumn":33,"suggestions":"706"},{"ruleId":"670","severity":1,"message":"707","line":171,"column":8,"nodeType":"672","endLine":171,"endColumn":16,"suggestions":"708"},{"ruleId":"680","severity":1,"message":"709","line":2,"column":8,"nodeType":"682","messageId":"683","endLine":2,"endColumn":18},{"ruleId":"680","severity":1,"message":"710","line":41,"column":11,"nodeType":"682","messageId":"683","endLine":41,"endColumn":15},{"ruleId":"670","severity":1,"message":"711","line":27,"column":8,"nodeType":"672","endLine":27,"endColumn":15,"suggestions":"712"},{"ruleId":"670","severity":1,"message":"713","line":28,"column":8,"nodeType":"672","endLine":28,"endColumn":15,"suggestions":"714"},{"ruleId":"670","severity":1,"message":"715","line":66,"column":8,"nodeType":"672","endLine":66,"endColumn":89,"suggestions":"716"},{"ruleId":"670","severity":1,"message":"717","line":31,"column":8,"nodeType":"672","endLine":31,"endColumn":15,"suggestions":"718"},{"ruleId":"670","severity":1,"message":"719","line":33,"column":8,"nodeType":"672","endLine":33,"endColumn":15,"suggestions":"720"},{"ruleId":"670","severity":1,"message":"721","line":62,"column":8,"nodeType":"672","endLine":62,"endColumn":15,"suggestions":"722"},{"ruleId":"670","severity":1,"message":"723","line":37,"column":8,"nodeType":"672","endLine":37,"endColumn":15,"suggestions":"724"},{"ruleId":"670","severity":1,"message":"725","line":32,"column":8,"nodeType":"672","endLine":32,"endColumn":15,"suggestions":"726"},{"ruleId":"670","severity":1,"message":"727","line":40,"column":8,"nodeType":"672","endLine":40,"endColumn":15,"suggestions":"728"},{"ruleId":"670","severity":1,"message":"729","line":35,"column":8,"nodeType":"672","endLine":35,"endColumn":15,"suggestions":"730"},{"ruleId":"680","severity":1,"message":"731","line":17,"column":11,"nodeType":"682","messageId":"683","endLine":17,"endColumn":18},{"ruleId":"680","severity":1,"message":"732","line":11,"column":39,"nodeType":"682","messageId":"683","endLine":11,"endColumn":48},{"ruleId":"670","severity":1,"message":"733","line":48,"column":8,"nodeType":"672","endLine":48,"endColumn":37,"suggestions":"734"},{"ruleId":"670","severity":1,"message":"735","line":38,"column":8,"nodeType":"672","endLine":38,"endColumn":15,"suggestions":"736"},{"ruleId":"670","severity":1,"message":"737","line":27,"column":8,"nodeType":"672","endLine":27,"endColumn":19,"suggestions":"738"},{"ruleId":"670","severity":1,"message":"739","line":27,"column":8,"nodeType":"672","endLine":27,"endColumn":15,"suggestions":"740"},{"ruleId":"680","severity":1,"message":"741","line":16,"column":8,"nodeType":"682","messageId":"683","endLine":16,"endColumn":24},{"ruleId":"670","severity":1,"message":"742","line":39,"column":8,"nodeType":"672","endLine":39,"endColumn":51,"suggestions":"743"},{"ruleId":"670","severity":1,"message":"744","line":80,"column":8,"nodeType":"672","endLine":80,"endColumn":15,"suggestions":"745"},{"ruleId":"670","severity":1,"message":"746","line":34,"column":8,"nodeType":"672","endLine":34,"endColumn":15,"suggestions":"747"},{"ruleId":"670","severity":1,"message":"742","line":37,"column":8,"nodeType":"672","endLine":37,"endColumn":51,"suggestions":"748"},{"ruleId":"670","severity":1,"message":"749","line":27,"column":8,"nodeType":"672","endLine":27,"endColumn":15,"suggestions":"750"},{"ruleId":"670","severity":1,"message":"751","line":33,"column":8,"nodeType":"672","endLine":33,"endColumn":15,"suggestions":"752"},{"ruleId":"670","severity":1,"message":"733","line":34,"column":8,"nodeType":"672","endLine":34,"endColumn":37,"suggestions":"753"},{"ruleId":"670","severity":1,"message":"744","line":49,"column":8,"nodeType":"672","endLine":49,"endColumn":15,"suggestions":"754"},{"ruleId":"670","severity":1,"message":"755","line":31,"column":8,"nodeType":"672","endLine":31,"endColumn":29,"suggestions":"756"},{"ruleId":"680","severity":1,"message":"757","line":6,"column":11,"nodeType":"682","messageId":"683","endLine":6,"endColumn":18},{"ruleId":"670","severity":1,"message":"758","line":36,"column":8,"nodeType":"672","endLine":36,"endColumn":25,"suggestions":"759"},{"ruleId":"670","severity":1,"message":"760","line":32,"column":8,"nodeType":"672","endLine":32,"endColumn":29,"suggestions":"761"},{"ruleId":"670","severity":1,"message":"762","line":31,"column":8,"nodeType":"672","endLine":31,"endColumn":29,"suggestions":"763"},"no-native-reassign",["764"],"no-negated-in-lhs",["765"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchDelete'. Either include it or remove the dependency array.","ArrayExpression",["766"],"React Hook useEffect has missing dependencies: 'errors' and 'fetchSms'. Either include them or remove the dependency array. You can also do a functional update 'setErrors(e => ...)' if you only need 'errors' in the 'setErrors' call.",["767"],"React Hook useEffect has a missing dependency: 'fetchValidation'. Either include it or remove the dependency array.",["768"],"React Hook useEffect has missing dependencies: 'fetchRestorePassword' and 'history'. Either include them or remove the dependency array.",["769"],"no-unused-vars","'isDuplicate' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'discountCode', 'fetchPostCart', and 'localStorageCart'. Either include them or remove the dependency array.",["770"],"React Hook useEffect has missing dependencies: 'basketDetails', 'fetchPathCart', and 'localStorageCart'. Either include them or remove the dependency array. You can also do a functional update 'setBasketDetails(b => ...)' if you only need 'basketDetails' in the 'setBasketDetails' call.",["771"],"React Hook useEffect has missing dependencies: 'basketDetails' and 'errors'. Either include them or remove the dependency array. You can also do a functional update 'setBasketDetails(b => ...)' if you only need 'basketDetails' in the 'setBasketDetails' call.",["772"],"React Hook useEffect has a missing dependency: 'fetchPostAddress'. Either include it or remove the dependency array.",["773"],"React Hook useEffect has a missing dependency: 'setBasketChange'. Either include it or remove the dependency array.",["774"],"React Hook useEffect has a missing dependency: 'fetchPayment'. Either include it or remove the dependency array.",["775"],"'updateResult' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["776"],["777"],["778"],"React Hook useEffect has missing dependencies: 'fetchSignup' and 'history'. Either include them or remove the dependency array.",["779"],"React Hook useEffect has missing dependencies: 'fetchPost' and 'history'. Either include them or remove the dependency array.",["780"],"React Hook useEffect has missing dependencies: 'history' and 'location'. Either include them or remove the dependency array.",["781"],"React Hook useEffect has missing dependencies: 'history', 'location.search', and 'searchStates.categories'. Either include them or remove the dependency array.",["782"],"'ShopLayout' is defined but never used.","'auth' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAddresses'. Either include it or remove the dependency array.",["783"],"React Hook useEffect has a missing dependency: 'getInfo'. Either include it or remove the dependency array.",["784"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["785"],"React Hook useEffect has missing dependencies: 'deleteAddress' and 'id'. Either include them or remove the dependency array.",["786"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["787"],"React Hook useEffect has missing dependencies: 'create_basket' and 'create_box'. Either include them or remove the dependency array.",["788"],"React Hook useEffect has missing dependencies: 'createAddress', 'values.address', 'values.city.id', 'values.code', 'values.email', 'values.mobileNumber', 'values.name', and 'values.state.id'. Either include them or remove the dependency array.",["789"],"React Hook useEffect has missing dependencies: 'applyCode', 'discountCode', and 'id'. Either include them or remove the dependency array.",["790"],"React Hook useEffect has missing dependencies: 'address.address', 'address.city', 'address.costumer_name', 'address.email', 'address.phone_number', 'address.post_code', 'address.state', 'details', 'id', and 'updateBasket'. Either include them or remove the dependency array.",["791"],"React Hook useEffect has a missing dependency: 'getIndex'. Either include it or remove the dependency array.",["792"],"'classes' is assigned a value but never used.","'setErrors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMaxStockNumber'. Either include it or remove the dependency array.",["793"],"React Hook useEffect has missing dependencies: 'history', 'id', 'updateInfo', 'values.city.id', 'values.email', 'values.name', and 'values.state.id'. Either include them or remove the dependency array.",["794"],"React Hook useEffect has a missing dependency: 'getCities'. Either include it or remove the dependency array.",["795"],"React Hook useEffect has a missing dependency: 'getStates'. Either include it or remove the dependency array.",["796"],"'FullScreenDialog' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchPostComment'. Either include it or remove the dependency array.",["797"],"React Hook useEffect has a missing dependency: 'images.length'. Either include it or remove the dependency array.",["798"],"React Hook useEffect has missing dependencies: 'createComment', 'id', and 'input'. Either include them or remove the dependency array.",["799"],["800"],"React Hook useEffect has a missing dependency: 'getSocialData'. Either include it or remove the dependency array.",["801"],"React Hook useEffect has missing dependencies: 'id', 'liking', 'status.dislike', and 'status.like'. Either include them or remove the dependency array.",["802"],["803"],["804"],"React Hook useEffect has a missing dependency: 'sendSms'. Either include it or remove the dependency array.",["805"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'signUp'. Either include it or remove the dependency array.",["806"],"React Hook useEffect has missing dependencies: 'restorePassword', 'values.mobileNumber', and 'values.password'. Either include them or remove the dependency array.",["807"],"React Hook useEffect has a missing dependency: 'sendResetSms'. Either include it or remove the dependency array.",["808"],"no-global-assign","no-unsafe-negation",{"desc":"809","fix":"810"},{"desc":"811","fix":"812"},{"desc":"813","fix":"814"},{"desc":"815","fix":"816"},{"desc":"817","fix":"818"},{"desc":"819","fix":"820"},{"desc":"821","fix":"822"},{"desc":"823","fix":"824"},{"desc":"825","fix":"826"},{"desc":"827","fix":"828"},{"desc":"829","fix":"830"},{"desc":"811","fix":"831"},{"desc":"813","fix":"832"},{"desc":"833","fix":"834"},{"desc":"835","fix":"836"},{"desc":"837","fix":"838"},{"desc":"839","fix":"840"},{"desc":"841","fix":"842"},{"desc":"843","fix":"844"},{"desc":"845","fix":"846"},{"desc":"847","fix":"848"},{"desc":"849","fix":"850"},{"desc":"851","fix":"852"},{"desc":"853","fix":"854"},{"desc":"855","fix":"856"},{"desc":"857","fix":"858"},{"desc":"859","fix":"860"},{"desc":"861","fix":"862"},{"desc":"863","fix":"864"},{"desc":"865","fix":"866"},{"desc":"867","fix":"868"},{"desc":"869","fix":"870"},{"desc":"871","fix":"872"},{"desc":"873","fix":"874"},{"desc":"869","fix":"875"},{"desc":"876","fix":"877"},{"desc":"878","fix":"879"},{"desc":"861","fix":"880"},{"desc":"871","fix":"881"},{"desc":"882","fix":"883"},{"desc":"884","fix":"885"},{"desc":"886","fix":"887"},{"desc":"888","fix":"889"},"Update the dependencies array to be: [loadingDeleteAddress, deleteAddressResult, fetchDelete]",{"range":"890","text":"891"},"Update the dependencies array to be: [errors, fetchSms, sendSmsLoading, sendSmsResult]",{"range":"892","text":"893"},"Update the dependencies array to be: [fetchValidation, validationLoading, validationResult]",{"range":"894","text":"895"},"Update the dependencies array to be: [fetchRestorePassword, history, restoreLoading, restoreResult]",{"range":"896","text":"897"},"Update the dependencies array to be: [discountCode, fetchPostCart, localStorageCart, postCartLoading, postCartResult]",{"range":"898","text":"899"},"Update the dependencies array to be: [basketDetails, fetchPathCart, localStorageCart, pathCartLoading, pathCartResult]",{"range":"900","text":"901"},"Update the dependencies array to be: [applyCodeLoading, applyCodeResult, basketDetails, errors]",{"range":"902","text":"903"},"Update the dependencies array to be: [fetchPostAddress, postAddressLoading, postAddressResult]",{"range":"904","text":"905"},"Update the dependencies array to be: [setBasketChange]",{"range":"906","text":"907"},"Update the dependencies array to be: [fetchPayment, paymentLoading, paymentResult]",{"range":"908","text":"909"},"Update the dependencies array to be: [loading, result, values]",{"range":"910","text":"911"},{"range":"912","text":"893"},{"range":"913","text":"895"},"Update the dependencies array to be: [fetchSignup, history, signupLoading, signupResult]",{"range":"914","text":"915"},"Update the dependencies array to be: [fetchPost, history, postLoading, postResult]",{"range":"916","text":"917"},"Update the dependencies array to be: [catsLoading, catsResult, history, location]",{"range":"918","text":"919"},"Update the dependencies array to be: [change, history, location.search, searchStates.categories]",{"range":"920","text":"921"},"Update the dependencies array to be: [fetch, getAddresses]",{"range":"922","text":"923"},"Update the dependencies array to be: [fetch, getInfo]",{"range":"924","text":"925"},"Update the dependencies array to be: [fetch, search, page, fromPrice, toPrice, hasDiscount, showCampaign, getProducts, history]",{"range":"926","text":"927"},"Update the dependencies array to be: [deleteAddress, fetch, id]",{"range":"928","text":"929"},"Update the dependencies array to be: [fetch, getCategories]",{"range":"930","text":"931"},"Update the dependencies array to be: [create_basket, create_box, fetch]",{"range":"932","text":"933"},"Update the dependencies array to be: [createAddress, fetch, values.address, values.city.id, values.code, values.email, values.mobileNumber, values.name, values.state.id]",{"range":"934","text":"935"},"Update the dependencies array to be: [applyCode, discountCode, fetch, id]",{"range":"936","text":"937"},"Update the dependencies array to be: [address.address, address.city, address.costumer_name, address.email, address.phone_number, address.post_code, address.state, details, fetch, id, updateBasket]",{"range":"938","text":"939"},"Update the dependencies array to be: [fetch, getIndex]",{"range":"940","text":"941"},"Update the dependencies array to be: [selectedSize, selectedColor, getMaxStockNumber]",{"range":"942","text":"943"},"Update the dependencies array to be: [fetch, history, id, updateInfo, values.city.id, values.email, values.name, values.state.id]",{"range":"944","text":"945"},"Update the dependencies array to be: [fetch, getCities, id]",{"range":"946","text":"947"},"Update the dependencies array to be: [fetch, getStates]",{"range":"948","text":"949"},"Update the dependencies array to be: [createCommentLoading, createCommentResult, fetchPostComment]",{"range":"950","text":"951"},"Update the dependencies array to be: [images.length, index]",{"range":"952","text":"953"},"Update the dependencies array to be: [createComment, fetch, id, input]",{"range":"954","text":"955"},{"range":"956","text":"951"},"Update the dependencies array to be: [fetch, getSocialData]",{"range":"957","text":"958"},"Update the dependencies array to be: [fetch, id, liking, status.dislike, status.like]",{"range":"959","text":"960"},{"range":"961","text":"943"},{"range":"962","text":"953"},"Update the dependencies array to be: [fetch, mobileNumber, sendSms]",{"range":"963","text":"964"},"Update the dependencies array to be: [fetch, signUp, values]",{"range":"965","text":"966"},"Update the dependencies array to be: [fetch, mobileNumber, restorePassword, values.mobileNumber, values.password]",{"range":"967","text":"968"},"Update the dependencies array to be: [fetch, mobileNumber, sendResetSms]",{"range":"969","text":"970"},[1973,2016],"[loadingDeleteAddress, deleteAddressResult, fetchDelete]",[2895,2926],"[errors, fetchSms, sendSmsLoading, sendSmsResult]",[3241,3278],"[fetchValidation, validationLoading, validationResult]",[3588,3619],"[fetchRestorePassword, history, restoreLoading, restoreResult]",[8859,8892],"[discountCode, fetchPostCart, localStorageCart, postCartLoading, postCartResult]",[9636,9669],"[basketDetails, fetchPathCart, localStorageCart, pathCartLoading, pathCartResult]",[10263,10298],"[applyCodeLoading, applyCodeResult, basketDetails, errors]",[10435,10474],"[fetchPostAddress, postAddressLoading, postAddressResult]",[10558,10560],"[setBasketChange]",[10723,10754],"[fetchPayment, paymentLoading, paymentResult]",[2843,2860],"[loading, result, values]",[3237,3268],[3584,3621],[3921,3950],"[fetchSignup, history, signupLoading, signupResult]",[1508,1533],"[fetchPost, history, postLoading, postResult]",[4227,4252],"[catsLoading, catsResult, history, location]",[6393,6401],"[change, history, location.search, searchStates.categories]",[733,740],"[fetch, getAddresses]",[771,778],"[fetch, getInfo]",[2267,2348],"[fetch, search, page, fromPrice, toPrice, hasDiscount, showCampaign, getProducts, history]",[918,925],"[deleteAddress, fetch, id]",[1043,1050],"[fetch, getCategories]",[2194,2201],"[create_basket, create_box, fetch]",[1283,1290],"[createAddress, fetch, values.address, values.city.id, values.code, values.email, values.mobileNumber, values.name, values.state.id]",[969,976],"[applyCode, discountCode, fetch, id]",[1426,1433],"[address.address, address.city, address.costumer_name, address.email, address.phone_number, address.post_code, address.state, details, fetch, id, updateBasket]",[997,1004],"[fetch, getIndex]",[1584,1613],"[selectedSize, selectedColor, getMaxStockNumber]",[1245,1252],"[fetch, history, id, updateInfo, values.city.id, values.email, values.name, values.state.id]",[715,726],"[fetch, getCities, id]",[698,705],"[fetch, getStates]",[1636,1679],"[createCommentLoading, createCommentResult, fetchPostComment]",[2887,2894],"[images.length, index]",[998,1005],"[createComment, fetch, id, input]",[1658,1701],[752,759],"[fetch, getSocialData]",[965,972],"[fetch, id, liking, status.dislike, status.like]",[1416,1445],[1809,1816],[927,948],"[fetch, mobileNumber, sendSms]",[1186,1203],"[fetch, signUp, values]",[1038,1059],"[fetch, mobileNumber, restorePassword, values.mobileNumber, values.password]",[951,972],"[fetch, mobileNumber, sendResetSms]"]